aspect PullUpMembers {
	public void TypeDecl.pullUpMembers(MethodDecl[] meths, boolean[] makeAbstract, FieldDeclaration[] fields, MemberTypeDecl[] membertypes) {
		throw new RefactoringException("can only pull up from classes");
	}
	
	public void ClassDecl.pullUpMembers(MethodDecl[] meths, boolean[] makeAbstract, FieldDeclaration[] fields, MemberTypeDecl[] membertypes) {
		for(int i=0;i<meths.length;++i)
			meths[i].pullUp(makeAbstract[i]);
		for(int i=0;i<fields.length;++i)
			fields[i].moveTo(superclass());
		for(int i=0;i<membertypes.length;++i)
			membertypes[i].moveTo(superclass());
	}
	
	public void TypeDecl.doPullUpMembers(MethodDecl[] meths, boolean[] makeAbstract, FieldDeclaration[] fields, MemberTypeDecl[] membertypes) {
		pullUpMembers(meths, makeAbstract, fields, membertypes);
		programRoot().eliminate(LOCKED_DATAFLOW, LOCKED_NAMES);
	}
}