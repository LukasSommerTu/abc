import changes.*;
import main.FileRange;
import java.util.*;

aspect RenameParameter {
	
	// checks that the renaming doesn't lead to a name clash
	inh RefactoringException ParameterDeclaration.canRenameTo(String new_name);
	
	eq Methodoid.getParameter().canRenameTo(String new_name) {
		if(!parameterDeclaration(new_name).isEmpty())
			return new RefactoringException("parameter of the same name exists");
		if(this.hasBody())
			return getBlock().acceptLocal(new_name);
		return null;
	}
	
	eq CatchClause.getParameter().canRenameTo(String new_name) {
		return getBlock().acceptLocal(new_name);
	}
	
	public void ParameterDeclaration.rename(String new_name) throws RefactoringException {
		if(getID().equals(new_name))
			return;
		RefactoringException e = canRenameTo(new_name);
		if(e != null)
			throw e;
		AdjustmentTable table = find_uses(new_name);
		changeID(new_name);
		programRoot().clear();
		table.adjust();
	}
	
}