aspect UndoSettersAutogenerated {
// AUTOGENERATED

	refine java public void VarAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BoundFieldAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void MethodAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BoundMethodAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParMethodAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ConstructorAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void SuperConstructorAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParSuperConstructorAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParConstructorAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void TypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BoundTypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BytecodeTypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void PrimitiveTypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ArrayTypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ArrayTypeWithSizeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ThisAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void SuperAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParseName.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void PackageOrTypeAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void AmbiguousAccess.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void TypeDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ReferenceType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void NullType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void VoidType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void AbstractWildcardType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void WildcardExtendsType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void WildcardSuperType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ClassDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void UnknownType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ArrayDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParClassDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void RawClassDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ClassDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void InterfaceDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void AnnotationDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParInterfaceDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void RawInterfaceDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void InterfaceDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void AnonymousDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ConstructorDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void GenericConstructorDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParConstructorDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void RawConstructorDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ConstructorDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void FieldDeclaration.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void FieldDeclarationSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void FreshField.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void VariableDeclaration.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void FreshLocalVariable.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParameterDeclaration.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void VariableArityParameterDeclaration.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void VariableArityParameterDeclarationSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void FreshParameter.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void MethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void GenericMethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ParMethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void RawMethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void AnnotationMethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void MethodDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BridgeMethodDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void IdUse.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void Modifier.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine StaticImports public void SingleStaticImportDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Enums public void EnumDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Enums public void EnumConstant.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void GenericClassDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void GenericClassDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void GenericInterfaceDecl.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void GenericInterfaceDeclSubstituted.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void TypeVariable.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void LUBType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Generics public void GLBType.setID(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_ID;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void PrimitiveTypeAccess.setName(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Name;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine Annotations public void ElementValuePair.setName(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Name;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine PackageDecl public void PackageDecl.setName(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Name;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void TypeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BoundTypeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void BytecodeTypeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void PrimitiveTypeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ArrayTypeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void ArrayTypeWithSizeAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	

	refine java public void PackageAccess.setPackage(String value) {
		if (Program.isRecordingUndo()) {
			final String v = tokenString_Package;
			Program.addUndoAction(new ASTModification() {
				public void undo() {
					refined(v);
				}
			});
		}
		refined(value);
	}
	
}
