aspect ControlFlow {
	private Map<ASTNode, SmallSet<ASTNode>> AdjustmentTable.preds;
	private Map<ASTNode, SmallSet<ASTNode>> AdjustmentTable.succs;

	refine AdjustAccess public AdjustmentTable.AdjustmentTable(Program program) {
		refined(program);
		preds = new HashMap<ASTNode, SmallSet<ASTNode>>();
		succs = new HashMap<ASTNode, SmallSet<ASTNode>>();
	}

	public void AdjustmentTable.addCFlow(ASTNode node) {
		preds.put(node, node.weakPred());
		succs.put(node, node.weakSucc());
	}
	
	refine AdjustAccess public void AdjustmentTable.adjust() throws RefactoringException {
		refined();
		if(!preds.isEmpty())
			flushCaches();
		for(ASTNode node : preds.keySet()) {
			if(!preds.get(node).equals(node.weakPred())) {
				SmallSet<ASTNode> oldpred = preds.get(node);
				SmallSet<ASTNode> newpred = node.weakPred();
				throw new RefactoringException("Could not preserve cflow into "+node);
			}
			if(!succs.get(node).equals(node.weakSucc())) {
				SmallSet<ASTNode> oldsucc = succs.get(node);
				SmallSet<ASTNode> newsucc = node.weakSucc();
				throw new RefactoringException("Could not preserve cflow out of "+node);
			}
		}
	}

	syn boolean ASTNode.isPureCFlowNode() = false;
	eq Block.isPureCFlowNode() = true;
	eq TypeAccess.isPureCFlowNode() = true;
	eq ExprStmt.isPureCFlowNode() = true;
	eq ReturnStmt.isPureCFlowNode() = true;
	eq IfStmt.isPureCFlowNode() = true;
	// there could be many more here

	syn lazy SmallSet<ASTNode> ASTNode.weakSucc() {
		SmallSet<ASTNode> res = SmallSet.empty();
		for(ASTNode n : succ())
			if(n.isPureCFlowNode())
				res = res.union(n.weakSucc());
			else
				res = res.union(n);
		return res;
	}

	syn lazy SmallSet<ASTNode> ASTNode.weakPred() {
		SmallSet<ASTNode> res = SmallSet.empty();
		for(ASTNode n : pred())
			if(n.isPureCFlowNode())
				res = res.union(n.weakPred());
			else
				res = res.union(n);
		return res;
	}

	// lock all CFlow in a subtree (all = for expressions and statements)
	public void ASTNode.lockAllCFlow(AdjustmentTable table) {
		for(int i = 0; i < getNumChildNoTransform(); i++) {
			ASTNode node = getChildNoTransform(i);
			if(node != null) 
				node.lockAllCFlow(table);
		}
	}
	public void Stmt.lockAllCFlow(AdjustmentTable table) {
		super.lockAllCFlow(table);
		table.addCFlow(this);
	}
	public void Expr.lockAllCFlow(AdjustmentTable table) {
		super.lockAllCFlow(table);
		table.addCFlow(this);
	}
}