/*
 * The Rename Field refactoring. Like most name-based refactoring, it proceeds in
 * four steps:
 *   1. check preconditions (here: is there a field of the same name already?) 
 *   2. find uses of the field being renamed, and of everything that might be
 *      shadowed by the newly renamed field
 *   3. do the renaming
 *   4. adjust all uses collected in step 2
 */

aspect RenameField {

	public void FieldDeclaration.rename(String new_name) throws RefactoringException {
		if(getID().equals(new_name))
			// haha, very funny
			return;
		if(!hostType().localFields(new_name).isEmpty())
			throw new RefactoringException("couldn't rename: field name clash");
		AdjustmentTable table = find_uses(new_name);
		changeID(new_name);
		programRoot().clear();
		table.adjust();
	}

}