aspect LocalVariable {
	// for the purposes of refactoring, local variables include parameters
	interface LocalDeclaration extends Variable {
		public BodyDecl enclosingBodyDecl();
	}
	
	VariableDeclaration implements LocalDeclaration;
	ParameterDeclaration implements LocalDeclaration;
	
	public ParameterDeclaration LocalDeclaration.asLockedParameterDeclaration();
	public ParameterDeclaration ParameterDeclaration.asLockedParameterDeclaration() {
		return (ParameterDeclaration)lockedCopy();
	}
	public ParameterDeclaration VariableDeclaration.asLockedParameterDeclaration() {
		return new ParameterDeclaration((Modifiers)getModifiers().fullCopy(), type().createLockedAccess(), name());
	}
	
	// determine all references to local declarations in a subtree
	public java.util.Set<VarAccess> ASTNode.localVarAccesses() {
		java.util.Set<VarAccess> res = new LinkedHashSet<VarAccess>();
		localVarAccesses(res);
		return res;
	}

	public void ASTNode.localVarAccesses(java.util.Set<VarAccess> res) {
		for(int i=0;i<getNumChild();++i) {
			ASTNode child = getChild(i);
			if(child != null)
				child.localVarAccesses(res);
		}
	}
	
	public void VarAccess.localVarAccesses(java.util.Set<VarAccess> res) {
		if(decl() instanceof LocalDeclaration)
			res.add(this);
		super.localVarAccesses(res);
	}	
}