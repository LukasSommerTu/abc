
aspect LocalDeclaration {
	
	// a local declaration is either a variable declaration or a parameter declaration
	
	interface LocalDeclaration extends Named { 
		Access getTypeAccess();
		TypeDecl type();
		String name();
		void setID(String name);
		Modifiers getModifiers();
		Block getBlock();
		ParameterDeclaration asParameterDeclaration();
		VariableDeclaration asVariableDeclaration();
	}
	
	ParameterDeclaration implements LocalDeclaration;
	VariableDeclaration implements LocalDeclaration;
	
	public ParameterDeclaration ParameterDeclaration.asParameterDeclaration() {
		return (ParameterDeclaration)fullCopy();
	}
	
	public ParameterDeclaration VariableDeclaration.asParameterDeclaration() {
		ParameterDeclaration res = new ParameterDeclaration((Access)getTypeAccess().fullCopy(), getID());
		res.setModifiers((Modifiers)getModifiers().fullCopy());
		return res;
	}
	
	public VariableDeclaration ParameterDeclaration.asVariableDeclaration() {
		VariableDeclaration res = new VariableDeclaration((Access)getTypeAccess().fullCopy(), getID());
		res.setModifiers((Modifiers)getModifiers().fullCopy());
		return res;
	}
	
	public VariableDeclaration VariableDeclaration.asVariableDeclaration() {
		return (VariableDeclaration)fullCopy();
	}
	
	public ParameterDeclaration LocalDeclaration.asLockedParameterDeclaration(AdjustmentTable table);
	public ParameterDeclaration ParameterDeclaration.asLockedParameterDeclaration(AdjustmentTable table) {
		return (ParameterDeclaration)copyAndLock(table);
	}
	public ParameterDeclaration VariableDeclaration.asLockedParameterDeclaration(AdjustmentTable table) {
		ParameterDeclaration res = new ParameterDeclaration(type().getLockedAccess(table), name());
		res.setModifiers((Modifiers)getModifiers().fullCopy());
		return res;
	}
	
	public VariableDeclaration LocalDeclaration.asLockedVariableDeclaration(AdjustmentTable table);
	public VariableDeclaration ParameterDeclaration.asLockedVariableDeclaration(AdjustmentTable table) {
		VariableDeclaration res = new VariableDeclaration(type().getLockedAccess(table), name());
		res.setModifiers((Modifiers)getModifiers().fullCopy());
		return res;
	}
	public VariableDeclaration VariableDeclaration.asLockedVariableDeclaration(AdjustmentTable table) {
		return (VariableDeclaration)copyAndLock(table);
	}

	inh lazy Block ParameterDeclaration.getBlock();
	eq MethodDecl.getParameter().getBlock() = getBlock();
	eq ConstructorDecl.getParameter().getBlock() = getBlock();
	eq CatchClause.getParameter().getBlock() = getBlock();

	inh lazy Block Stmt.hostBlock();
	eq Block.getStmt().hostBlock() = this;
	eq ConstructorDecl.getConstructorInvocation().hostBlock() = getBlock();

	syn lazy Block VariableDeclaration.getBlock() = hostBlock();
}
