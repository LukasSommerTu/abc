aspect LanguageExtensions {
	abstract class LanguageExtension {
		private String name;
		
		public LanguageExtension(String name) { 
			this.name = name;
		}
		
		public String toString() {
			return name;
		}
		
		public abstract ASTNode eliminateOn(ASTNode node);
	}

	public void ASTNode.eliminate(LanguageExtension... les) {
		flushCaches();
		for(LanguageExtension le : les)
			eliminate(le);
	}
	
	protected void ASTNode.eliminate(LanguageExtension le) {
		flushCache();
		for(int i=0;i<getNumChild();++i) {
			ASTNode child = getChild(i);			
			ASTNode new_child = le.eliminateOn(child);
			setChild((T)new_child, i);
			new_child.eliminate(le);
		}
	}
}