import java.util.*;

/*
 * The Rename Local Variable refactoring; basic steps are as with Rename Field.
 */

aspect RenameLocalVariable {
	
	interface Initializer {
		Block getBlock();
	}
	
	InstanceInitializer implements Initializer;
	StaticInitializer implements Initializer;
	
	// checks that the renaming doesn't lead to a name clash
	private RefactoringException VariableDeclaration.canRenameTo(String new_name) {
		BodyDecl bd = hostBodyDecl();
		if(bd instanceof Methodoid) {
			Methodoid m = (Methodoid)bd;
			if(!m.parameterDeclaration(new_name).isEmpty())
				return new RefactoringException("parameter of the same name exists");
			if(m.hasBody())
				return m.getBlock().acceptLocal(new_name);
		} else if(bd instanceof Initializer) {
			return ((Initializer)bd).getBlock().acceptLocal(new_name);
		} else {
			assert(false);
		}
		return null;
	}
	
	public void VariableDeclaration.rename(String new_name) throws RefactoringException {
		if(getID().equals(new_name))
			return;
		RefactoringException e = canRenameTo(new_name);
		if(e != null) throw e;
		AdjustmentTable table = find_uses(new_name);
		changeID(new_name);
		programRoot().flushCaches();
		table.adjust();
	}
	
}
