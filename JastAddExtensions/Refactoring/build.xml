<!--
 Targets for working from terminal window:
       build (default) - generates java files and compiles them
       clean           - removes all generated files and class files
 Targets for working from Eclipse:
       gen             - generates java files
       genClean        - removes all generated files and their class files
-->
<project name="Refactoring" default="build">

<!-- location of Java1.4Frontend -->
<property name="Java1.4Frontend" value="../Java1.4Frontend"/>
<!-- location of Java1.5Frontend -->
<property name="Java1.5Frontend" value="../Java1.5Frontend"/>
<!-- location of ControlFlowGraph -->
<property name="ControlFlowGraph" value="../ControlFlowGraph"/>
<!-- location of self -->
<property name="Refactoring" value="."/>

<!-- "package" is the directory where generated files will be stored -->
<property name="package" value="AST"/>

<!-- "tools" is the directory where generators and libraries are located. -->
<property name="tools" value="${Java1.4Frontend}/tools"/>
	
<!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
<taskdef name="jflex" classname="JFlex.anttask.JFlexTask" classpath="${tools}/JFlex.jar"/>
<!-- "beaver" is an ant task class for the parser generator in beaver.jar -->
<taskdef name="beaver" classname="beaver.comp.run.AntTask" classpath="${tools}/beaver.jar"/>
<!-- "jastadd" is an ant task class in jastadd2.jar -->
<taskdef name="jastadd" classname="jastadd.JastAddTask" classpath="${tools}/jastadd2.jar"/>

<!-- compile sources -->
<target name="build" depends="gen">
	<javac debug="true" nowarn="true" srcdir="." classpath=".:${tools}/beaver-rt.jar:${tools}/junit.jar">
	  <include name="**/*.java"/>
	  <exclude name="tests/eclipse/ChangeSignature/can*/**"/>
	  <exclude name="tests/eclipse/ConvertAnonymousToNested/can*/**"/>
          <exclude name="tests/eclipse/ExtractClass/test*/**"/>
          <exclude name="tests/eclipse/ExtractConstant/can*/**"/>
          <exclude name="tests/eclipse/ExtractTemp/can*/**"/>
          <exclude name="tests/eclipse/InlineConstant/can*/**"/>
          <exclude name="tests/eclipse/InlineMethodWorkspace/TestCases/**"/>
          <exclude name="tests/eclipse/InlineTemp/can*/**"/>
          <exclude name="tests/eclipse/IntroduceFactory/Bugzilla/*/**"/>
          <exclude name="tests/eclipse/IntroduceFactory/negative/*"/>
          <exclude name="tests/eclipse/IntroduceFactory/positive/*"/>
          <exclude name="tests/eclipse/IntroduceIndirection/test*/**"/>
          <exclude name="tests/eclipse/IntroduceParameter/invalid/**"/>
          <exclude name="tests/eclipse/IntroduceParameter/simple/**"/>
          <exclude name="tests/eclipse/IntroduceParameterObject/test*/**"/>
          <exclude name="tests/eclipse/MoveInnerToTopLevel/test*/**"/>
          <exclude name="tests/eclipse/MoveInstanceMethod/can*/**"/>
          <exclude name="tests/eclipse/MoveMembers/test*/**"/>
          <exclude name="tests/eclipse/PromoteTempToField/can*/**"/>
          <exclude name="tests/eclipse/PromoteTempToField/test*/**"/>
          <exclude name="tests/eclipse/PullUp/test*/**"/>
          <exclude name="tests/eclipse/PushDown/test*/**"/>
          <exclude name="tests/eclipse/RenamePackage/test*/**"/>
          <exclude name="tests/eclipse/SelfEncapsulateField/tests/**"/>
	</javac>
</target>

<!-- generate compiler source files and compile sources; change
     to scanner1.4 and parser1.4 to build a compiler that accepts Java 1.4 as
     input language -->
<target name="gen" depends="scanner1.5,parser1.5">
  <!-- create AST node types and weave aspect modules -->
  <jastadd package="${package}" rewrite="true" beaver="true" novisitcheck="true" noCacheCycle="true"
  	       outdir="${basedir}" debug="false">
		<fileset dir="${Java1.4Frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/> 
			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${Java1.5Frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${ControlFlowGraph}">
		    <include name="Nodes.ast"/>
			<include name="ControlFlowGraph.jrag"/>
			<include name="Sets.jrag"/>
			<include name="Exceptions.jrag"/>
			<include name="Alias.jrag"/>
			<include name="ReachingDefinitions.jrag"/>
			<include name="DotGeneration.jrag"/>
		</fileset>
		<fileset dir="${Refactoring}/util">
		        <include name="**/*.ast"/>
		        <include name="**/*.jrag"/>
		        <include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${Refactoring}">
		        <include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="util/**"/>
		</fileset>
  </jastadd>
  <!-- copy library files-->
  <copy todir="beaver" preservelastmodified="true">
    <fileset dir="${Java1.4Frontend}/beaver">
      <include name="**/*.java"/>
    </fileset>
  </copy>
</target>

<target name="scanner1.4">
  <!-- compose the scanner -->
  <concat destfile="scanner/JavaScanner.flex" binary="true" force="false">
    <filelist dir="${Refactoring}">
        <file name="util/preamble.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="macros.flex"/>
      <file name="rules_preamble.flex"/>
    </filelist>
    <filelist dir="${Refactoring}">
      <file name="util/WhiteSpace.flex"/>
      <file name="util/Comments.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Keywords.flex"/>
      <file name="Literals.flex"/>
      <file name="Separators.flex"/>
      <file name="Operators.flex"/>
      <file name="Identifiers.flex"/>
      <file name="postamble.flex"/>
    </filelist>
  </concat>
  <!-- generate the scanner -->
  <jflex file="scanner/JavaScanner.flex" outdir="scanner" nobak="yes"/>
  <copy todir="scanner" file="${Java1.4Frontend}/scanner/Unicode.java" preservelastmodified="true"/>
</target>

<target name="scanner1.5">
  <mkdir dir="scanner"/>
  <concat destfile="scanner/JavaScanner.flex" binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="macros.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15macros.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="rules_preamble.flex"/>
    </filelist>
    <filelist dir="${Refactoring}">
      <file name="util/WhiteSpace.flex"/>
      <file name="util/Comments.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Keywords.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15keywords.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Literals.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15literals.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Separators.flex"/>
      <file name="Operators.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15operators.flex"/>
      <file name="java15identifiers.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="postamble.flex"/>
    </filelist>
  </concat>
  <jflex file="scanner/JavaScanner.flex" outdir="scanner" nobak="yes"/>
  <copy todir="scanner" file="${Java1.4Frontend}/scanner/Unicode.java" preservelastmodified="true"/>
</target>

<target name="parser1.4">
  <mkdir dir="parser"/>
  <!-- generate the parser phase 1, create a full .lalr specification from fragments-->
  <concat destfile="parser/JavaParser.all" binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.parser"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}">
      <file name="parser/java14.parser"/>
      <file name="parser/errorrecovery.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
  <java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar" classname="Main" fork="true">
    <arg line="parser/JavaParser.all parser/JavaParser.beaver"/>
  </java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="parser/JavaParser.beaver" terminalNames="yes" compress="yes" useSwitch="yes"/>
</target>

<target name="parser1.5">
  <mkdir dir="parser"/>
  <!-- generate the parser phase 1, create a full .lalr specification from fragments-->
  <concat destfile="parser/JavaParser.all" binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.parser"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}">
      <file name="parser/java14.parser"/>
      <file name="parser/errorrecovery.parser"/>
    </filelist>
    <fileset dir="${Java1.5Frontend}">
      <include name="*.parser"/>
    </fileset>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
  <java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar" classname="Main" fork="true">
    <arg line="parser/JavaParser.all parser/JavaParser.beaver"/>
  </java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="parser/JavaParser.beaver" terminalNames="yes" compress="yes" useSwitch="yes"/>
</target>

<!-- remove generated source files and .class files -->
<target name="clean" depends="cleanGen">
    <!-- delete all .class files recursively -->
    <delete>
      <fileset dir="." includes="**/*.class"/>
      <fileset file="Refactoring.jar"/>
    </delete>
</target>

<!-- remove generated source files and .class files -->
<target name="cleanGen">
    <delete dir="${package}"/>
    <delete dir="beaver"/>
    <delete>
      <fileset dir="scanner" includes="JavaScanner.flex"/>
      <fileset dir="scanner" includes="JavaScanner.java"/>
      <fileset dir="scanner" includes="Unicode.java"/>
      <fileset dir="parser" includes="JavaParser.java"/>
      <fileset dir="parser" includes="JavaParser.beaver"/>
      <fileset dir="parser" includes="JavaParser.all"/>
    </delete>
</target>

<target name="dist" depends="clean">
  <jar destfile="Refactoring.jar">
    <zipfileset dir=".."
		prefix="JastAddJRefactoring/">
      <include name="Java1.4Frontend/**"/>
      <include name="Java1.5Frontend/**"/>
      <include name="ControlFlowGraph/Nodes.ast"/>
      <include name="ControlFlowGraph/ControlFlowGraph.jrag"/>
      <include name="ControlFlowGraph/Sets.jrag"/>
      <include name="ControlFlowGraph/Exceptions.jrag"/>
      <include name="ControlFlowGraph/Alias.jrag"/>
      <include name="ControlFlowGraph/ReachingDefinitions.jrag"/>
      <include name="Refactoring/**"/>
      <exclude name="**/*.class"/>
      <exclude name="Refactoring/doc/**"/>
    </zipfileset>
  </jar>
</target>

<target name="test" depends="build">
  <java 
     classname="junit.awtui.TestRunner"
     classpath=".:tools/junit.jar" 
     fork="true" 
     maxmemory="4096M">
    <arg line="tests.AllTests"/>
  </java>
</target>
</project>

