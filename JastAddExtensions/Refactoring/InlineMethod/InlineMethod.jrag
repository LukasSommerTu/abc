aspect InlineMethod {
	
	public void MethodAccess.inline() {
		ASTNode n = inlineToAnonymousMethod().introduceOutParameter().open().inline();
		if(n instanceof Block)
			((Block)n).inline();
	}
	
	public void MethodDecl.doInline(boolean delete) {
		TypeDecl host = hostType();
		int idx = host.getBodyDeclList().getIndexOfChild(this);
		for(MethodAccess ma : this.polyUses())
			ma.doInline();
		if(delete) {
			MethodDecl md = (MethodDecl)host.getBodyDecl(idx);
			try { md.removeUnused(); } catch(RefactoringException rfe) { }			
		}
	}
	
	public void MethodAccess.doInline() {
    	Program root = programRoot();
		inline();
		root.eliminate(WITH_STMT, FRESH_VARIABLES, LOCKED_NAMES);
	}
}