package AST;

aspect Caching {

  interface CacheRoot {
    void flushCaches();
    int getLastFlushed();
  }

  CompilationUnit implements CacheRoot;
  private int CompilationUnit.last_flushed = 0;
  public int CompilationUnit.getLastFlushed() { return last_flushed; }
  public void CompilationUnit.invalidate() {
    ++last_flushed;
  }

  Program implements CacheRoot;
  private int Program.last_flushed = 0;
  public int Program.getLastFlushed() { return last_flushed; }
  public void Program.invalidate() {
    ++last_flushed;
  }
  public void Program.flushCaches() {
    flushCache();
    getChildNoTransform(0).flushCache();
  }

  public CacheRoot ASTNode.getCacheRoot() {
    ASTNode n = this;
    while(n != null && !(n instanceof CacheRoot))
      n = n.parent;
    return (CacheRoot)n;
  }
}