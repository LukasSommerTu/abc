aspect Compile {
  Program implements org.jastadd.plugin.jastaddj.AST.IProgram;
  TypeDecl implements org.jastadd.plugin.jastaddj.AST.ITypeDecl;

  // flush 
  public void Program.flushSourceFiles(String name) {
  	if(name != null)
  	  files.remove(name);
  	  
    List list = new List();
    for(int i = 0; i < getNumCompilationUnit(); i++) {
    	CompilationUnit cu = getCompilationUnit(i);
    	String pathName = cu.pathName();
    	if(!cu.fromSource() || name != null && !name.equals(pathName)) {
    		list.add(cu);
    		files.remove(pathName);
    	}
    }
    setCompilationUnitList(list);
    flushAttributes();
  }
  
  public void ASTNode.flushAttributes() {
    flushCache();
    for(int i = 0; i < getNumChild(); i++)
      if(getChildNoTransform(i) != null)
        getChildNoTransform(i).flushAttributes();
  }
  
  public void Program.addSourceFile(String name, String contents) {
    try {
  	  java.io.InputStream is = new java.io.ByteArrayInputStream(contents.getBytes());
      CompilationUnit u = javaParser.parse(is, name);
      is.close();
       
      u.setPathName(name);
      u.setRelativeName(name);
      u.setFromSource(true);
      addCompilationUnit(u);
    } catch(Exception e) {
    }
  }
}