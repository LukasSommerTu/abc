aspect MainDeclaration {
  
  syn ClassDecl[] Program.mainTypes() {
    LinkedList list = new LinkedList();
    for (int i = 0; i < getNumCompilationUnit(); i++) {
      CompilationUnit unit = getCompilationUnit(i);
      for (int k = 0; k < unit.getNumTypeDecl(); k++) {
         TypeDecl decl = unit.getTypeDecl(k);
         if (decl.hasMainType()) { 
           list.add(decl);
         }
      }
    }
    ClassDecl[] result = new ClassDecl[list.size()];
    int i = 0;
    for (Iterator itr = list.iterator(); itr.hasNext(); i++) {
      result[i] = (ClassDecl)itr.next();
    }
    return result;
  }
  
  syn boolean TypeDecl.hasMainType() = false;
  
  eq ClassDecl.hasMainType() {
    boolean hasMain = false;
    
    for (int i = 0; i < getNumBodyDecl(); i++) {
      BodyDecl decl = getBodyDecl(i);
       
      // Currently main methods in inner classes are not considered.
      if (decl instanceof MethodDecl) {
        MethodDecl mDecl = (MethodDecl)decl;
        if (mDecl.getID().equals("main")) {
          hasMain = true;
        }
      } 
    }
    return hasMain;
  }
  
}