aspect HoverComments {
  
  syn String ASTNode.javaDocComment() = "No comment";
  
  syn String ASTNode.hoverComment() = "[" + ASTNode.getLine(getStart()) + "," + ASTNode.getColumn(getStart()) + "->" + 
       ASTNode.getLine(getEnd()) + "," + ASTNode.getColumn(getEnd()) + "]";
  eq MethodDecl.hoverComment() {
     StringBuffer res = new StringBuffer(type().typeName());
     res.append(" " + name() + "(");
     for (int i = 0; i < getNumParameter(); i++) {
       res.append(getParameter(i).type().typeName());
       if (i != 0) {
         res.append(",");
       }
     } 
     res.append(")");
     String javaDoc = javaDocComment();
     if (javaDoc != null) 
       res.append("\n\n" + javaDoc);
     return res.toString();
  }
  eq ConstructorDecl.hoverComment() {
     StringBuffer res = new StringBuffer(name() + "(");
     for (int i = 0; i < getNumParameter(); i++) {
       res.append(getParameter(i).type().typeName());
       if (i != 0) {
         res.append(",");
       }
     } 
     res.append(")");
     String javaDoc = javaDocComment();
     if (javaDoc != null) 
       res.append("\n\n" + javaDoc);
     return res.toString();
  }
  eq FieldDeclaration.hoverComment() {
     StringBuffer res = new StringBuffer(type().typeName());
     res.append(" " + name());
     return res.toString();
  }  
  eq MethodAccess.hoverComment() = decl().hoverComment();
  eq TypeAccess.hoverComment() = decl().hoverComment();
  eq TypeDecl.hoverComment() = typeName();
}