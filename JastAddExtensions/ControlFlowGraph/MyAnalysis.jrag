aspect MyAnalysis {
  syn boolean Stmt.isEmptyStmt() = false;
  eq EmptyStmt.isEmptyStmt() = true;

  syn lazy int CFGNode.uniqueIndex();

  public static int Stmt.uniqueIndex = 0;
  eq Stmt.uniqueIndex() = uniqueIndex++;
  eq Expr.uniqueIndex() = Stmt.uniqueIndex++;

  eq Stmt.dumpString() {
    StringBuffer buf = new StringBuffer();
    buf.append(super.dumpString());
    buf.append(" <** " + uniqueIndex() + " -> {");
    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
      CFGNode node = (CFGNode)iter.next();
      buf.append(node.uniqueIndex() + " ");
    }
    buf.append("} **>");
    
/*    //Liveness
    buf.append(" IN{");
    for(Iterator iter = in().iterator(); iter.hasNext(); ) {
      CFGNode in = (CFGNode)iter.next();
      buf.append(in + ", ");
    }
    buf.append("} ");
    
    buf.append(" OUT{");
    for(Iterator iter = out().iterator(); iter.hasNext(); ) {
      CFGNode out = (CFGNode)iter.next();
      buf.append(out + ", ");
    }
    buf.append("} ");
*/    
 /*   
    //Nullness
    buf.append(" IN{");
    for(Iterator iter = in_null().iterator(); iter.hasNext(); ) {
      CFGNode in = (CFGNode)iter.next();
      buf.append(in + ", ");
    }
    buf.append("} ");
    
    buf.append(" OUT{");
    for(Iterator iter = out_null().iterator(); iter.hasNext(); ) {
      CFGNode out = (CFGNode)iter.next();
      buf.append(out + ", ");
    }
    buf.append("} ");
  */  
    
    
    return buf.toString();
  }
  
  eq Expr.dumpString() {
    StringBuffer buf = new StringBuffer();
    buf.append(super.dumpString());
    buf.append(" <* " + uniqueIndex() + " -> {");
    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
      CFGNode node = (CFGNode)iter.next();
      buf.append(node.uniqueIndex() + " ");
    }
    buf.append("} *>");
    
 /*   //Liveness
    buf.append(" IN{");
    for(Iterator iter = in().iterator(); iter.hasNext(); ) {
      CFGNode in = (CFGNode)iter.next();
      buf.append(in + ", ");
    }
    buf.append("} ");
    
    buf.append(" OUT{");
    for(Iterator iter = out().iterator(); iter.hasNext(); ) {
      CFGNode out = (CFGNode)iter.next();
      buf.append(out + ", ");
    }
    buf.append("} ");
   */ 
    
    
    
    return buf.toString();
  }

  refine PrettyPrint eq VarAccess.dumpString() {
    StringBuffer buf = new StringBuffer();
    buf.append(PrettyPrint.VarAccess.dumpString());
    buf.append(" <* " + uniqueIndex() + " -> {");
    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
      CFGNode node = (CFGNode)iter.next();
      buf.append(node.uniqueIndex() + " ");
    }
    buf.append("} *>");
    return buf.toString();
  }
  
  //add
  refine PrettyPrint eq MethodAccess.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.MethodAccess.dumpString());
	    buf.append(" <* " + uniqueIndex() + " -> {");
	    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
	      CFGNode node = (CFGNode)iter.next();
	      buf.append(node.uniqueIndex() + " ");
	    }
	    buf.append("} *>");
	    return buf.toString();
  }
  

  refine PrettyPrint eq Literal.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.Literal.dumpString());
	    buf.append(" <* " + uniqueIndex() + " -> {");
	    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
	      CFGNode node = (CFGNode)iter.next();
	      buf.append(node.uniqueIndex() + " ");
	    }
	    buf.append("} *>");
	    return buf.toString();
  }
  
  refine PrettyPrint eq VariableDeclaration.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.VariableDeclaration.dumpString());
	    buf.append(" <* " + uniqueIndex() + " -> {");
	    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
	      CFGNode node = (CFGNode)iter.next();
	      buf.append(node.uniqueIndex() + " ");
	    }
	    buf.append("} *>");
	    return buf.toString();
  }
  
  refine PrettyPrint eq TypeAccess.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.TypeAccess.dumpString());
	    buf.append(" <* " + uniqueIndex() + " -> {");
	    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
	      CFGNode node = (CFGNode)iter.next();
	      buf.append(node.uniqueIndex() + " ");
	    }
	    buf.append("} *>");
	    return buf.toString();
  }
  
  refine PrettyPrint eq ArrayTypeAccess.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.ArrayTypeAccess.dumpString());
	    buf.append(" <* " + uniqueIndex() + " -> {");
	    for(Iterator iter = succ().iterator(); iter.hasNext(); ) {
	      CFGNode node = (CFGNode)iter.next();
	      buf.append(node.uniqueIndex() + " ");
	    }
	    buf.append("} *>");
	    return buf.toString();
  }
  
/*  
  refine PrettyPrint eq MethodDecl.dumpString() {
	    StringBuffer buf = new StringBuffer();
	    buf.append(PrettyPrint.MethodDecl.dumpString());
	    buf.append(" <* " + uniqueIndex() + " *>");
	    return buf.toString();
  }
*/ 

}
