//STANDING NOTE: Make GODDAMN sure that all JAModule passes DO NOT FUCKING
//TOUCH any AST nodes below CompilationUnit to avoid the GODFORSAKEN DEVIL
//SPAWNED REWRITES

//a "rewrite" pass done once all the module CUs are collected. 
//Module CUs are inserted above the CUs that belong to it
//Package name mangling from import owns are not taken into 
//consideration yet, cloning parts of the tree will be done 
//in a later pass.
aspect InsertModuleCUs {
	
	//TODO: Can this be changed into a Program rewrite? Or would the parser trigger stupid rewrites?
	public boolean Program.insertModuleCUs() {
		List<CompilationUnit> childList = getCompilationUnitList(); //bad, relies on the program child to be the CU list
		int i = 0;
		while (i < childList.getNumChild()) {
			ASTNode child = childList.getChild(i);
			//if a module cu, proceed to next
			if (child instanceof ModuleCompilationUnit) {
				i++;
				continue;
			//if a CU but not in a module, proceed to next
			} else if (child instanceof CompilationUnit && 
						!(((CompilationUnit)child).isInJAModule())) {
				i++;
				continue;//useless case, keep for debugging purposes
			//if a CU in a module, detach and add its copy to its moduleCU
			} else if (child instanceof CompilationUnit && 
						((CompilationUnit)child).isInJAModule()) {
				CompilationUnit childCU = (CompilationUnit) child;
				ModuleCompilationUnit moduleCU = childCU.lookupModuleCUNoTransform(); 
				childList.removeChild(i); //remove must be here, since the parent node of childCU must not be overwritten
				//flush to remove old cached info //NOTE: THIS IS NEEDED, BUT THE GODFUCKING SONOFABITCH REWRITES ARE TRIGGERED BECAUSE OF THIS
				//childCU.flushCaches(); 
				//Do a fullCopy instead of a cache flush to avoid the rewrites
				moduleCU.getCompilationUnitList().addChild(childCU.fullCopy()); 
			} else {
				i++;
				System.out.println("Unexpected program child type: " + child.getClass());
			}
		}
		return true;
	}
	
}