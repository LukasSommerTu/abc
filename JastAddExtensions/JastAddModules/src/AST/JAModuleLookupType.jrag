
aspect JAModuleLookupType {
	refine LookupType eq Program.lookupType(String packageName, String typeName) {
		addPrimitiveTypes();
		String fullName = packageName.equals("") ? typeName : packageName + "." + typeName;
		//temporary hack
		for(int i = 0; i < getNumCompilationUnit(); i++) {
			if (getCompilationUnit(i) instanceof ModuleCompilationUnit) {
				ModuleCompilationUnit mcu = (ModuleCompilationUnit)getCompilationUnit(i);
				for (int j = 0; j < mcu.getCompilationUnitList().getNumChild(); j++) {
					CompilationUnit currCU = mcu.getCompilationUnit(j);
					for(int k = 0; k < currCU.getNumTypeDecl(); k++) {
						TypeDecl type = currCU.getTypeDecl(k);
						if(type.fullName().equals(fullName)) {
							return type;
						}
					}
				}
			}
			else {      
				for(int j = 0; j < getCompilationUnit(i).getNumTypeDecl(); j++) {
					TypeDecl type = getCompilationUnit(i).getTypeDecl(j);
					if(type.fullName().equals(fullName)) {
						return type;
					}
				}
			}
		}

		//TODO: This is a patch. Find out how getCompilationUnit really works
		CompilationUnit u = getCompilationUnit(fullName);
		if(u != null && !u.fromSource()) { //TODO: if u was fromSource, it should have been found in the loops above. Find out how to remove the fullname from the set
			addCompilationUnit(u);
			getCompilationUnit(getNumCompilationUnit()-1);
			for(int j = 0; j < u.getNumTypeDecl(); j++) {
				if(u.getTypeDecl(j).name().equals(typeName)) {
					return u.getTypeDecl(j);
				}
			}
			//throw new Error("No type named " + typeName + " in file " + fullName + ", " + u.pathName() + ", " + u.relativeName());
		}
		return null;
	}
	
	//TODO: Implement module/package disambiguation here
	refine Generics eq CompilationUnit.getChild().lookupType(String name) {
		return Generics.CompilationUnit.getChild().lookupType(name);
	}
}
