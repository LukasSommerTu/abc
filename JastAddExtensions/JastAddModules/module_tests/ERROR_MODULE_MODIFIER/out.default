----------Module contents----------
------BB.java------
module: module m2;;
module CU : m2.module
module name : m2
------------------------
------AA.java------
module: module m1;;
module CU : m1.module
module name : m1
------------------------
------B.java------
module: module m2;;
module CU : m2.module
module name : m2
------------------------
------../testlib/jastadd$framework.module------
module jastadd$framework;
------------------------
------A.java------
module: module m1;;
module CU : m1.module
module name : m1
------------------------
------m1.module------
module m1;
import  m2 as none null;
------------------------
------Main.java------
module: null;
module CU : null
module name : null
------------------------
------m2.module------
module m2;
------------------------
----------CU AST before insert----------
BB.java package:b
AA.java package:a
B.java package:
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
A.java package:
module: m1, file: m1.module, base module: m1
Main.java package:
module: m2, file: m2.module, base module: m2
----------CU AST after insert----------
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
module: m1, file: m1.module, base module: m1
	AA.java package:m1.$a
	A.java package:m1
Main.java package:
module: m2, file: m2.module, base module: m2
	BB.java package:m2.$b
	B.java package:m2
----------Module CU imports before import own----------
module jastadd$framework, base:jastadd$framework, context:[], instantiated:false
	
module m1, base:m1, context:[], instantiated:false
	
module m2, base:m2, context:[], instantiated:false
	
-------------Instance ModuleCompilationUnit------------
module m1;
import  m2 as none null;
import  jastadd$framework as none null;
-----------End Instance ModuleCompilationUnit----------
----------CU AST after generateImportOwn----------
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
module: m1, file: m1.module, base module: m1
	AA.java package:m1.$a
	A.java package:m1
Main.java package:
module: m2, file: m2.module, base module: m2
	BB.java package:m2.$b
	B.java package:m2

----------Module CU imports after import own----------
module jastadd$framework, base:jastadd$framework, context:[], instantiated:true
	
module m1, base:m1, context:[], instantiated:true
	jastadd$framework:jastadd$framework, m2:m2
module m2, base:m2, context:[], instantiated:true
	jastadd$framework:jastadd$framework
----------MCU collectTypes after import own----------

Module: jastadd$framework
Module: m1
	m1.A
	m1.$a.AA
	m1.$a.AAModule
	m1.$a.AAPackage
Module: m2
	m2.$b.BBModule
	m2.$b.BBPackage
	m2.$b.BB
	m2.B

----------CU iterator----------
../testlib/jastadd$framework.module, m1.module, AA.java, A.java, Main.java, m2.module, BB.java, B.java
Errors:
A.java:3,2:
  Semantic Error: a.AAPackage in m1.A can not access type m1.$a.AAPackage
A.java:3:
  Semantic Error: can not instantiate m1.$a.AAPackage no matching constructor found in m1.$a.AAPackage
A.java:3,30:
  Semantic Error: a.AAPackage in m1.A can not access type m1.$a.AAPackage
A.java:4,2:
  Semantic Error: m2::b.BBModule in m1.A can not access type m2.$b.BBModule
A.java:4:
  Semantic Error: can not instantiate m2.$b.BBModule no matching constructor found in m2.$b.BBModule
A.java:4,32:
  Semantic Error: m2::b.BBModule in m1.A can not access type m2.$b.BBModule
A.java:7:
  Semantic Error: can not instantiate m2.$b.BB no matching constructor found in m2.$b.BB
A.java:8:
  Semantic Error: can not instantiate m2.$b.BB no matching constructor found in m2.$b.BB
A.java:12:
  Semantic Error: no method named modulef() in m2.$b.BB matches. However, there is a method modulef()
A.java:14:
  Semantic Error: no method named packagef() in m2.$b.BB matches. However, there is a method packagef()
