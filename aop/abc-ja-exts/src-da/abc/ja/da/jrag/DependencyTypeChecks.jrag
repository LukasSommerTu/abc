/* abc - The AspectBench Compiler
 * Copyright (C) 2008 Eric Bodden
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This compiler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

import abc.da.weaving.weaver.depadviceopt.ds.Bag;
import abc.da.weaving.weaver.depadviceopt.ds.HashBag;

aspect DependencyTypeChecks {

	syn Bag<String> AdviceDependency.varCount() {
		Bag<String> res = new HashBag<String>();
		for(int i=0; i<getNumStrongName(); i++) {
			AdviceNameAccess access = getStrongName(i);
			res.addAll(access.varCount());
		}
		for(int i=0; i<getNumStrongName(); i++) {
			AdviceNameAccess access = getWeakName(i);
			res.addAll(access.varCount());
		}
		return res;
	}
	
	syn Bag<String> AdviceNameAccess.varCount() {
		Bag<String> res = new HashBag<String>();
		for(int i=0; i<getNumArgVarRef(); i++) {
			ArgVarRef ref = getArgVarRef(i);
			res.add(ref.getAdviceVar());						
		} 
		return res;
	}
	
/*
	inh Bag<String> AdviceNameAccess.allVarCount();
	eq AdviceDependency.getStrongName(int i).allVarCount() = varCount(); 
	eq AdviceDependency.getWeakName(int i).allVarCount() = varCount();
*/

}