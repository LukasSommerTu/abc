aspect Exhibit{

	syn lazy boolean BodyDecl.isExhibit() = false;
	eq ExhibitBodyDecl.isExhibit() = true;
		

	inh lazy Collection<ExhibitBodyDecl> CJPPointcutExpr.getExhibitDecls(JPITypeDecl jpiTypeDecl);
	eq Program.getCompilationUnit().getExhibitDecls(JPITypeDecl jpiTypeDecl) = null;
	eq CompilationUnit.getTypeDecl().getExhibitDecls(JPITypeDecl jpiTypeDecl){
		HashSet<ExhibitBodyDecl> set = new HashSet<ExhibitBodyDecl>();
		ClassDecl classDecl;
		TypeAccess jpiAccess;
		for(TypeDecl typeDecl : getTypeDeclList()){
			if (!typeDecl.isClassDecl()){ //aspect is considered as a class
				continue;
			}
			classDecl = (ClassDecl)typeDecl;
			for(BodyDecl bodyDecl : classDecl.getBodyDeclList()){
				if (!bodyDecl.isExhibit()){
					continue;
				}			
				jpiAccess = (TypeAccess)((ExhibitBodyDecl)bodyDecl).getJPIName();
				if (jpiAccess.type().equals(jpiTypeDecl)){
					set.add((ExhibitBodyDecl)bodyDecl);
				}
			}
		}
		return set;
	}

    syn SimpleSet ExhibitBodyDecl.localLookupVariable(String name) {
    	for(ParameterDeclaration formalParameter : getParameterList()){
    		if(formalParameter.name().equals(name)){
                return SimpleSet.emptySet.add(formalParameter);    			
    		}
    	}
        return SimpleSet.emptySet;
    }

	eq ExhibitBodyDecl.getPointcut().lookupVariable(String name){
        return localLookupVariable(name);
	}
	
	inh lazy TypeDecl ExhibitBodyDecl.getHostType();
	
	eq TypeDecl.getBodyDecl().getHostType() = hostType();
	
}