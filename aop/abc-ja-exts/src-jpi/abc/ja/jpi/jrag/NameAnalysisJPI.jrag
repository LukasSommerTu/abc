aspect NameAnalysisJPI {

    public static final NameType NameType.JPI_SUPER_ARG_NAME = new NameType() {
      public Access reclassify(String name, int start, int end) { return new JPISuperArgAccess(name); }
    };
    
    eq JPITypeDecl.getSuperArgumentName(int i).nameType() = NameType.JPI_SUPER_ARG_NAME;
        
    eq ExhibitBodyDecl.getPointcut().bindsInCurrentCflow(String name) =
        getPointcut().binds(name) > 0;

	eq ExhibitBodyDecl.getJPIName().nameType() = NameType.TYPE_NAME;
	
	eq ExhibitBodyDecl.getReturnType().nameType() = NameType.TYPE_NAME;
		
	eq JPITypeDecl.getSuperTypeName().nameType() = NameType.TYPE_NAME;
	
	eq ExhibitBodyDecl.getParameter(int i).nameType() = NameType.TYPE_NAME;	
	eq ExhibitBodyDecl.getParameter(int index).isMethodParameter() = false;
  	eq ExhibitBodyDecl.getParameter(int index).isConstructorParameter() = false;
  	eq ExhibitBodyDecl.getParameter(int index).isExceptionHandlerParameter() = false;
  	eq ExhibitBodyDecl.getParameter(int index).isPointcutVariable() = true;
  	
  	
    //eq ExhibitBodyDecl.getPointcut().nameType() = NameType.TYPE_NAME;

	//eq ExhibitBodyDecl.getPointcut().getPattern(int i).nameType() = NameType.AMBIGUOUS_NAME;
	//I commented out the above because this is not valid JastAdd syntax.
	//An attribute name can only follow a single method call, not two nested calls such as
	//getPointcut().getPattern(int i). (Eric)
}