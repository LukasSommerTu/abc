/* abc - The AspectBench Compiler
 * Copyright (C) 2008 Neil Ongkingco
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This compiler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */


import abc.weaving.aspectinfo.*;
import abc.om.weaving.aspectinfo.*;

aspect OMPointcutMember {

	//guessing, not really sure what bindsIncurrentCflow does yet
	eq OMPointcutMember.getPointcutExpr().bindsInCurrentCflow(String name) =
        getPointcutExpr().binds(name) > 0; 
        
    public boolean OMPointcutMember.isPrivate() {
    	return getModifiers().isPrivate();
    }
    
    public boolean OMPointcutMember.isAdvertise() {
    	return getOMPointcutMemberType().getID().matches("advertise");
    }
    public boolean OMPointcutMember.isExpose() {
    	return getOMPointcutMemberType().getID().matches("expose");
    }
    //NOTE: Do I need to syn lazy every PointcutExpr?
    syn lazy Pointcut OMPointcutMember.pointcut() {
    	 ClassnamePattern toClausePat = new JAOMClassnamePattern(getOMToClause().getPattern());
    	 //I could have changed all the PointcutExpr+.pointcut to be lazy, but I'm going to try
    	 //doing this first
         return AndPointcut.construct(
		        getPointcutExpr().pointcut(), //this may make duplicate copies unless I override the aspect info gatherer 
		        ThisAspectPointcut.construct(toClausePat, 
		                getOMAbcExtension().generated), 
		        getOMAbcExtension().generated);
    	 
    } 
}