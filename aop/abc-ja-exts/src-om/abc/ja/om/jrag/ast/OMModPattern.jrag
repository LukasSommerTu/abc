/* abc - The AspectBench Compiler
 * Copyright (C) 2008 Neil Ongkingco
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This compiler is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */


import java.util.HashSet;

aspect OMModPattern {
	eq ModPattern.matchesType(SootClass c) {
		throw new InternalCompilerError("ModPattern.matchesType is not yet implemented");
	}
	
	eq ModPattern.matchesType(TypeDecl t) {
		HashSet<String> typeMods = new HashSet();
		for (Modifier m : t.getModifiers().getModifierList()) {
			typeMods.add(m.getID());
		}
		for (ModifierPattern m : this.getModifierPatternList()) {
			if (!typeMods.contains(m.getModifier().getID())) {
				return false;
			}
		}
		return true;
	}
}