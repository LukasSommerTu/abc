//Aspect for collecting ModuleStructs from the module ast nodes

import abc.ja.om.aspectinfo.*;

aspect OMCollectModules {
	public void ASTNode.collectModules() {
		for (int i = 0 ; i < getNumChild(); i++) {
			getChild(i).collectModules();
		}
	}
	public void CompilationUnit.collectModules() {
	}
	public void OMCompilationUnit.collectModules() {
		for (int i = 0 ; i < getNumChild(); i++) {
			getChild(i).collectModules();
		}
	}
	
	ModuleNodeModule OMModuleDecl.moduleNode;
	ModuleNodeModule OMModuleDecl.getModuleNode() {
		return this.moduleNode; 
	}
	
	//create the JAModuleNodeModule entries in the ModuleStructure
	public void OMModuleDecl.collectModules() {
        moduleNode = (ModuleNodeModule) getOMAbcExtension().moduleStruct.addModuleNode(getModuleName(), isRoot(), pos());
        super.collectModules();
	}
	public void OMFriendMember.collectModules() {
		for (Pattern pat : getNamePatternList()) {
			String name = pat.toString();
			abc.om.visit.ModuleNode node = getOMAbcExtension().moduleStruct.addAspectNode(name, pat, pos());
			//TODO: check if node is null, if so generate an error (This is terrible, find a way to fix this)
			if (node == null) {
				error("Aspect " + pat.toString() + " is already a friend in another module");
				continue;
			}
			getOMAbcExtension().moduleStruct.addMember(getHostModule().getModuleName(), node);
		}
		super.collectModules();
	}
	public void OMClassMember.collectModules() {
		for (Pattern pat : getPatternList()) {
			String name = getHostModule().getModuleName();
			abc.om.visit.ModuleNode node = getOMAbcExtension().moduleStruct.addClassNode(name, pat, pos());
			getOMAbcExtension().moduleStruct.addMember(getHostModule().getModuleName(), node);
		}
		super.collectModules();
	}
}