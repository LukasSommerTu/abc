<!--
 Targets for working from terminal window:
       build (default) - generates java files and compiles them
       clean           - removes all generated files and class files
-->
<project name="AspectJ JastAdd Frontend Extensions" default="build">

    <target name="defaultsettings" if="use.default.settings">
      <copy file="ant.settings.template" tofile="ant.settings"/>
      <property file="ant.settings"/>
      <ant dir="${abc-ja.loc}" target="defaultsettings"/>
    </target>
    
<!-- "package" is the directory where generated files will be stored -->
<property name="package" value="abc.ja.tm.jrag"/>

<!-- Arguments passed to runtests -->
<property name="test.args" value=""/>
<property name="test.pat" value=""/>

<!-- check settings -->
<target name="settings" depends="defaultsettings">
  <property file="ant.settings"/>
  <fail message="Please fix ant.settings" unless="abc-ja.loc"/>
  
  <property file="${abc-ja.loc}/ant.settings"/>
  <fail message="Please fix ${abc-ja.loc}/ant.settings" unless="abc.loc"/>
  
  <property file="${abc.loc}/ant.settings"/>
  <fail message="Please copy ant.settings.template to ant.settings, and set the variables in it."
        unless="polyglot.loc"/>

  <!-- "tools" is the directory where generators and libraries are located. -->
  <property name="tools" value="${frontend}/tools"/>
  
  <!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
  <taskdef name="jflex" classname="JFlex.anttask.JFlexTask"
           classpath="${tools}/JFlex.jar"/>
  <!-- "beaver" is an ant task class for the parser generator in beaver.jar -->
  <taskdef name="beaver" classname="beaver.comp.run.AntTask"
           classpath="${abc-ja.loc}/tools/beaver.jar"/>
  <!-- "jastadd" is an ant task class in jastadd2.jar -->
  <taskdef name="jastadd" classname="jastadd.JastAddTask"
           classpath="${tools}/jastadd2.jar"/>
</target>


<!-- compile sources -->
<target name="build" depends="settings,gen">
        <antcall target="build-ja"/>
        <mkdir dir="${basedir}/classes"/>
        <!-- compile sources compiler="jikes" nowarn="true" -->
        <javac debug="true"
               fork="true" memoryMaximumSize="512M" destdir="classes">
	<classpath>
              <pathelement location="${polyglot.loc}"/>
              <pathelement location="${abc.loc}/classes"/>
              <pathelement location="${polyglot.cupclasses.loc}"/>
              <pathelement location="${soot.loc}"/>
              <pathelement location="${jasmin.loc}"/>
              <pathelement location="${xact.loc}"/>
              <pathelement location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
              <pathelement location="${abc.loc}/testing-classes"/>
              <pathelement location="${abc-ja.loc}/classes"/>
	      <pathelement location="${basedir}"/>
            </classpath>
                <src path="${basedir}/src-tm"/>
                <src path="${basedir}/src-eaj"/>
                <src path="${basedir}/src-om"/>
	            <src path="${basedir}/src-cjp"/>
                <src path="${basedir}/generated"/>
        </javac>
</target>
	
<target name="build-tm" depends="settings,gen-tm">
        <antcall target="build-ja"/>
        <mkdir dir="${basedir}/classes"/>
        <!-- compile sources compiler="jikes" nowarn="true" -->
        <javac debug="true"
               fork="true" memoryMaximumSize="256M" destdir="classes">
	<classpath>
              <pathelement location="${polyglot.loc}"/>
              <pathelement location="${abc.loc}/classes"/>
              <pathelement location="${polyglot.cupclasses.loc}"/>
              <pathelement location="${soot.loc}"/>
              <pathelement location="${jasmin.loc}"/>
              <pathelement location="${xact.loc}"/>
              <pathelement location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
              <pathelement location="${abc.loc}/testing-classes"/>
              <pathelement location="${abc-ja.loc}/classes"/>
	      <pathelement location="${basedir}"/>
            </classpath>
                <src path="${basedir}/src-tm"/>
                <src path="${basedir}/src-eaj"/>
                <src path="${basedir}/generated"/>
        </javac>
</target>
	
<target name="build-cjp" depends="settings,gen-cjp">
        <antcall target="build-ja"/>
        <mkdir dir="${basedir}/classes"/>
        <!-- compile sources compiler="jikes" nowarn="true" -->
        <javac debug="true"
               fork="true" memoryMaximumSize="256M" destdir="classes">
	<classpath>
              <pathelement location="${polyglot.loc}"/>
              <pathelement location="${abc.loc}/classes"/>
              <pathelement location="${polyglot.cupclasses.loc}"/>
              <pathelement location="${soot.loc}"/>
              <pathelement location="${jasmin.loc}"/>
              <pathelement location="${xact.loc}"/>
              <pathelement location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
              <pathelement location="${abc.loc}/testing-classes"/>
              <pathelement location="${abc-ja.loc}/classes"/>
	      <pathelement location="${basedir}"/>
            </classpath>
                <src path="${basedir}/src-cjp"/>
                <src path="${basedir}/generated"/>
        </javac>
</target>	

<!-- generate compiler source files -->
<target name="gen" depends="settings,gen-cjp,gen-tm,gen-om">
  <!-- copy library files-->
  <copy todir="${basedir}/generated/beaver" preservelastmodified="true">
    <fileset dir="${frontend}/beaver"/>
  </copy>
</target>

<target name="gen-tm" depends="gen-eaj,tm-parser,tm-jrag"/>

<target name="gen-om" depends="om-parser,om-jrag"/>
	
<target name="gen-cjp" depends="cjp-parser,cjp-jrag"/>

<target name="gen-eaj" depends="eaj-parser,eaj-jrag"/>

<target name="tm-jrag" depends="settings">
  <!-- create AST node types and weave aspect modules -->
        <echo message="Generating to ${basedir}/generated..."/>
        <mkdir dir="${basedir}/generated"/>
	<jastadd package="abc.ja.tm.jrag" rewrite="true"
                beaver="true" noVisitCheck="true"
                noCacheCycle="true" noComponentCheck="true"
                outdir="${basedir}/generated" lazyMaps="true"
                suppressWarnings="false" parentInterface="false">
		<fileset dir="${frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
 			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${frontend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${javabackend}">
			<include name="InnerClasses.jrag"/>
			<include name="Transformations.jrag"/>
			<include name="Java2Rewrites.jrag"/>
		</fileset>
		<fileset dir="${itds}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="JastAdd.*"/>
			<exclude name="DeclarePrecedence.ast"/>
			<exclude name="DeclareParents.ast"/>
			<exclude name="Glue.jrag"/>
			<exclude name="GlueCodegen.jrag"/>
		</fileset>
		<fileset dir="${backend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${backend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${abc-ja.loc}/src/abc/ja/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${basedir}/src-eaj/abc/ja/eaj/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${basedir}/src-tm/abc/ja/tm/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
  </jastadd>
</target>

<target name="eaj-jrag" depends="settings">
  <!-- create AST node types and weave aspect modules -->
        <echo message="Generating to ${basedir}/generated..."/>
        <mkdir dir="${basedir}/generated"/>
	<jastadd package="abc.ja.eaj.jrag" rewrite="true"
                beaver="true" noVisitCheck="true"
                noCacheCycle="true" noComponentCheck="true"
                outdir="${basedir}/generated" lazyMaps="true"
                suppressWarnings="false" parentInterface="false">
		<fileset dir="${frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
 			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${frontend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${javabackend}">
			<include name="InnerClasses.jrag"/>
			<include name="Transformations.jrag"/>
			<include name="Java2Rewrites.jrag"/>
		</fileset>
		<fileset dir="${backend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${itds}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
      <exclude name="JastAdd.*"/>
      <exclude name="DeclarePrecedence.ast"/>
      <exclude name="DeclareParents.ast"/>
      <exclude name="Glue.jrag"/>
			<exclude name="GlueCodegen.jrag"/>
		</fileset>
		<fileset dir="${backend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${abc-ja.loc}/src/abc/ja/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${basedir}/src-eaj/abc/ja/eaj/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
  </jastadd>
</target>
	
<target name="cjp-jrag" depends="settings">
  <!-- create AST node types and weave aspect modules -->
        <echo message="Generating to ${basedir}/generated..."/>
        <mkdir dir="${basedir}/generated"/>
	<jastadd package="abc.ja.cjp.jrag" rewrite="true"
                beaver="true" noVisitCheck="true"
                noCacheCycle="true" noComponentCheck="true"
                outdir="${basedir}/generated" lazyMaps="true"
                suppressWarnings="false" parentInterface="false">
		<fileset dir="${frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
 			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${frontend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${javabackend}">
			<include name="InnerClasses.jrag"/>
			<include name="Transformations.jrag"/>
			<include name="Java2Rewrites.jrag"/>
		</fileset>
		<fileset dir="${backend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${itds}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
      <exclude name="JastAdd.*"/>
      <exclude name="DeclarePrecedence.ast"/>
      <exclude name="DeclareParents.ast"/>
      <exclude name="Glue.jrag"/>
			<exclude name="GlueCodegen.jrag"/>
		</fileset>
		<fileset dir="${backend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${abc-ja.loc}/src/abc/ja/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${basedir}/src-cjp/abc/ja/cjp/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
  </jastadd>
</target>	
	
<target name="om-jrag" depends="settings">
  <!-- create AST node types and weave aspect modules -->
        <echo message="Generating to ${basedir}/generated..."/>
        <mkdir dir="${basedir}/generated"/>
	<jastadd package="abc.ja.om.jrag" rewrite="true"
                beaver="true" noVisitCheck="true"
                noCacheCycle="true" noComponentCheck="true"
                outdir="${basedir}/generated" lazyMaps="true"
                suppressWarnings="false" parentInterface="false">
		<fileset dir="${frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
 			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${frontend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${javabackend}">
			<include name="InnerClasses.jrag"/>
			<include name="Transformations.jrag"/>
			<include name="Java2Rewrites.jrag"/>
		</fileset>
		<fileset dir="${itds}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
      <exclude name="JastAdd.*"/>
      <exclude name="DeclarePrecedence.ast"/>
      <exclude name="DeclareParents.ast"/>
      <exclude name="Glue.jrag"/>
			<exclude name="GlueCodegen.jrag"/>
		</fileset>
		<fileset dir="${backend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${backend1.5}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${abc-ja.loc}/src/abc/ja/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${basedir}/src-om/abc/ja/om/jrag">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
  </jastadd>
</target>

<target name="tm-parser" depends="settings">
  <property name="tm-parserdir" location="${basedir}/generated/abc/ja/tm/parse"/>
  <mkdir dir="${tm-parserdir}"/>
  <!-- generate the parser phase 1, create a full .lalr
     - specification from fragments -->
  <concat destfile="${tm-parserdir}/JavaParser.all" binary="true" force="no">
    <filelist dir="${basedir}">
      <file name="src-tm/abc/ja/tm/parse/header.parser"/>
    </filelist>
    <filelist dir="${frontend}">
      <file name="parser/java14.parser"/>
    </filelist>
    <fileset dir="${frontend1.5}">
      <include name="*.parser"/>
    </fileset>
    <filelist dir="${abc-ja.loc}">
      <file name="src/abc/ja/parse/errorproductions.parser"/>
      <file name="src/abc/ja/parse/aspectj.parser"/>
    </filelist>
    <filelist dir="${basedir}">
      <file name="src-eaj/abc/ja/eaj/parse/eaj.parser"/>
      <file name="src-tm/abc/ja/tm/parse/tm.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
	<java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar"
              classname="Main" fork="true" dir="${tm-parserdir}">
		<arg line="JavaParser.all JavaParser.beaver"/>
	</java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${tm-parserdir}/JavaParser.beaver" terminalNames="yes"
          compress="no" useSwitch="yes"/>
</target>

<target name="eaj-parser" depends="settings">
  <property name="eaj-parserdir" location="${basedir}/generated/abc/ja/eaj/parse"/>
  <mkdir dir="${eaj-parserdir}"/>
  <!-- generate the parser phase 1, create a full .lalr
     - specification from fragments -->
  <concat destfile="${eaj-parserdir}/JavaParser.all" binary="true" force="no">
    <filelist dir=".">
      <file name="src-eaj/abc/ja/eaj/parse/header.parser"/>
    </filelist>
    <filelist dir="${frontend}">
      <file name="parser/java14.parser"/>
    </filelist>
    <fileset dir="${frontend1.5}">
      <include name="*.parser"/>
    </fileset>
    <filelist dir="${abc-ja.loc}">
      <file name="src/abc/ja/parse/errorproductions.parser"/>
      <file name="src/abc/ja/parse/aspectj.parser"/>
    </filelist>
    <filelist dir="${basedir}">
      <file name="src-eaj/abc/ja/eaj/parse/eaj.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
	<java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar"
              classname="Main" fork="true" dir="${eaj-parserdir}">
		<arg line="JavaParser.all JavaParser.beaver"/>
	</java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${eaj-parserdir}/JavaParser.beaver" terminalNames="yes"
          compress="no" useSwitch="yes"/>
</target>
	
<target name="cjp-parser" depends="settings">
  <property name="cjp-parserdir" location="${basedir}/generated/abc/ja/cjp/parse"/>
  <mkdir dir="${cjp-parserdir}"/>
  <!-- generate the parser phase 1, create a full .lalr
     - specification from fragments -->
  <concat destfile="${cjp-parserdir}/JavaParser.all" binary="true" force="no">
    <filelist dir=".">
      <file name="src-cjp/abc/ja/cjp/parse/header.parser"/>
    </filelist>
    <filelist dir="${frontend}">
      <file name="parser/java14.parser"/>
    </filelist>
    <fileset dir="${frontend1.5}">
      <include name="*.parser"/>
    </fileset>
    <filelist dir="${abc-ja.loc}">
      <file name="src/abc/ja/parse/errorproductions.parser"/>
      <file name="src/abc/ja/parse/aspectj.parser"/>
    </filelist>
    <filelist dir="${basedir}">
      <file name="src-cjp/abc/ja/cjp/parse/cjp.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
	<java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar"
              classname="Main" fork="true" dir="${cjp-parserdir}">
		<arg line="JavaParser.all JavaParser.beaver"/>
	</java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${cjp-parserdir}/JavaParser.beaver" terminalNames="yes"
          compress="no" useSwitch="yes"/>
</target>	
	
<target name="om-parser" depends="settings">
  <property name="om-parserdir" location="${basedir}/generated/abc/ja/om/parse"/>
  <mkdir dir="${om-parserdir}"/>
  <!-- generate the parser phase 1, create a full .lalr
     - specification from fragments -->
  <concat destfile="${om-parserdir}/JavaParser.all" binary="true" force="no">
    <filelist dir=".">
      <file name="src-om/abc/ja/om/parse/header.parser"/>
    </filelist>
    <filelist dir="${frontend}">
      <file name="parser/java14.parser"/>
    </filelist>
    <fileset dir="${frontend1.5}">
      <include name="*.parser"/>
    </fileset>
    <filelist dir="${abc-ja.loc}">
      <file name="src/abc/ja/parse/errorproductions.parser"/>
      <file name="src/abc/ja/parse/aspectj.parser"/>
    </filelist>
    <filelist dir="${basedir}">
      <file name="src-om/abc/ja/om/parse/om.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
	<java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar"
              classname="Main" fork="true" dir="${om-parserdir}">
		<arg line="JavaParser.all JavaParser.beaver"/>
	</java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${om-parserdir}/JavaParser.beaver" terminalNames="yes"
          compress="no" useSwitch="yes"/>
	<jflex file="${basedir}/src-om/abc/ja/om/parse/omaspectj.flex"
           outdir="${om-parserdir}" nobak="yes"/>
</target>

<target name="clean">
    <delete quiet="true">
      <fileset dir="${basedir}/generated" includes="**/*"/>
      <fileset dir="${basedir}/classes"   includes="**/*"/>
      <fileset dir="${basedir}/lib" includes="*.jar"/>
    </delete>
</target>

<target name="clobber" depends="clean">
  <antcall target="build-ja">
    <param name="target" value="clobber"/>
  </antcall>
</target>
	
<target name="jars" depends="build">
  <antcall target="build-ja">
    <param name="target" value="jars"/>
  </antcall>
  <mkdir dir="${basedir}/lib"/>
  <jar destfile="${abc.loc}/lib/abc-ja-exts.jar" basedir="${basedir}/classes" includes="**/*.class" />
  <jar destfile="${basedir}/lib/abc-ja-exts.jar" basedir="${basedir}/classes" includes="**/*.class" />
  <copy file="${abc-ja.loc}/lib/abc-ja-complete.jar" tofile="${basedir}/lib/abc-ja-exts-complete.jar"/>
  <jar destfile="${basedir}/lib/abc-ja-exts-complete.jar" update="true" basedir="${basedir}/classes" includes="**/*.class"/>
</target>

<target name="om-jars" depends="om-build,om-libs">
  <mkdir dir="${basedir}/lib"/>
  <jar destfile="${basedir}/lib/abc-ja-exts-complete.jar">
     <fileset dir="classes"/>
     <fileset dir="${abc-ja.loc}/classes"/>
     <fileset dir="${abc.loc}/classes"/>
     <fileset dir="${abc.loc}/runtime-classes"/>
     <fileset dir="${abc.loc}/paddle-classes"/>
     <manifest>
        <attribute name="Main-Class" value="abc.main.Main" />
     </manifest>
  </jar>
</target>

<target name="om-libs">
  <unzip dest="${basedir}/classes" overwrite="false">
     <fileset file="${polyglot.loc}"/>
     <fileset file="${polyglot.cupclasses.loc}"/>
     <fileset file="${soot.loc}"/>
     <fileset file="${jasmin.loc}"/>
     <fileset file="${paddle.loc}"/>
     <fileset file="${jedd.runtime.jar}"/>
     <fileset file="${javabdd.jar}"/>
  </unzip>
</target>

<!-- compile om sources -->
<target name="om-build" depends="om-parser,om-jrag">
  <!-- copy library files-->
  <copy todir="${basedir}/generated/beaver" preservelastmodified="true">
    <fileset dir="${frontend}/beaver"/>
  </copy>
        <antcall target="build-ja" />
        <mkdir dir="${basedir}/classes"/>
        <!-- compile sources compiler="jikes" nowarn="true" -->
        <javac debug="true"
               fork="true" memoryMaximumSize="256M" destdir="classes">
	<classpath>
              <pathelement location="${polyglot.loc}"/>
              <pathelement location="${abc.loc}/classes"/>
              <pathelement location="${polyglot.cupclasses.loc}"/>
              <pathelement location="${soot.loc}"/>
              <pathelement location="${jasmin.loc}"/>
              <pathelement location="${xact.loc}"/>
              <pathelement location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
              <pathelement location="${abc.loc}/testing-classes"/>
              <pathelement location="${abc-ja.loc}/classes"/>
	      <pathelement location="${basedir}"/>
            </classpath>
                <src path="${basedir}/src-om"/>
                <src path="${basedir}/generated"/>
        </javac>
</target>
	
<target name="test" depends="build">
  <java classname="abc.testing.Main" fork="true"
        dir="${abc.testing.loc}/ajc-harness/tests">
    <jvmarg line="-Xmx512M" />
    <arg line="+abc -ext abc.ja -abc -messageOverride ja"/>
    <arg line="${test.args} abcTests.xml ${test.pat}"/>
    <classpath>
      <pathelement location="classes"/>
      <pathelement location="${abc-ja.loc}/classes"/>
      <pathelement location="${abc.loc}/classes"/>
      <pathelement location="${abc.loc}/runtime-classes"/>
      <pathelement location="${abc.loc}/testing-classes"/>
      <pathelement location="${polyglot.loc}"/>
      <pathelement location="${polyglot.cupclasses.loc}"/>
      <pathelement location="${soot.loc}"/>
      <pathelement location="${jasmin.loc}"/>
      <pathelement location="${xact.loc}"/>
      <pathelement
          location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
    </classpath>
  </java>
</target>

<target name="run" depends="build">
<fail message="Compiler arguments are given in variable 'args'" unless="args"/>
  <java classname="abc.main.Main" fork="true">
    <arg line="-ext abc.ja.tm"/>
    <arg line="${args}"/>
    <classpath>
      <pathelement location="classes"/>
      <pathelement location="${abc.loc}/classes"/>
      <pathelement location="${abc.loc}/runtime-classes"/>
      <pathelement location="${abc.loc}/testing-classes"/>
      <pathelement location="${polyglot.loc}"/>
      <pathelement location="${polyglot.cupclasses.loc}"/>
      <pathelement location="${soot.loc}"/>
      <pathelement location="${jasmin.loc}"/>
      <pathelement location="${xact.loc}"/>
      <pathelement location="${abc-ja.loc}/classes"/>
      <pathelement
          location="${abc.loc}/ajc-harness/lib/abc-testing-ajc-part.jar"/>
    </classpath>
  </java>
</target>

<target name="build-ja" depends="settings">
  <property name="target" value="build"/>
  <ant dir="${abc-ja.loc}" target="${target}">
    <property name="package" value="abc.ja.jrag"/>
  </ant>
</target>
</project>

