/* abc - The AspectBench Compiler
 * Copyright (C) 2004 Sascha Kuzins
 * Copyright (C) 2004 Julian Tibble
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

include "../../../src/abc/aspectj/parse/aspectj.ppg"

package abcexer2.parse;

import abcexer2.ast.*;
import abcexer2.types.*;

import polyglot.ext.jl.parse.Name;

parser Grm extends abc.aspectj.parse.Grm {:
    public final Abcexer2NodeFactory nf;
	public final Abcexer2TypeSystem ts;
	
    public Grm(Lexer l, TypeSystem t, NodeFactory n, ErrorQueue q) {
        super(l, t, n, q);
        nf = (Abcexer2NodeFactory) n;
        ts=(Abcexer2TypeSystem)t;
    }
:};


// ------- new tokens ------------------------------

terminal Token PC_ARRAYGET;

// ------- new non-terminals -----------------------

// (none)


start with goal;


extend basic_pointcut_expr ::=
		PC_ARRAYGET:x LPAREN RPAREN:y
        {:
            Grm.parserTrace("ARRAYGET pointcut");
            RESULT = parser.nf.PCArrayGet(parser.pos(x,y));//, parser.nf.TPEUniversal(parser.pos(x,y)));
        :}
        ;

       