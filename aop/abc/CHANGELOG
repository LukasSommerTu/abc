# This file is parsed to produce changelog information in a variety
# of formats. Start new entries with a '$', and continuation lines 
# with a ';'. Normally lines denoting a new release are added automatically,
# but the format is "%<version number> <unixtime>" if you need 
# to make one of your own. Lines beginning with '#' are ignored, predictably
# enough. 
#
# If you want to warn "extenders" of an interface change, then start
# your entry with a '!' instead of a '$'.
# 
# You should generally avoid changing the file below a line starting
# with '%', as this would alter the changelog for versions that are already
# released.
#
# If you mess around with the packaging for a specific distribution,
# add a line saying "^debian:" before the changelog entry (currently only
# debian and redhat are understood here, and we don't actually have a 
# redhat package).
# 
# If you want to change the name that is recorded as making a release,
# add a line in the form "&name of releaser <email@address>".
#
# The scripts that process this file are:
# dist/makechangelogs.pl - to generate various formats for it
# dist/addchangelogrelease.pl - to record a new release in the file, below
# these comments.

$Updated runtime library for a more efficient implementation of cflow. 
;The abc101runtime option causes abc to generate code for the previous
;implementation of cflow for compatibility.
!Fixed a bug in EAJ with using private pointcut variables together with
;calls to named pointcuts.
!Added some javadoc to the abc.weaving.aspectinfo.Pointcut class,
;to make it clearer what deriving classes need to do.
$Fixed bugs 44 and 45, which were bugs in the around weaver, and 46, which
;was to do with casts being erroneously removed by optimisations causing
;programs which should have thrown an exception to run normally.

%1.0.1 1104961494
$Fixed bug 34, in which arithmetic calculations within strings were sometimes
;misinterpreted as string concatenation. Thanks to Jonathan Churchill for
;reporting this bug.
$Fixed bug 35, Java identifiers containing '$' are not "visible" from
;pointcuts. Thanks to Kevin Viggers for an extremely clear description of the
;precise problem and the code for the fix.
$Fixed bug 36, in which circular references to named pointcuts within
;cflow caused a stack overflow.
$Fixed bug 37, named pointcuts and multiply nested cflows interact badly.
$Added support for inlining of advice bodies at join point shadows. A 
;heuristic is used to decide when to do this. Inlining also exposes 
;opportunities for removing the boxing that is sometimes associated with
;advice implementation. The original advice bodies are also removed
;if rendered redundant by inlining.
$Updated runtime library to return a value copy of the argument list from
;thisJoinPoint.getArgs(), in line with ajc bug 67592.

!If you extend ShadowMatch, AdviceApplication, Residue, 
;WeavingVar or ContextValue, you will need to implement a new method called 
;inline. The purpose of this method is to handle a new implementation of 
;constructor inlining. It should normally be straightforward to implement 
;this method; if your class contains any references to Jimple values you 
;will need to look up new versions of these references using a mapping that 
;is provided, and construct a new copy of the object. The implementations 
;in the standard abc classes should be easy to adapt.
!If you extend Residue, you will also need to implement a new optimize()
;method. If your residue does not itself contain residues, you can just
;return the same object.
!If you extend Pointcut, the inline method has acquired a new parameter
;which you can normally just ignore, or pass unchanged to any contained
;pointcuts. The sensible thing to do would be to replace this set of
;parameters with an object, and this may happen in future.
!The current implementation of advice precedence is broken and needs a 
;redesign, which will happen soon. This will likely have an impact on
;the doAddAdviceApplication method in subclasses of ShadowMatch.
!Some abc variables that can only hold Jimple immediates (locals or constants)
;but previously had the overly generic declared type Value now have the
;tighter type Immediate.

%1.0.0 1098443519

$Changed package root for runtime stuff from uk.ac.ox.comlab.abc 
;to org.aspectbench
$Started keeping changelog (the one for this release is incomplete)

&abc development team <abc-dev@comlab.ox.ac.uk>
