<!DOCTYPE suite SYSTEM "../tests/abcTestSuite.dtd"> 
 <suite> 
 <ajc-test dir="pureJava/innerDefaultConstructors"
      title="Default constructors have same access as their enclosing type"
      abccomment="jlc doesn't report expected error.
                  Reported to Nate on July 1/04.  LJH"
      keywords="from-java">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="pkg1/Main.java,pkg2/Foo.java">
            <message kind="error" line="6"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" title="A.this exprs match by exact type matching"
      abccomment="Polyglot does not catch error on line 14. Sent to Nate
                  July 1/04. LJH"
      keywords="from-java">
        <compile files="QualifiedThisMatchesExactly.java">
            <message kind="error" line="14"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" title="invalid numeric literals"
      abccomment="abc doesn't do a good job on these,  needs a parser
                  that doesn't give up after the first error, and
                  then each case needs to be check.  jlc probably does
                  not catch all of them either.  July 1/04 LJH"
      keywords="from-java">
        <compile files="LiteralsCf.java">
            <message kind="error" line="8"/>
            <message kind="error" line="9"/>
            <message kind="error" line="10"/>
            <message kind="error" line="11"/>
            <message kind="error" line="12"/>
            <message kind="error" line="17"/>
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="20"/>
            <message kind="error" line="21"/>
            <message kind="error" line="22"/>
            <message kind="error" line="23"/>
            <message kind="error" line="25"/>
            <message kind="error" line="27"/>
            <message kind="error" line="28"/>
            <message kind="error" line="29"/>
            <message kind="error" line="30"/>
            <message kind="error" line="32"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" title="Error expected for constructor in interfaces"
      abccomment="ajc only finds errors on lines 2 and 8. 
                  another example of jlc crashing after error detection.
                  July 2/04 LJH" 
      keywords="from-java,purejava">

        <compile files="InterfaceConstructor.java">
            <ajcmessage kind="error" line="2"/>
            <ajcmessage kind="error" line="6"/>
            <ajcmessage kind="error" line="8"/>
            <message kind="error" line="2"/>
            <message kind="error" line="8"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" title="Type names are not expressions on their own"
      abccomment="jlc misses all errors after the first two.  Example sent to
                  Nate on July 2/04.  LJH"
      keywords="from-java,purejava">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="TypeExprErrors.java">
            <message kind="error" line="10"/>
            <message kind="error" line="17"/>
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="20"/>
            <message kind="error" line="21"/>
            <message kind="error" line="22"/>
            <message kind="error" line="23"/>
            <message kind="error" line="24"/>
            <message kind="error" line="25"/>
            <message kind="error" line="26"/>
            <message kind="error" line="27"/>
            <message kind="error" line="28"/>
            <message kind="error" line="29"/>
            <message kind="error" line="30"/>
            <message kind="error" line="31"/>
            <message kind="error" line="32"/>
            <message kind="error" line="33"/>
            <message kind="error" line="34"/>
            <message kind="error" line="36"/>
            <message kind="error" line="37"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava/nameConflicts"
      title="type and package name conflicts caught as errors (1)"
      abccomment="this is missing in jlc, but it seems less important
                  than other problems, so won't report it to Nate 
                   just yet.  July 2/04 LJH"
      keywords="from-java,purejava">
        <compile files="p1/p2.java,p1/Main1.java,p1/Foo.java,p1/p2/Foo.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/packagePrefix" pr="574"
      title="classes that are package prefixes are illegal"
      abccomment="ajc doesn't find this error, send to Nate July 5/04 LJH"
      keywords="from-java,purejava,messages-vary">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="p/prefix.java,p/prefix/SomeClass.java"
               options="!eclipse">
            <message kind="error" line="2"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava"
      title="suggested by Jacks 15.28-qualified-namestr tests"
      abccomment="ajc and javac already report different subset of possible
                    errors,  abc correctly reports first one and then
                    doesn't check rest of switch.  I think it's ok.
                    July 5/04 LJH"
      keywords="from-java,purejava,messages-vary">
        <compile files="NonConstants.java" 
               options="!eclipse">
            <ajcmessage kind="error" line="13"/>
            <ajcmessage kind="error" line="14"/>
            <ajcmessage kind="error" line="15"/>
            <ajcmessage kind="error" line="16"/>
            <ajcmessage kind="error" line="17"/>
            <message kind="error" line="13"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/subaspects" pr="647"
      title="concrete aspect unable to access abstract package-private method in parent for overriding"
      abccomment = "error not detected by jlc, reported to Nate July 3/04 LJH"
      keywords="from-java,purejava,messages-vary"
      comment="XXX fix source - package-private">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="parent/ParentMethodCE.java,child/ChildMethodCE.java"
               options="!eclipse">
            <message kind="warning" line="28"/>
            <message kind="error" line="27"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" pr="244"
      title="decent errors for around return type not matching target point"
      abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04"
      keywords="from-errors">
        <compile files="AroundReturnType.java">
            <message kind="error" line="3"/>
            <message kind="error" line="7"/>
            <message kind="error" line="16"/>
            <message kind="error" line="21"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="Not generating an error for using new as a method name"
      keywords="from-errors">
        <compile files="New.java">
            <message kind="error" line="12"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="Wrong strictfp keyword usage in interface function prototype [TODO: move to errors]"
      abccomment="Polyglot fails to check special modifier restrictions for interfaces.
                  ODM 5/7/04"
      keywords="from-errors">
        <compile files="StrictFpCErr1.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="Accessing instance fields and instance methods statically."
      abccomment="all errors,  but it is completely reasonable to report
                  only the non-statement error on line 30.  This is what
                  javac does on the Java part of the benchmark.  Note
                  that this is NOT a purejava benchmark, but has an
                  aspect in it, dispite what the keyword says.
                  July 4/04 LJH"
      keywords="from-errors,purejava">
        <compile files="AccessingInstanceFieldsStatically.java">
            <ajcmessage kind="error" line="15"/>
            <ajcmessage kind="error" line="16"/>
            <ajcmessage kind="error" line="17"/>
            <ajcmessage kind="error" line="18"/>
            <ajcmessage kind="error" line="26"/>
            <ajcmessage kind="error" line="27"/>
            <ajcmessage kind="error" line="30"/>
            <ajcmessage kind="error" line="38"/>
            <ajcmessage kind="error" line="39"/>
            <message kind="error" line="30"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" pr="95"
      title="stack overflow with recursive crosscut specifier"
      keywords="from-errors">
        <compile files="RecursiveCCutSpecifier.java">
            <message kind="error" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" pr="385"
      title="disallow defining more than one pointcut with the same name"
      abccomment="ajc reports an error at both locations, abc just at the last one. ODM July 5, 2004"
      keywords="from-errors,fail-unimplemented">
        <compile files="OverloadedPointcuts.java">
            <ajcmessage kind="error" line="4"/>
            <ajcmessage kind="error" line="5"/>
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="pre 0.7 introduction form outside aspect body causes an EmptyStackException"
      keywords="from-errors">
        <compile files="BadIntroduction.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="a before() clause at the class-level causes an EmptyStackException"
      keywords="from-errors">
        <compile files="TopLevelBefore.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="an after() clause at the class-level causes an EmptyStackException"
      keywords="from-errors">
        <compile files="TopLevelAfter.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="an around() clause at the class-level causes an EmptyStackException"
      keywords="from-errors">
        <compile files="TopLevelAround.java">
            <message kind="error" line="3"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="Crashes when there're stray dots"
      abccomment="javac,ajc and abc all give errors on all the lines.
                  July 3/04 LJH"
      keywords="from-errors,purejava">
        <compile files="StrayDot.java">
            <ajcmessage kind="error" line="9"/>
            <message kind="error" line="9"/>
            <message kind="error" line="10"/>
            <message kind="error" line="11"/>
            <message kind="error" line="12"/>
            <message kind="error" line="13"/>
            <message kind="error" line="14"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="good error for bad field and inner class references"
      abccomment="not pure java July 5/04 LJH
                  polyglot does not find this error, sent to Nate,
                       July 5/04 LJH"
      keywords="from-errors,purejava">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="BadReferences.java">
            <message kind="error" line="3"/>
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="errors in aspect inheritance - 1"
      keywords="from-errors">
        <compile files="AspectInheritance1.java">
            <message kind="error" line="17"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="errors in aspect inheritance - 2"
      abccomment="More accurate messages from abc. ODM July 5, 2004"
         keywords="from-errors">
        <compile files="AspectInheritance2.java">
            <ajcmessage kind="error" line="8"/>
            <ajcmessage kind="error" line="16"/>
            <ajcmessage kind="error" line="20"/>
            <ajcmessage kind="error" line="26"/>
            <ajcmessage kind="error" line="30"/>
            <message kind="error" line="16"/>
            <message kind="error" line="15"/>
            <message kind="error" line="20"/>
            <message kind="error" line="24"/>
            <message kind="error" line="23"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="circular dominates leading to irresolvable advice precedence"
      keywords="from-errors">
        <compile files="CircularDominates.java">
            <message kind="error" line="12"/>
            <message kind="error" line="16"/>
            <message kind="error" line="20"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="StackOverFlowException with circular +implements's."
      keywords="from-errors">
        <compile files="CircularPlusImplementsIntros.java">
            <message kind="error" line="19"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" pr="388"
      title="two classes with the same fully-qualified names [eachjvm]"
      keywords="from-errors"
      comment="XXX error not flagging initial type">
        <compile files="DuplicatedNames.java">
            <message kind="error" line="3"/>
            <message kind="error" line="5"/>
            <message kind="error" line="7"/>
            <message kind="error" line="9"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" pr="396"
      title="Undefined pointcuts were throwing exceptions in 07b11 [callsto]"
      keywords="from-errors">
        <compile files="UndefinedPointCut_PR396.java">
            <message kind="error" line="8"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="checking the contra-variant errors for typing of proceed"
      keywords="from-errors,knownLimitation">
        <compile files="BadAround.java">
            <message kind="error" line="12"/>
            <message kind="error" line="15"/>
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="22"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="class and interface extension"
      keywords="from-errors,purejava,messages-vary">
        <compile files="BadExtension.java"
               options="!eclipse">
            <message kind="error" line="7"/>
            <message kind="error" line="9"/>
            <message kind="error" line="16"/>
            <message kind="error" line="17"/>
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="21"/>
            <message kind="error" line="35"/>
            <message kind="error" line="38"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="multiple conflicting introductions"
      keywords="from-errors">
        <compile files="MultipleIntros.java">
            <message kind="error" line="5"/>
            <message kind="error" line="16"/>
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="22"/>
            <message kind="error" line="27"/>
            <message kind="error" line="30"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="referencing non-static pointcuts in outer aspects"
      keywords="from-errors">
        <compile files="StaticPointcutRefs.java">
            <message kind="error" line="8"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="should give an error for introducing two members with the same name"
      keywords="from-errors">
        <compile files="TwoIntros.java">
            <message kind="error" line="10"/>
            <message kind="error" line="14"/>
            <message kind="error" line="16"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="wimpy test for undeclared and uncaught exceptions"
      keywords="from-errors">
        <compile files="UndeclaredThrows.java">
            <message kind="error" line="12"/>
            <message kind="error" line="18"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="Given non-matching TypePattern, CE flags use of non-introduced method rather than failure to introduce"
      keywords="from-errors">
        <compile
          files="typepatternmatch/pack1/IntroErrorLocation.java,typepatternmatch/pack2/TargetClass.java">
            <message kind="error" line="28"
              file="pack1/IntroErrorLocation.java"
              text="TargetClass cannot be resolved"/>
            <message kind="warning" line="33"
              file="pack1/IntroErrorLocation.java"
              text="no match for this type name: TargetClass"/>
            <message kind="error" line="39"
              file="pack1/IntroErrorLocation.java"
              text="undefined for the type TargetClass"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="457"
      title="Compiler should suggest using aspect when advice, pointcuts, or introduction is in a class"
      keywords="from-errors,poorErrorMessages">
        <compile files="RecognizeAspectCE.java">
            <message kind="error" line="3"  
            	file="RecognizeAspectCE.java"
            	text="Syntax error"/>
            <message kind="error" line="6"  
            	file="RecognizeAspectCE.java"
            	text="Syntax error"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="protected accessibility"
      keywords="from-errors,purejava">
        <compile files="protectedAccess/Main.java,protectedAccess/p1/C1.java">
            <message kind="error" line="26"/>
            <message kind="error" line="28"/>
            <message kind="error" line="29"/>
            <message kind="error" line="31"/>
            <message kind="error" line="37"/>
            <message kind="error" line="45"/>
            <message kind="error" line="46"/>
            <message kind="error" line="54"/>
            <message kind="error" line="55"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors" title="parse-time illegal modifiers"
      abccomment="Third error not found by jlc, file Modifiers1LJH.java
                  sent to Nate.  July 6/04 LJH"
      keywords="from-errors,purejava">
      <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="Modifiers1.java">
            <message kind="error" line="2"/>
            <message kind="error" line="3"/>
            <message kind="error" line="6"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="good errors (and not too many) for missing members"
      abccomment="jlc doesn't find 2 and should.  jlc exits after finding
                  1.  If 1 is commented out then 2,6,10 are not found, but
                  this is probably due to other errors that stop jlc from
                  looking for them.   Reported this case to Nate,
                  July 6/04 LJH"
      comment="XXX import of class in default package"

      keywords="from-errors,purejava">
        <compile files="NotFound.java">
            <message kind="error" line="1"/>
            <message kind="error" line="2"/>
            <message kind="error" line="6"/>
            <message kind="error" line="9"/>
            <message kind="error" line="10"/>
            <message kind="error" line="14"/>
            <message kind="error" line="16"/>
            <ajcmessage kind="error" line="1"/>
            <ajcmessage kind="error" line="2"/>
            <ajcmessage kind="error" line="6"/>
            <ajcmessage kind="error" line="9"/>
            <ajcmessage kind="error" line="10"/>
            <ajcmessage kind="error" line="14"/>
            <ajcmessage kind="error" line="16"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="494"
      title="introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public"
      keywords="from-errors">
        <compile files="IntroduceInnerInterfaceCF.java" options="-Xlint:ignore">
            <message kind="error" line="18"/>
            <message kind="error" line="19"/>
            <message kind="error" line="20"/>
            <message kind="error" line="24"/>
            <message kind="error" line="42"/>
            <message kind="error" line="45"/>
            <message kind="error" line="48"/>
            <message kind="error" line="50"/>
            <message kind="error" line="58"/>
        </compile>
    </ajc-test>
<ajc-test dir="design/intro" pr="570"
      title="errors in inheritance of multiple concrete methods"
      keywords="from-design">
        <compile files="MultiInheritCF.java">
            <message kind="error" line="21"/>
            <message kind="error" line="41"/>
            <message kind="error" line="42"/>
            <message kind="error" line="43"/>
            <message kind="error" line="45"/>
            <message kind="error" line="46"/>
        </compile>
    </ajc-test>
<ajc-test dir="design/intro"
      title="declared exceptions are checked correctly on intros (errors)">
        <compile files="ExceptionsCF.java">
            <message kind="error" line="8"/>
            <message kind="error" line="23"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" 
    	title="Cannot bind a name." keywords="from-resolved_10x,purejava"
        abccomment="ajc now finds a compile-time error in this benchmark,
                    as does javac.  jlc does not find the error, have
                    reported the error to Nate.  July 7/04"
        >
        <abckeywords> <laurie/> <nate/> </abckeywords>
        <compile files="CannotReferenceSuper.java">
           <ajcmessage kind="ignore"/>
           <message kind="error" line="26"/>
        </compile>
        <ajcrun class="CannotReferenceSuper"/>
    </ajc-test>
<ajc-test dir="new" pr="544"
      title="advice formals produce errors just like method formals"
      keywords="from-resolved_10x">
        <compile files="AdviceFormalsCf.java">
            <message kind="error" line="28"/>
            <message kind="error" line="29"/>
            <message kind="error" line="36"/>
            <message kind="error" line="37"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="570"
      title="illegal method conflicts with introductions and interfaces and PR#561"
      keywords="from-resolved_10x">
        <compile files="MethodConflictsCF.java">
            <message kind="error" line="8"/>
            <message kind="error" line="20"/>
            <message kind="error" line="28"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/introTypeMissing"
      title="Introduced type unavailable to instanceof expressions in introduced methods"
      keywords="from-resolved_10x,knownLimitation">
        <compile files="InstanceOf.java,TargetClass.java,Util.java">
            <message kind="error" line="19"/>
            <message kind="error" line="20"/>
            <message kind="error" line="21"/>
            <message kind="error" line="22"/>
            <message kind="error" line="23"/>
            <message kind="error" line="24"/>
            <message kind="error" line="25"/>
            <message kind="error" line="26"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="590"
      title="after advice on static method with pcd if() using result"
      keywords="from-resolved_10x">
        <compile files="PR590.java">
            <message kind="error" line="20"/>
            <message kind="error" line="23"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="590"
      title="after advice on static method with pcd if() using result through pointcut"
      keywords="from-resolved_10x">
        <compile files="PR590a.java" options="-Xlint:ignore">
            <message kind="error" line="29"/>
            <message kind="error" line="31"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" title="declare error and abstract pointcuts"
      keywords="from-resolved_10x">
        <compile files="AbstractDeclare.java">
            <message kind="error" line="3"/>
            <message kind="error" line="4"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="VerifyError after around advice falls off end of tryCatch"
      keywords="from-resolved_10x">
        <compile files="TryOffEnd.java">
            <message kind="warning" line="13"/>
            <message kind="warning" line="21"/>
        </compile>
        <run class="TryOffEnd"/>
    </ajc-test>
<ajc-test dir="new/subaspects" pr="647"
      title="aspect with private abstract pointcut" 
   keywords="from-resolved_10x,fail-unimplemented">
        <compile files="PrivatePointcutCE.java">
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/subaspects" pr="647"
      title="concrete aspect unable to access abstract package-private pointcut in parent for overriding"
      keywords="from-resolved_10x"
       comment="XXX getting error - confirm line numbers">
        <compile files="parent/ParentCE.java,child/ChildCE.java">
            <message kind="error" file="child/ChildCE.java" line="21"/>
            <message kind="error" file="child/ChildCE.java" line="31"/>
            <message kind="error" file="parent/ParentCE.java" line="8"/>
            <message kind="error" file="parent/ParentCE.java" line="10"/>
            <message kind="error" file="parent/ParentCE.java" line="12"/>
            <message kind="error" file="parent/ParentCE.java" line="22"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="568" title="cyclic pointcut definitions"
      keywords="from-resolved_10rc3,knownLimitation">
        <compile files="CyclicPointcuts.java">
            <message kind="error" line="11"/>
            <message kind="error" line="14"/>
            <message kind="error" line="18"/>
            <message kind="error" line="32"/>
            <message kind="error" line="43"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="619"
      title="indirect use outside aspect of undefined abstract pointcut"
      keywords="from-resolved_104">
        <compile files="AbstractPointcutIndirectCE.java">
            <message kind="error" line="9"/>
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="715" title="incrementing objects, arrays CE"
      abccomment="We don't report all errors at once, but if some are
                  commented out, the others are reported, so all cases
                  are covered.  July 7/04 LJH"
      keywords="from-resolved_104,purejava,messages-vary">
        <compile files="ArrayIncCE.java"
               options="!eclipse">
            <ajcmessage kind="error" line="15"/>
            <ajcmessage kind="error" line="16"/>
            <ajcmessage kind="error" line="17"/>
            <ajcmessage kind="error" line="18"/>
            <ajcmessage kind="error" line="19"/>
            <message kind="error" line="19"/>
            <message kind="error" line="20"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="659"
      title="name binding in before cflow containing cflowbelow"
      keywords="from-resolved_104">
        <compile files="ArgsInCflow.java" options="!eclipse">
            <message kind="error" line="29"/>
            <message kind="error" line="32"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" pr="737"
      title="should have circular inheritance errors (1)"
      abccomment="works for abc, but with 1 more error message (ok),
                  causes jlc not to terminate.  Reported to Nate July 7/04
                  LJH"
      keywords="from-resolved_105,purejava,messages-vary">
      <abckeywords> <nate/><laurie/></abckeywords>
        <compile files="circle/Test1CF.java"
               options="!eclipse">
            <ajcmessage kind="error" line="7"/>
            <ajcmessage kind="error" line="15"/>
            <ajcmessage kind="error" line="17"/>
            <message kind="error" line="7"/>
            <message kind="error" line="11"/>
            <message kind="error" line="15"/>
            <message kind="error" line="17"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" pr="737"
      title="should have circular inheritance errors (2)"
      abccomment="missing error in jlc, reported to Nate on July 7/04 LJH"
      keywords="from-resolved_105,purejava,messages-vary">
      <abckeywords> <nate/><laurie/></abckeywords>
        <compile files="circle/Test2CF.java"
               options="!eclipse">
            <message kind="error" line="6"/>
            <message kind="error" line="10"/>
            <message kind="error" line="15"/>
        </compile>
    </ajc-test>
<ajc-test dir="errors"
      title="a type is not allowed to extend or implement its own innner type"
      abccomment="jlc does not catch error, reported to Nate July 6/04 LJH"
      keywords="from-resolved_105,purejava">
        <abckeywords> <nate/> <laurie/> </abckeywords>
        <compile files="NestedInterfaceTest.java">
            <message kind="error" line="1"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="package typepattern with no packages (in default package)"
      keywords="from-resolved_105,knownLimitation">
        <compile options="-Xlint" files="TypeNames.java">
            <message kind="warning" line="34"/>
            <message kind="warning" line="39"/>
            <message kind="warning" line="43"/>
            <message kind="warning" line="47"/>
        </compile>
        <run class="TypeNames"/>
    </ajc-test>
<ajc-test dir="new" pr="701"
      title="CE for ambiguous type reference (two files in package)"
      abccomment="jlc doesn't find error when two classes in same package
                  have same name.  Reported to Nate July 6/04. LJH"
      keywords="from-resolved_105,purejava">
     <abckeywords> <nate/> <laurie/> </abckeywords>
        <compile
          files="ambiguousClass/AmbiguousReferent.java,ambiguousClass/AmbiguousClassReference.java">
            <message kind="error" line="5"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava"
      title="initializers must be able to complete normally (found by jacks)"
      abccomment="errors of abnormal exit from init and clinit not
                  found by jlc.  Example sent to Nate July 6/04 LJH"
      keywords="from-resolved_105,purejava,messages-vary">
      <abckeywords> <nate/> <laurie/> </abckeywords>
        <compile files="InitializerFlowCf.java"
               options="!eclipse">
            <message kind="error" line="2"/>
            <message kind="error" line="4"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" title="more tests of super alone"
      abccomment="abc (and javac) find syntax errors on lines 13 and 21
                  and then don't do the semantic check that finds errors
                  on lines 9 and 20.  If the syntax errors on 13 and 21 are
                  commented out, then both javac and abc find the illegal
                  uses of super on lines 9 and 20.  So this test case looks
                  fine.  July 6/04 LJH"
      keywords="from-resolved_105,purejava">
        <compile files="SuperIsWeird.java">
            <ajcmessage kind="error" line="9"/>
            <ajcmessage kind="error" line="13"/>
            <ajcmessage kind="error" line="20"/>
            <ajcmessage kind="error" line="21"/>
            <message kind="error" line="13"/>
            <message kind="error" line="21"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="764"
      title="flag errors when binding args with indeterminate prefix and suffix"
      keywords="from-resolved_105,knownLimitation">
        <compile files="IndeterminateArgsCE.java">
            <message kind="error" line="67"/>
            <message kind="error" line="68"/>
            <message kind="error" line="70"/>
            <message kind="error" line="72"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" title="CE expected for assignment to arg in if pcd"
      keywords="from-resolved_105">
        <compile files="IfPCDAssignmentCE.java">
            <message kind="error" line="16"/>
            <message kind="error" line="20"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="853"
      title="declare interface extends class">
        <compile files="DeclareInterfaceExtendsClass.java">
           <message kind="error" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="pureJava" title="assert flow"
      keywords="from-14tests,purejava">
        <compile options="-source,1.4" files="AssertsCF.java">
            <message kind="error" line="8"/>
            <message kind="error" line="11"/>
        </compile>
    </ajc-test>
<ajc-test dir="options/deprecated" 
      title="options -warn:deprecation">
        <compile files="WarnDeprecated.java,OldStuff.java"
        	options="!eclipse,-warn:deprecation">
            <message kind="warning" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="options" 
      title="options -Xlint args()" 
      keywords="lint">
        <compile files="XLintTypeArgsPCD.java"
             options="!Xlint">
            <message kind="warning" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="options" 
      title="options -Xlint declare parent" 
      keywords="lint">
        <compile files="XLintTypeDeclareParent.java"
        	options="!Xlint">
            <message kind="warning" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="options" 
      title="options -Xlint target()" 
      keywords="lint">
        <compile files="XLintTypeTargetPCD.java"
        	options="!Xlint">
            <message kind="warning" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="options" 
      title="options -Xlint this()" 
      keywords="lint">
        <compile files="XLintTypeThisPCD.java"
        	options="!Xlint">
            <message kind="warning" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" title="expect CE for unterminated declare error">
        <compile files="UnterminatedDeclareErrorCE.java">
            <message kind="error" line="4"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="expect CE for declaration collision between subaspects instead of domination order">
        <compile files="DeclarationCollisionCE.java">
            <message kind="error" line="10"/>
            <message kind="error" line="20"/>
            <message kind="error" line="27"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="851"
      title="prohibit declaring new aspect constructor with arguments">
        <compile files="DeclareAspectConstructorCE.java">
          <message kind="error" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="851"
      title="prohibit declaring only aspect constructor with arguments">
        <compile files="DeclareOnlyAspectConstructorCE.java">
          <message kind="error" line="10"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="if and cflow arg binding">
        <compile files="CflowBinding.java">
          <message kind="error" line="13"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="28921"
      title="Verify error on non-Throwable in declare soft">
        <compile files="DeclareSoftCf.java" options="-Xlint:warning">
		  <message kind="warning" line="28"/>
		  <message kind="error" line="29"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="unmatched type name in a declare parents should result in a warning in -Xlint mode"
      keywords="tofix">
        <compile options="-Xlint" files="MissingTypeInDeclareParents.java">
            <message kind="warning" line="20"/>
        </compile>
        <run class="MissingTypeInDeclareParents"/>
    </ajc-test>
<ajc-test dir="new" pr="838"
      title="checking around join point for advice return type - numeric">
        <compile files="AroundNumericCastCE.java">
            <message kind="error" line="12"/>
            <message kind="error" line="17"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="836" title="void around advice without proceed">
        <compile files="VoidAround.java">
            <message kind="error" line="11"/>
            <message kind="error" line="29"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="906"
      title="privileged access to code outside the control of the compiler">
        <compile files="PrivilegeBeyondScope.java" options="-Xlint:warning">
		  <message kind="warning" line="23"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="30026" 
    		title="problems with finalize call">
        <compile files="Finalizer.java">
            <message kind="error" line="22"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/declare" pr="31724"
            title="omnibus declare warning context with no initializer/constructor">
        <compile files="DeclareWarningEmpty.java">
            <message kind="warning" line="3" text="2 - initialization(DeclareWarningEmpty)"/>
            <message kind="warning" line="3" text="1 - staticinitialization(DeclareWarningEmpty)"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/declare" pr="31724"
            title="omnibus declare warning context">
        <compile files="DeclareWarning.java">
            <message kind="warning" line="5" text="staticinitialization(DeclareWarning)"/>
            <message kind="warning" line="12" text="call(DeclareWarning.new())"/>
            <message kind="warning" line="13" text="get staticInt"/>
            <message kind="warning" line="14" text="get instanceInt"/>
            <message kind="warning" line="15" text="set staticInt"/>
            <message kind="warning" line="16" text="set instanceInt"/>
            <message kind="warning" line="17" text="call(void run())"/>
            <message kind="warning" line="18" text="call(void irun())"/>
            <message kind="warning" line="21" text="execution(void run())"/>
            <message kind="warning" line="22" text="execution(void irun())"/>
            <message kind="warning" line="23" text="execution(DeclareWarning.new())"/>
            <message kind="warning" line="23" text="initialization(DeclareWarning)"/>
            <message kind="warning" line="33" text="handler(OutOfMemoryError) &amp;&amp; within(DeclareWarning)"/>
            <message kind="warning" line="36" text="handler(Error)"/>
            <message kind="warning" line="39" text="handler(RuntimeException) &amp;&amp; withincode(DeclareWarning.new())"/>
            <message kind="warning" line="74" text="adviceExecution() &amp;&amp; within(A)"/>
        </compile>
    </ajc-test>
<ajc-test dir="new"
      title="incompatible advice throws clause are a compile-time error"
      keywords="from-resolved_10x">
        <compile files="AdviceThrowsCf.java">
            <message kind="error" line="13"/>
            <message kind="error" line="28"/>
            <message kind="error" line="47"/>
            <message kind="error" line="48"/>
            <message kind="error" line="50"/>
            
            <message kind="error" line="70"/>
            <message kind="error" line="74"/>
            <message kind="error" line="76"/>
            <message kind="error" line="78"/>
            
            <message kind="error" line="85"/>
        </compile>
    </ajc-test>
<ajc-test dir="new" pr="660" title="illegal name binding in around cflow"
      abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04"
      keywords="from-resolved_104,knownLimitation">
        <compile files="ArgsInCflowCf.java">
            <message kind="error" line="19"/>
            <message kind="error" line="29"/>
            <message kind="error" line="35"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/declareParents" 
      title="Declare parents removing ancestor"
      keywords="from-new">
        <compile files="IllegalAdoption.java">
            <message kind="error" line="13"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs/messyAround" pr="36056"
      title="Ajc 1.1 rc1 java.lang.VerifyError with messy arounds">
        <compile files="aspects/Trace.aj,cap/OptionList.java,DebugTrace.aj">
            <message kind="warning" line="102"/>
        	<message kind="warning" line="124"/>
        	<message kind="warning" line="138"/>
        </compile>
        <run class="cap.OptionList"/>
    </ajc-test>
<ajc-test dir="new" pr="36778"
      title="can't put around advice on interface static initializer"
      comment="this tests for a nice message given a compiler limitation">
        <compile files="EmptyInterfaceCE.java">
        	<message kind="error" line="20"/>
        	<message kind="error" line="23"/>
        </compile>
    </ajc-test>
<ajc-test dir="new/options11"  pr="36329"
   	  comment="the line number might change, we're really interested only in the files here"
      title="The compiler crashes when using aspect libraries created without using -noweave">
        <compile files="Main.java,injar.jar,Aspect.java,aspectlib1.jar,aspectlib2.jar">
            <message kind="error" line="0"/>
        </compile>
   </ajc-test>
<ajc-test dir="new/binaryWarnings/src" pr="37020"
   	keywords="knownLimitation"
   	comment="source loc of binary jp depends on first code, not block start"
   	title="declare error on handler/method execution with no code on binary ajc 1.1 classes">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-ajc-1.1.jar">
        	<message kind="error" file="app/MainExecStartLines.java"
        	  line="6" text="execution(void MainExecStartLines.main(String[]))"/>
        	<message kind="error" file="app/MainExecStartLines.java"
        	  line="17" text="handler(RuntimeException)"/>        	  
        </compile>
    </ajc-test>
<ajc-test dir="new/binaryWarnings/src" pr="37020"
   	keywords="knownLimitation"
   	comment="source loc of binary jp depends on first code, not block start; XXX need javac inlining example"
   	title="declare error on handler/method execution with no code on binary javac 1.4 classes">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-javac-1.4.jar">
        	<message kind="error" file="app/MainExecStartLines.java"
        	  line="6" text="execution(void MainExecStartLines.main(String[]))"/>
        	<message kind="error" file="app/MainExecStartLines.java"
        	  line="17" text="handler(RuntimeException)"/>        	  
        </compile>
    </ajc-test>
<ajc-test dir="harness" 
        title="setting -warn:constructorName works">
        <compile files="ConstructorNameWarning.java" 
        	options="-warn:constructorName">
        	<message kind="warning" line="5" text="constructor name"/>
    	</compile>
    </ajc-test>
<ajc-test dir="harness" 
        title="valid XLintWarningTest file, default level of warning">
        <compile files="XLintWarningTest.java">
        	<message kind="warning" line="5"
        		 text="Xlint:invalidAbsoluteTypeName"/> 
        </compile>
    </ajc-test>
<ajc-test dir="harness" 
        title="XLint:error promotes XLint warnings to error">
        <compile files="XLintWarningTest.java" options="-Xlint:error">
        	<message kind="error" line="5" 
        		text="Xlint:invalidAbsoluteTypeName"/> 
        </compile>
    </ajc-test>
<ajc-test dir="new/binaryWarnings/src" pr="37020" keywords="knownLimitation"
   	 title="declare warnings on binary javac 1.4 main - constructor execution">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-javac-1.4.jar">
        	<message kind="warning" file="app/Main.java"
        	  line="23" text="execution(Main.new())"/>
        </compile>
        <run class="app.Main"/>
    </ajc-test>
<ajc-test dir="new/binaryWarnings/src" pr="37020" keywords="knownLimitation"
   	 title="declare warnings on binary ajc 1.1 main - constructor execution">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-ajc-1.1.jar">
        	<message kind="warning" file="app/Main.java"
        	  line="23" text="execution(Main.new())"/>
        </compile>
        <run class="app.Main"/>
    </ajc-test>
<ajc-test dir="bugs/handlers" pr="37898" keywords="knownLimitation"
		title="advice on handler join points should not throw unpermitted checked exceptions">
        <compile files="ExceptionCheckCE.java">
			<message kind="warning" line="8" text="expected"/>
			<message kind="error" line="25" text="throw checked exception" />
			<message kind="error" line="8" text="throw checked exception" />
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="39458"
   	 title="Compiler crash in ajc 1.1 - terrible error for inaccessible constructor">
        <compile files="NewVoid.java">
            <message kind="error" line="17"/>        
            <message kind="error" line="20"/>        
            <message kind="error" line="21"/>
                  
            <message kind="error" line="28"/>        
            <message kind="warning" line="29"/>        
            <message kind="warning" line="30"/>            
        </compile>
    </ajc-test>
<ajc-test dir="bugs/cflowAndJar" pr="39462"
   	 title="Compiler crashes in jar and cflow (with no .jar)">
        <compile files="TestAspect.aj,Test.java,AbstractAspect.aj">
        	<message kind="warning" line="16"/>
        </compile>
        <run class="Test"/>
    </ajc-test>
<ajc-test dir="bugs/cflowAndJar" pr="39462"
   	 title="Compiler crashes in jar and cflow (with .jar)"
   	 comment="make lib.jar with ajc -outjar lib.jar AbstractAspect.aj">
        <compile files="TestAspect.aj,Test.java" aspectpath="lib.jar">
        	<message kind="warning" line="16"/>
        </compile>
        <run class="Test"/>
    </ajc-test>
<ajc-test dir="errors"
		title="compile error expected for abstract pointcut outside abstract aspect">
		<compile files="AbstractPointcutCE.java">
			<message kind="error" line="5"/>
			<message kind="error" line="10"/>
		</compile>
	</ajc-test>
<ajc-test dir="bugs"
		pr="40814"
		title="compile error expected for interface pointcuts">
		<compile files="AbstractPointcutCE.java">
			<message kind="error" line="7"/>
			<message kind="error" line="11"/>		
			<message kind="error" line="15"/>
		</compile>
	</ajc-test>
<ajc-test dir="new/interfaceLibrary"
		comment="prove that LibraryAspect is required"
		title="aspect-declared interface members in libraries - interfaceOnly.jar">
		<compile 
			files="Client.java" 
			aspectpath="interfaceOnly.jar">
			<message kind="error" line="5"/>
			</compile>
		</ajc-test>
<ajc-test dir="new/interfaceLibrary"
		title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar"
		comment="prove aspect is required even if interface is woven"
		>
		<compile 
			files="Client.java" 
			classpath="aspectedInterfaceOnly.jar">
			<message kind="error" line="0" text="LibraryAspect"/>
			<message kind="error" line="9" text="LibraryInterface"/>
			</compile>
		</ajc-test>
<ajc-test dir="bugs/interfaceLibrary"
		pr="41175"
		title="exception clause for aspect-declared interface methods - negative binary">
		<compile files="ClientCE.java" aspectpath="lib.jar">
			<message kind="error" file="ClientCE.java" line="5"/>
			</compile>
		</ajc-test>
<ajc-test dir="bugs/interfaceLibrary"
		pr="41175"
		title="exception clause for aspect-declared class methods - negative binary">
		<compile files="ClassClientCE.java" aspectpath="libClass.jar">
			<message kind="error" file="ClassClientCE.java" line="5"/>
			</compile>
		</ajc-test>
<ajc-test dir="bugs/moreInterfaceLibrary"
        abccomment = "need to have aspectjrt.jar on classpath by
                          default"
		pr="41123"
		title="Weaving failure when using injars (on classpath)">
		<compile
			files="model/BusObj.java,model/MonitorBusObj.java"
			classpath="lib.jar">
		    <ajcmessage kind="error" line="3"/>
		    <message kind="error" line="3"/>
		    <message kind="error" line="6"/>
		</compile>
	</ajc-test>
<ajc-test dir="bugs/moreInterfaceLibrary"
		pr="41123"
		title="Weaving failure when using injars (actual injars)">
		<compile
			files="model/BusObj.java,model/MonitorBusObj.java,lib.jar">
		    <message kind="error" line="3"/>
		</compile>
	</ajc-test>
<ajc-test dir="bugs" pr="49457"
   	 title="No error on overloaded pointcuts in class">
        <compile files="OverloadedPointcutsInClass.java">
        	<message kind="error" line="3" text="duplicate pointcut name: pc1"/>
        	<message kind="error" line="4" text="duplicate pointcut name: pc1"/>
        	<message kind="error" line="6" text="duplicate pointcut name: pc2"/>
        	<message kind="error" line="7" text="duplicate pointcut name: pc2"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="49457"
   	 title="No error on overloaded pointcuts unless binding variables">
        <compile files="OverloadedPointcutsInAspect.java">
        	<message kind="error" line="15" text="duplicate pointcut name: pc"/>
        	<message kind="error" line="16" text="duplicate pointcut name: pc"/>
        	<message kind="error" line="18" text="incompatible type"/>
        	<message kind="error" line="20" text="incompatible type"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="48522"
      title="Declare soft softening other exception types">
        <compile files="SofteningTooMuch.java">
 	        <message kind="error" line="6" text="Unhandled exception"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="47754"
      title="static method introduction on interfaces, should not be allowed">
        <compile files="StaticInterfaceMethods.java">
		  <message kind="error" line="7" text="methods in interfaces cannot be declared static"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="45184"
      title="External pointcut refs not resolved if named pointcut used by declare">
        <compile files="DeclareErrorNamedPointcutCE.java">
 	        <message kind="error" line="10" text="ref"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs"
		title="XLint warning for call PCD's using subtype of defining type"
		pr="41952"
		>
		<compile 
			files="DeclaringTypeWarning.java"
			options="-1.3" >
			<message kind="warning" line="6" text="declaring type">
				<source line="12" file="DeclaringTypeWarning.java" />
			</message>
			<message kind="warning" line="6"  text="declaring type">
				<source line="14" file="DeclaringTypeWarning.java" />
			</message>			
		</compile>
		</ajc-test>
<ajc-test dir="bugs"
		title="XLint warning for call PCD's using subtype of defining type (-1.4 -Xlint:ignore)"
		pr="41952"
		>
		<compile
			options="-Xlint:ignore,-1.4" 
			files="DeclaringTypeWarning.java" >
            <message kind="warning" line="12"/>
		</compile>
	</ajc-test>
<ajc-test dir="bugs"
		title="XLint warning for call PCD's using subtype of defining type (-1.4)"
		pr="41952"
		>
		<compile
			options="-1.4" 
			files="DeclaringTypeWarning.java" >
			<message kind="warning" line="6" text="declaring type">
				<source line="14" file="DeclaringTypeWarning.java"/>
			</message>
			<message kind="warning" line="12" text="declare warning">
				<source line="19" file="DeclaringTypeWarning.java"/>
			</message>
		</compile>
	</ajc-test>
<ajc-test dir="bugs"
		title="Appropriate message for 'after() thowing(Throwable th)' syntax error"
		pr="49638"
		>
		<compile 
			files="AfterThrowingAdviceSyntaxError.java" >
			<message kind="error" line="21" />
			<message kind="error" line="23" />
		</compile>
	</ajc-test>
<ajc-test dir="bugs/faultingInSource" pr="46671"
      title="Ensure we don't look for source on the classpath when binary not found">
        <compile files="SimpleTracing.java" classpath="." options="-verbose">
		  <message kind="warning" line="4" text="no match for this type name: SampleClass"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="45663"
      title="Bad parser error recovery in advice">
        <compile files="ParserRecoveryTest.java">
		  <message kind="error" line="7"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs" pr="45663"
      title="Bad parser error recovery in java source"
      abccomment="error on line 8 is not reported by abc, but it is
                  ok.  July 6/04 LJH"
      >
        <compile files="ParserRecoveryTestPureJava.java">
		  <ajcmessage kind="error" line="6"/>
		  <ajcmessage kind="error" line="8"/>
		  <message kind="error" line="6"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs/abstractMethods" pr="49784"
   	 title="Introduced abstract method on abstract class not implemented by subtype">
        <compile files="abstractClass/C.java"
        		 aspectpath="abstractClass/jars/AandB.jar">
            <message kind="error" line="1"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs/abstractMethods" pr="49784"
   	 title="Introduced abstract method on interface not implemented by subtype (injars)">
       <compile files="interface/C.java,interface/jars/AandB.jar"> 
            <message kind="error" line="1"/>
        </compile>
    </ajc-test>
<ajc-test dir="bugs/interAbstract" 
		pr="49784"
		title="aspect declares interface method (no modifiers)">
        <compile files="InterfaceMethodDeclarationNone.java" >
        	<message kind="error" line="32" text="requires a body" />
        </compile>
    </ajc-test>
<ajc-test dir="bugs/interAbstract" 
		pr="49784"
		title="aspect declares interface method (abstract)">
        <compile files="InterfaceMethodDeclarationAbstract.java">
        	<message kind="error" line="40" text="must implement" />
        </compile>
    </ajc-test>
<ajc-test dir="bugs/interfaceDefinition" 
    	pr="43972"
    	title="Use class implementing interface via aspect (not woven together)">
        <compile 
        	files="pack/DefineInterface.java,
        		   pack/InterfaceDefinition.java,
        		   pack/MyInterface.java"/>
        <run class="pack.InterfaceDefinition"/>
        <compile 
        	includeClassesDir="true"
        	files="Main.java">
        	<message kind="error" line="3"/>
       </compile>
    </ajc-test>
<ajc-test dir="bugs" 
		pr="49295"
		title="declare warning on subtype constructor">
        <compile files="SubtypeConstructorCW.java" >
			<message kind="warning" line="5" text="String as first"/>
			<message kind="warning" line="10" text="String as first"/>
        </compile>
        <run class="SubtypeConstructorCW"/>
    </ajc-test>
</suite> 
