<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="DEPRECATED: introduce of variables" num="24" keywords="from-base,knownLimitation" dir="base/test117" abccomment="ajc 1.2 still does not implement static IT fields and neither does abc. ODM 4/7/04">
        <compile files="Driver.java">
          <ajcmessage kind="ignore"></ajcmessage>
          <message line="97" kind="error"></message>  
        </compile>
        
    </ajc-test>
<ajc-test title="return;;; is not really legal" num="120" keywords="from-java,purejava" dir="pureJava" abccomment="ajc doesn't report one error per spurious ;, abc does.                   Added additional messages. PA/AGS">
        <compile files="ReachableEmpty.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="A.this exprs match by exact type matching" num="133" keywords="from-java" dir="pureJava" abccomment="Polyglot does not catch error on line 14. Sent to Nate                   July 1/04. LJH">
        <compile files="QualifiedThisMatchesExactly.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Implicit this for new inner instance must be avaliable" num="134" keywords="from-java" dir="pureJava">
        <compile files="ImplicitThisMissing.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="IOException on windows if nul used as identifier" num="136" keywords="from-java,purejava" dir="new" abccomment="jlc misses error at line 14, reported to Nate July 1/04 LJH                   Fixed July 6/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NulIOException.java">
            <message line="12" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner types can't have the same simple name as an enclosing type" pr="538" num="150" keywords="from-java" dir="pureJava">
        <compile files="InnerNameConflictsCf.java">
            <message line="9" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Error expected for constructor in interfaces" num="157" keywords="from-java,purejava" dir="new" abccomment="ajc only finds errors on lines 2 and 8.                    another example of jlc crashing after error detection.                   July 2/04 LJH. abc now finds all three errors. ODM 26/07/04">

        <compile files="InterfaceConstructor.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class name for identifier as String should provoke error" pr="558" num="158" keywords="from-java,purejava" dir="new">
        <compile files="PR558.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cyclic interface inheritance not detected if no classes implement the interfaces" pr="567" num="159" keywords="from-java,purejava,messages-vary" dir="new" abccomment="Only one error message required, matches what javac does.                    July 2/04 LJH">
        <compile options="!eclipse" files="CyclicInterfaceInheritance.java">
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cyclic class inheritance" pr="567" num="160" keywords="from-java,purejava" dir="new" abccomment="There are two kinds of errors in this program, one         due to cyclic inheritance and one due to missing bodies of the         constructors.  Abc finds the missing bodies, ajc finds the         cyclic inheritance.   If the bodies are fixed to have a body then         abc finds the cyclic inheritance and gives a fine error         message.  LJH July 2/04  abc now finds both cyclic inheritance and missing bodies - hence  extra message. PA/AGS">
        <compile files="CyclicClassInheritance.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Type names are not expressions on their own" num="161" keywords="from-java,purejava" dir="pureJava" abccomment="jlc misses all errors after the first two.  Example sent to                   Nate on July 2/04.  LJH. Now find one more than ajc on line                   35. javac agrees it's an error, but ajc does not.                   ODM 26/07/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="TypeExprErrors.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <ajcmessage line="25" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <ajcmessage line="31" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <ajcmessage line="33" kind="error"></ajcmessage>
            <ajcmessage line="34" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <ajcmessage line="37" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="33" kind="error"></message>
            <message line="34" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="36" kind="error"></message>
            <message line="37" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="qualified this must work exactly, not based on subtypes" num="171" keywords="from-java" dir="pureJava">
        <compile files="QualifiedThisExactness.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="PR591 compiler error expected when directly calling unimplemented abstract method using super" num="176" keywords="from-java,purejava" dir="new" abccomment="jlc error, reported to Nate on July 2/04 LJH.">
        <compile files="AbstractMethodCall.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="suggested by Jacks 15.28-qualified-namestr tests" num="177" keywords="from-java,purejava,messages-vary" dir="pureJava" abccomment="ajc and javac already report different subset of possible                     errors,  abc correctly reports first one and then                     doesn't check rest of switch.  I think it's ok.                     July 5/04 LJH. abc and ajc 1.2 now agree.                     ODM 26/07/04.">
        <compile options="!eclipse" files="NonConstants.java">
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="13" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="expecting CE for ambiguous reference" pr="631" num="182" keywords="from-java,purejava" dir="new">
        <compile files="AmbiguousClassReference.java">
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try without catch or finally" pr="643" num="183" keywords="from-java,purejava,message-vary" dir="new" abccomment="abc parser throws additional error when giving up - PA/AGS">
        <compile options="!eclipse" files="TryNoCatchCE.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (imports)" pr="701" num="193" keywords="from-java,purejava" dir="new" abccomment="jlc and abc give a fine error message, no line number,                   seems ok.  LJH July 3/04">
        <compile files="AmbiguousClassReference2CE.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <message line="0" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two type declarations)" pr="701" num="194" keywords="from-java,purejava,messages-vary" dir="new">
        <compile options="!eclipse" files="AmbiguousClassReference3CE.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two inner types)" pr="701" num="195" keywords="from-java,purejava,messages-vary" dir="new" abccomment="error not reported by jlc, reported to Nate July 3/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile options="!eclipse" files="AmbiguousClassReference4CE.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="check that constructor name's match the enclosing type" num="207" keywords="from-errors,purejava" dir="errors">
        <compile files="BadConstructorName.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors for not applicable or accessible methods" num="209" keywords="from-errors,purejava" dir="errors">
        <compile files="MethodsNotFound.java">
            <message line="4" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try to return from a before, after, after throwing and after returning" num="210" keywords="from-errors" dir="errors">
        <compile files="InvalidReturn.java">
            <message line="12" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="the designator has a wildcard for method name but no return type specified" pr="130" num="211" keywords="from-errors" dir="errors" abccomment="abc finds 2 valid errors on that line. PA/AGS">
        <compile files="NoReturnTypeInDesignator.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message line="6" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="crosscut signature does not match" pr="140" num="213" keywords="from-errors" dir="errors">
        <compile files="BadCCutSig.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="proper exit conditions when errors fall through to javac" num="214" keywords="from-errors" dir="errors">
        <compile files="FromJavac.java">
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="mismatched parens on advice (wasn't binding Tester)" pr="213" num="215" keywords="from-errors" dir="errors" abccomment="difference in line number between abc and ajc message. ODM July 5, 2004                   abc parser throws additional errors when giving up. PA/AGS">
        <compile files="MismatchedParens.java">
            <ajcmessage line="16" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="17" kind="error"></message>
	    <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Non-static advice silently ignored" pr="209" num="216" keywords="from-errors" dir="errors">
        <compile files="BadPointcutName.java">
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: can't call new on an aspect of" num="220" keywords="from-errors" dir="errors">
        <compile files="CantCallConstructorOnAspects.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: only zero-argument constructors allowed in an aspect" num="221" keywords="from-errors,fail-unimplemented" dir="errors" abccomment="Exception from weaver; Frontend should report error - AGS 1/7/04                   Fixed - Oege 5/7/04">
        <compile files="AspectsCantHaveYesArgumentConstructors.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="eachobject: can't extend a concrete aspect" num="222" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="SubAspectsCantExtendNonAbstractAspects.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="no return statement in around advice" pr="280" num="225" keywords="from-errors,new-messages-vary" dir="errors">
        <compile files="NoReturnStatement.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner aspects must be static (no longer matches PR#286)" pr="286" num="226" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="AbstractAspectOf.java">
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Casting class declarations as interfaces" num="227" keywords="from-errors" dir="errors">
        <compile files="InterfaceCast.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="omits a variable name and crashes with a null pointer" num="228" keywords="from-errors" dir="errors">
        <compile files="BindingNullPointer.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Not generating an error for using new as a method name" num="229" keywords="from-errors" dir="errors" abccomment="abc also reports an error for typechecking. ODM 07/07/04">
        <compile files="New.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClassCastException on the int literal" num="230" keywords="from-errors" dir="errors">
        <compile files="IntLiteral.java">
            <message line="17" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in interface function prototype [TODO: move to errors]" num="231" keywords="from-errors" dir="new" abccomment="Polyglot fails to check special modifier restrictions for interfaces.                   ODM 5/7/04. This has been fixed. ODM 11/08/04">
        <compile files="StrictFpCErr1.java">
            <message line="3" kind="error"></message>
       </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in field declaration [TODO: move to errors]" num="232" keywords="from-errors" dir="new">
        <compile files="StrictFpCErr2.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Wrong strictfp keyword usage in constructor declaration [TODO: move to errors]" num="233" keywords="from-errors" dir="new">
        <compile files="StrictFpCErr3.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Incorrect static casts to primitively foldable arguments should not crash the compiler." num="234" keywords="from-errors" dir="errors">
        <compile files="BadStaticCast.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Accessing instance fields and instance methods statically." num="236" keywords="from-errors,purejava" dir="errors" abccomment="all errors,  but it is completely reasonable to report                   only the non-statement error on line 30.  This is what                   javac does on the Java part of the benchmark.  Note                   that this is NOT a purejava benchmark, but has an                   aspect in it, dispite what the keyword says.                   July 4/04 LJH Polyglot now continues further, so we catch                   more of the errors July 7/04 ODM">
        <compile files="AccessingInstanceFieldsStatically.java">
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <ajcmessage line="38" kind="error"></ajcmessage>
            <ajcmessage line="39" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="26" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="39" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="stack overflow with recursive crosscut specifier" pr="95" num="237" keywords="from-errors" dir="errors" abccomment="abc continues with type error. ODM 07/07/04">
        <compile files="RecursiveCCutSpecifier.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Throwing a NullPointerException when formals can't be bound in named pointcut" num="238" keywords="from-errors" dir="errors">
        <compile files="BadFormalsToCalls.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="disallow defining more than one pointcut with the same name" pr="385" num="239" keywords="from-errors,fail-unimplemented" dir="errors" abccomment="ajc reports an error at both locations, abc                    gives two for the last location. ODM 07/07/04">
        <compile files="OverloadedPointcuts.java">
            <ajcmessage line="4" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="pre 0.7 introduction form outside aspect body causes an EmptyStackException" num="240" keywords="from-errors" dir="errors" abccomment="abc gives further error after parse error. ODM 07/07/04">
        <compile files="BadIntroduction.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="a class can't extend an aspect" num="241" keywords="from-errors,fail-unimplemented" dir="errors">
        <compile files="ClassExtendingAspect.java">
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="a before() clause at the class-level causes an EmptyStackException" num="242" keywords="from-errors" dir="errors" abccomment="abc gives type error after parser error. ODM 07/07/04">
        <compile files="TopLevelBefore.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="an after() clause at the class-level causes an EmptyStackException" num="243" keywords="from-errors" dir="errors" abccomment="abc gives type error after parse error. ODM 07/07/04">
        <compile files="TopLevelAfter.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="an around() clause at the class-level causes an EmptyStackException" num="244" keywords="from-errors" dir="errors" abccomment="abc gives type error after parse error. ODM 07/07/04">
        <compile files="TopLevelAround.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when the closing brace is reversed" num="247" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="reports unexptected EOF on line 12, that's ok, July 4/04 LJH                 Extra error without line number is abc parser giving up                  - PA/AGS">
        <compile options="!eclipse" files="ClosingBrace.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="12" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when assigning to a final static in an intializer and declaration" num="251" keywords="from-errors,purejava" dir="errors">
        <compile files="FinalStatic.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Crashes when there're stray dots" num="253" keywords="from-errors,purejava" dir="errors" abccomment="javac,ajc and abc all give errors on all the lines.                   July 3/04 LJH. Polyglot now goes a bit further and also                   reports a type error. July 07/04 ODM">
        <compile files="StrayDot.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type error in initializer caught by ajc, not javac" num="256" keywords="from-errors,purejava" dir="errors">
        <compile files="ArrayInitializerType.java">
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Circular inheritance with classes causes a stack overflow." num="257" keywords="from-errors,purejava" dir="errors">
        <compile files="CircularExtends.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Doesn't detect cyclic inheritance of aspects." num="258" keywords="from-errors" dir="errors">
        <compile files="CircularExtendsAspect.java">
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Binds the pointcut formals to member variables instead of pointcut formals." num="259" keywords="from-errors" dir="errors" abccomment="abc catches the errors, but it doesn't do warnings yet. ODM July 5, 2004">
        <compile options="-Xlint:warning" files="PointcutFormals.java">
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="warning"></ajcmessage>
            <ajcmessage line="17" kind="warning"></ajcmessage>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>    
        </compile>
    </ajc-test>
<ajc-test title="ambiguous formal in formals pattern" num="260" keywords="from-errors" dir="errors">
        <compile files="AmbiguousFormal.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Missing ;" num="261" keywords="from-errors,purejava" dir="errors" abccomment="Extra error with no line number for parser complaint in abc. PA/AGS">
        <compile files="PR405.java">
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cast expressions should not allow casts between ifaces and array types" num="262" keywords="from-errors,purejava" dir="errors" abccomment="abc doesn't emit the second error, although it is found                   if first line commented out.   Need to establish how                   we will report errors.  July 5/04 LJH">
        <compile files="InterfaceArrayCast.java">
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good error for field name instead of type name" num="264" keywords="from-errors" dir="errors" abccomment="Polyglot bails out after the first four, but if we comment those out, the others are caught.                   ODM July 5, 2004.">
        <compile files="BadTypeName.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="4" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="12" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good error for bad field and inner class references" num="265" keywords="from-errors,purejava" dir="errors" abccomment="not pure java July 5/04 LJH                   polyglot does not find this error, sent to Nate,                        July 5/04 LJH Fixed in Polyglot 1.3. Not reporting                       the error on line 3 is deliberate in abc: it overrides                       both I1 and I2, so there is no conflict. ODM 18/08/04">
        <compile files="BadReferences.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="5" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 1" num="266" keywords="from-errors" dir="errors" abccomment="abc gives a further error message. ODM July 7,2004">
        <compile files="AspectInheritance1.java">
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 2" num="267" keywords="from-errors" dir="errors" abccomment="More accurate messages from abc. ODM July 5, 2004">
        <compile files="AspectInheritance2.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="26" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="30" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 3" num="268" keywords="from-errors" dir="errors" abccomment="ajc fails to find an additional error involving unbound                   pointcut formals at line 15; abc bails out earlier, but ok.                   ODM July 5, 2004">
        <compile files="AspectInheritance3.java">
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in aspect inheritance - 4" num="269" keywords="from-errors" dir="errors">
        <compile files="AspectInheritance4.java">
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Implementing a non-interface used to crash the compiler." num="270" keywords="from-errors,purejava" dir="errors">
        <compile files="PR333.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Should signal an error when we need an exposed value but don't provide it" num="273" keywords="from-errors" dir="errors">
        <compile files="MissingExposure.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="StackOverFlowException with circular +implements's." num="274" keywords="from-errors" dir="errors" abccomment="Not an ideal error location, but ok for now. ODM July 7, 2004">
        <compile files="CircularPlusImplementsIntros.java">
            <message line="19" kind="error"></message>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="8" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="Introducing protected methods is causing a crash" num="275" keywords="from-errors" dir="errors">
        <compile files="ProtectedIntro.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introducing protected fields is causing a crash" num="276" keywords="from-errors" dir="errors">
        <compile files="ProtectedFieldIntro.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Undefined pointcuts were throwing exceptions in 07b11 [callsto]" pr="396" num="278" keywords="from-errors" dir="errors" abccomment="An extra error from abc after the first parse error. ODM 07/07/04">
        <compile files="UndefinedPointCut_PR396.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advice on abstract pointcuts" pr="240" num="279" keywords="from-errors" dir="errors" abccomment="abc catches one more error than ajc. ODM 20/07/04">
        <compile files="StaticAdviceOnAbstract.java">
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="the arounds return something but there is no returns statement" pr="138" num="281" keywords="from-errors" dir="errors">
        <compile files="MissingReturns.java">
            <message line="14" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="simple tests of throws and for stmt typing" num="282" keywords="from-errors" dir="pureJava">
        <compile files="SimpleSpec.java">
            <message line="4" kind="error"></message>
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="error of no return statement detected not by ajc but by javac (line 4)" num="284" keywords="from-errors,purejava" dir="errors">
        <compile files="NoReturnStatementSimple.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class and interface extension" num="285" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="abc agrees with javac, but reports last error only upon                  use of the interface - ok. ODM 18/08/04">
        <compile options="!eclipse" files="BadExtension.java">
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="35" kind="error"></ajcmessage>
            <ajcmessage line="38" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="35" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 1" num="286" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros1.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 2" num="287" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros2.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 3" num="288" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, split into several cases. ODM July 7">
        <compile files="MultipleIntros3.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="27" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multiple conflicting introductions 4" num="289" keywords="from-errors" dir="abctests/errors" abccomment="abc bails out earlier, cloned to expose each error. ODM July 7">
        <compile files="MultipleIntros4.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="22" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="30" kind="error"></ajcmessage>
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="types in throws clauses" num="291" keywords="from-errors,purejava" dir="errors">
        <compile files="ThrowsClause.java">
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="referencing non-static pointcuts in outer aspects" num="292" keywords="from-errors" dir="errors">
        <compile files="StaticPointcutRefs.java">
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="javac correct compiler error if there is no return in around returning result" num="294" keywords="from-errors" dir="new">
        <compile files="NoReturnInProceed.java">
            <message line="16" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should give an error for introducing two members with the same name" num="295" keywords="from-errors" dir="errors" abccomment="abc pinpoints one cause of all four ajc messages. ODM 07/07/04">
        <compile files="TwoIntros.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="wimpy test for undeclared and uncaught exceptions" num="296" keywords="from-errors" dir="errors" abccomment="abc bails out after reachability fails. ODM 07/07/04">
        <compile files="UndeclaredThrows.java">
            <ajcmessage line="12" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <message line="18" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="test for not folding circular constants" num="297" keywords="from-errors" dir="pureJava">
        <compile files="CircularFolding.java">
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="continue targets must be continuable" num="298" keywords="from-errors" dir="pureJava" abccomment="jlc/abc reports line of label, ajc reports line of contine                   seems fine,  LJH July 5/04">
        <compile files="BadContinueTarget.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="qualified this to non-inner should be caught" num="299" keywords="from-errors" dir="pureJava">
        <compile files="BadQualifiedNew.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Referencing various things from static contexts" num="300" keywords="from-errors,purejava" dir="pureJava" abccomment="abc catches most of these, missings ones don't seem                   important since fixing other problems would get rid                   of these July 5/04">
        <compile files="StaticContexts.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="31" kind="error"></ajcmessage>
            <ajcmessage line="35" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="36" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal forward reference" num="304" keywords="from-errors,purejava" dir="pureJava" abccomment="jlc gets error (but on line 14), however abc                   doesn't find it.  Reported to Oege July 5/04 LJH.                   jlc gets the error, but only via javac. Has this                   been reported to the Polyglot folks? ODM 07/07/04">
        <compile files="IllegalForwardReference.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="parse-time illegal modifiers" num="307" keywords="from-errors,purejava" dir="errors" abccomment="abc bails out early, but ok. ODM 18/07/04">
        <compile files="Modifiers1.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message line="2" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="check-time illegal modifiers" num="308" keywords="from-errors,purejava" dir="errors" abccomment="Errors on lines 8 and 11 not caught by jlc.  Reported to                   to Nate.  July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="Modifiers.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal synchronized stmts" num="309" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="Parser throws extra error when giving up. PA/AGS">
        <compile options="!eclipse" files="BadSynchronized.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="modifiers on interface members" num="310" keywords="from-errors,purejava" dir="pureJava" abccomment="Errors on lines 2,3,7 and 8 missing for jlc. Reported to                   Nate. July 6/04">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="InterfaceMembers.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspect as member of interface (private and protected)" pr="534" num="311" keywords="from-errors" dir="new">
        <compile files="AspectInInterfaceCF.java">
            <message line="11" kind="error"></message>
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good errors (and not too many) for missing members" num="312" keywords="from-errors,purejava" dir="errors" comment="XXX import of class in default package" abccomment="jlc doesn't find 2 and should.  jlc exits after finding                   1.  If 1 is commented out then 2,6,10 are not found, but                   this is probably due to other errors that stop jlc from                   looking for them.   Reported this case to Nate,                   July 6/04 LJH; we bomb out after failing to find the imported     package - accepting this (PA/AGS/ODM)">
        <compile files="NotFound.java">
            <message kind="error"></message>
            <ajcmessage line="1" kind="error"></ajcmessage>
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="expecting compile failures with subclass narrowing scope of superclass methods or accessing private superclass variables" pr="536" num="313" keywords="from-errors,purejava" dir="new" abccomment="jlc missing the error on line 46, reported to Nate,                    July 6/04 LJH">
        <compile files="RestrictingVisibilityCF.java">
            <message line="27" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="39" kind="error"></message>
            <message line="41" kind="error"></message>
            <message line="46" kind="error"></message>
            <message line="48" kind="error"></message>
            <message line="53" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public" pr="494" num="314" keywords="from-errors" dir="new" abccomment="abc bails out earlier, but ok. ODM 11/08/04">
        <compile options="-Xlint:ignore" files="IntroduceInnerInterfaceCF.java">
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="24" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="48" kind="error"></ajcmessage>
            <ajcmessage line="50" kind="error"></ajcmessage>
            <ajcmessage line="58" kind="error"></ajcmessage>
            <message line="58" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspects may not implement Serializable or Cloneable" num="315" keywords="from-errors" dir="errors">
        <compile files="AspectInterfaces.java">
            <message line="4" kind="error"></message>
            <message line="5" kind="error"></message>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner classes may not have static non-constant members" num="316" keywords="from-errors,purejava" dir="errors" abccomment="ajc actually reports three errors ...">
        <compile files="InnerMembers.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
	    <message line="9" kind="error"></message>
	    <message line="10" kind="error"></message>
	    <message line="11" kind="error"></message>
	</compile>
    </ajc-test>
<ajc-test title="flow analysis with local types" num="318" keywords="from-errors,purejava" dir="pureJava" abccomment="abc reports a range of line numbers which is fine                   July 6/04 LJH">
        <compile files="InnerFlow.java">
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="bad proceed args good error messages" pr="664" num="319" keywords="from-errors" dir="errors">
        <compile files="ProceedArgsCE.java">
            <message line="13" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="introduction of static methods and fields on classes and interfaces" num="323" keywords="from-design,knownLimitation" dir="design/intro" abccomment="abc does not implement static intertype fields on interfaces, either. ODM 07/07/04">
        <compile files="Statics.java">
           <message line="46" kind="error"></message>
           <message line="47" kind="error"></message>
           <message line="49" kind="error"></message>
           <message line="51" kind="error"></message>
        </compile>
        <ajcrun class="Statics"></ajcrun>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 1" pr="570" num="325" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF1.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="42" kind="error"></message>
            <message line="42" kind="error"></message>
            <message line="46" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 2" pr="570" num="326" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF2.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="43" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 3" pr="570" num="327" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF3.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="41" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 4" pr="570" num="328" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF4.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="21" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="declared exceptions are checked correctly on intros (errors) 1" num="329" dir="abctests/design/intro" abccomment="abc bails out early, so copied. ODM 09/07/04">
        <compile files="ExceptionsCF1.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="23" kind="error"></ajcmessage>
            <message line="23" kind="error"></message> 
       </compile>
    </ajc-test>
<ajc-test title="Cannot bind a name." num="413" keywords="from-resolved_10x,purejava" dir="new" abccomment="ajc now finds a compile-time error in this benchmark,                     as does javac.  jlc does not find the error, have                     reported the error to Nate.  July 7/04">
        <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="CannotReferenceSuper.java">
           <ajcmessage kind="ignore"></ajcmessage>
           <message line="26" kind="error"></message>
        </compile>
        <ajcrun class="CannotReferenceSuper"></ajcrun>
    </ajc-test>
<ajc-test title="different version of aspect inheritance, particularly empty pointcuts and abstract cflows [eachcflow]" num="458" keywords="from-resolved_10x,fail-unimplemented" dir="new" abccomment="There is an unbound formal in a pointcut which we correctly report as an error">
        <compile files="AspectInheritance.java">
	<message line="24" kind="error"></message>
	</compile>
        
	
    </ajc-test>
<ajc-test title="advice formals produce errors just like method formals" pr="544" num="520" keywords="from-resolved_10x" dir="new" abccomment="we give up in each method after finding the first error">
        <compile files="AdviceFormalsCf.java">
            <ajcmessage line="28" kind="error"></ajcmessage>
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="36" kind="error"></ajcmessage>
            <ajcmessage line="37" kind="error"></ajcmessage>
            <message line="28" kind="error"></message>
            <message line="36" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal method conflicts with introductions and interfaces and PR#561" pr="570" num="523" keywords="from-resolved_10x" dir="new" abccomment="abc gives one error for one mistake, and ajc gives several. ODM 11/08/04">
        <compile files="MethodConflictsCF.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="28" kind="error"></ajcmessage>
            <message line="28" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after advice on static method with pcd if() using result" pr="590" num="537" keywords="from-resolved_10x" dir="new">
        <compile files="PR590.java">
            <message line="20" kind="error"></message>
            <message line="23" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after advice on static method with pcd if() using result through pointcut" pr="590" num="538" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="PR590a.java">
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspect with private abstract pointcut" pr="647" num="548" keywords="from-resolved_10x,fail-unimplemented" dir="new/subaspects">
        <compile files="PrivatePointcutCE.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="concrete aspect unable to access abstract package-private pointcut in parent for overriding" pr="647" num="549" keywords="from-resolved_10x" dir="new/subaspects" comment="XXX getting error - confirm line numbers" abccomment="abc bails out early, but ok. ODM 11/08/04">
        <compile files="parent/ParentCE.java,child/ChildCE.java">
            <ajcmessage line="21" kind="error" file="child/ChildCE.java"></ajcmessage>
            <ajcmessage line="31" kind="error" file="child/ChildCE.java"></ajcmessage>
            <ajcmessage line="8" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="10" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="12" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <ajcmessage line="22" kind="error" file="parent/ParentCE.java"></ajcmessage>
            <message line="22" kind="error" file="parent/ParentCE.java"></message>
            <message line="31" kind="error" file="child/ChildCE.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="accessing private superclass members from body of method introduction" num="556" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroductionCE.java">
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="multi-dispatch not used for named pcd references" pr="632" num="565" keywords="from-resolved_10x" dir="new">
        <compile files="MultiDispatchCf.java">
            <message line="54" kind="error"></message>
            <message line="57" kind="error"></message>
            <message line="60" kind="error"></message>
            <message line="71" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="unrecognized aspect should not net Cloneable and Serializable warnings" num="567" keywords="from-resolved_10x" dir="new">
        <compile files="UnrecognizedAspectCE.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="invalid number and type of proceed arguments" num="571" keywords="from-resolved_10x" dir="new">
        <compile files="InvalidProceedArgsCE.java">
            <message line="10" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="37" kind="error"></message>
            <message line="39" kind="error"></message>
            <message line="43" kind="error"></message>
            <message line="46" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cyclic pointcut definitions" pr="568" num="585" keywords="from-resolved_10rc3,knownLimitation" dir="new" abccomment="abc checks for cycles whether pointcuts are used or not. ODM 21/07/04">
        <compile files="CyclicPointcuts.java">
            <ajcmessage line="11" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <message line="11" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="40" kind="error"></message>
            <message line="43" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="direct use outside aspect of undefined abstract pointcut" pr="619" num="602" keywords="from-resolved_104" dir="new">
        <compile files="AbstractPointcutAccessCE.java">
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="indirect use outside aspect of undefined abstract pointcut" pr="619" num="603" keywords="from-resolved_104" dir="new" abccomment="one error from abc, ok. ODM 20/07/04">
        <compile files="AbstractPointcutIndirectCE.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays - 2" pr="715" num="609" keywords="from-resolved_104,purejava" dir="new">
        <compile files="ArrayInc2CE.java">
            <message line="12" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays CE" pr="715" num="610" keywords="from-resolved_104,purejava,messages-vary" dir="new" abccomment="slightly different errors reported">
        <compile options="!eclipse" files="ArrayIncCE.java">
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="incrementing objects, arrays - 3" pr="715" num="611" keywords="from-resolved_104,purejava" dir="new">
        <compile files="ArrayInc3CE.java">
            <message line="15" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="name binding in before cflow containing cflowbelow" pr="659" num="616" keywords="from-resolved_104" dir="new">
        <compile options="!eclipse" files="ArgsInCflow.java">
            <ajcmessage line="29" kind="error"></ajcmessage>
            <ajcmessage line="32" kind="error"></ajcmessage>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (1)" pr="737" num="619" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test1CF.java">
            <message line="7" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (2)" pr="737" num="620" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="we only report one error for each inheritance loop">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test2CF.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="a type is not allowed to extend or implement its own innner type" num="624" keywords="from-resolved_105,purejava" dir="errors" abccomment="jlc does not catch error, reported to Nate July 6/04 LJH">
        <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile files="NestedInterfaceTest.java">
            <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="try requires block JLS 14.19" num="625" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="abc parser throws extra error. PA/AGS">
        <compile options="!eclipse" files="TryBlockRequiredCE.java">
            <ajcmessage line="6" kind="error"></ajcmessage>
	    <message kind="error"></message>
            <message kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="local variables must be final to be accessed from inner class" pr="739" num="628" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="ajc finds spurious errors about not being able to                      resolve anonymous classes.   Found another bug                    about not finding a uninit var and reported both                    to Nate July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="LocalsFromInnerCE.java">
            <message line="6" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="32" kind="error"></message>
            <message line="40" kind="error"></message>
            <message line="51" kind="error"></message>
            <message line="61" kind="error"></message>
            <message line="67" kind="error"></message>
            <message line="75" kind="error"></message>
            <message line="81" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="initializers must be able to complete normally (found by jacks)" num="638" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="errors of abnormal exit from init and clinit not                   found by jlc.  Example sent to Nate July 6/04 LJH">
      <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile options="!eclipse" files="InitializerFlowCf.java">
            <message line="2" kind="error"></message>
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="more tests of super alone" num="640" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="SuperIsWeird.java">
            <message line="9" kind="error"></message>
            <message line="13" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="flag errors when binding args with indeterminate prefix and suffix" pr="764" num="647" keywords="from-resolved_105,knownLimitation" dir="new" abccomment="ajc reports errors in named pointcuts at use; we report                   the error at the point of declaration. ODM 13/08/04">
        <compile files="IndeterminateArgsCE.java">
            <ajcmessage line="67" kind="error"></ajcmessage>
            <ajcmessage line="68" kind="error"></ajcmessage>
            <ajcmessage line="70" kind="error"></ajcmessage>
            <ajcmessage line="72" kind="error"></ajcmessage>
            <message line="65" kind="error"></message>
            <message line="66" kind="error"></message>
            <message line="67" kind="error"></message>
            <message line="68" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CE expected for assignment to arg in if pcd" num="655" keywords="from-resolved_105" dir="new">
        <compile files="IfPCDAssignmentCE.java">
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare interface extends class" pr="853" num="660" dir="new">
        <compile files="DeclareInterfaceExtendsClass.java">
           <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare interface implements class" pr="853" num="661" dir="new">
        <compile files="DeclareInterfaceImplementsClass.java">
           <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert flow" num="662" keywords="from-14tests,purejava" dir="pureJava" abccomment="assert b=false  should not definitely assign to b,         so jlc does not give a later var not assigned error.  Reported         to Polyglot bugzilla July 7/04 LJH">
        <compile options="-source,1.4" files="AssertsCF.java">
            <ajcmessage line="8" kind="error"></ajcmessage>
            <ajcmessage line="11" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert flow - 2" num="663" keywords="from-14tests,purejava" dir="pureJava">
        <compile options="-source,1.4" files="AssertsCF2.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert typing" num="664" keywords="from-14tests,purejava,fail-publicType" dir="pureJava">
        <compile options="-source,1.4" files="AssertsCF1.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor - error" pr="889" num="692" dir="new" abccomment="abc gives two errors, but ok. ODM 13/08/04">
        <compile files="AfterReturningInterfaceConstructorCE.java">
        	<ajcmessage line="26" kind="error"></ajcmessage>
        	<ajcmessage line="30" kind="warning"></ajcmessage>
                <message line="26" kind="error"></message>
                <message line="26" kind="error"></message>
                <message line="30" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="options declare field on bad type" num="700" dir="options">
        <compile options="!eclipse" files="XLintTypeDeclareField.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="options declare method on bad type" num="701" dir="options">
        <compile options="!eclipse" files="XLintTypeDeclareMethod.java">
            <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="expect CE for declaration collision between subaspects instead of domination order" num="715" dir="new">
        <compile files="DeclarationCollisionCE.java">
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="27" kind="error"></ajcmessage>
	    <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="subtype pattern in dominates will conflict with type pattern" num="717" dir="new">
        <compile files="DominatesTypePatternCE.java">
        	<message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after throwing advice with non-throwable formal" pr="832" num="719" dir="new">
        <compile files="AfterThrowingNonThrowable.java">
            <message line="41" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="prohibit declaring new aspect constructor with arguments" pr="851" num="721" dir="new">
        <compile files="DeclareAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="prohibit declaring only aspect constructor with arguments" pr="851" num="722" dir="new">
        <compile files="DeclareOnlyAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="if and cflow arg binding" num="726" dir="new">
        <compile files="CflowBinding.java">
          <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="privileged access to code outside the control of the compiler" pr="906" num="739" dir="bugs">
        <compile options="-Xlint:warning" files="PrivilegeBeyondScope.java">
		  <ajcmessage line="23" kind="warning"></ajcmessage>
		  <message line="23" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Declare precedence should not allow multiple * patterns" pr="29689" num="746" dir="bugs">
        <compile files="CircularPrecedence.java">
            <message line="14" kind="error"></message> 
        </compile>
    </ajc-test>
<ajc-test title="no such constructor for proceed argument (error)" num="759" dir="binding">
        <compile files="UnfoundConstructor.java">
        	<message line="25" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type not imported in around advice" num="766" dir="errors">
        <compile files="TypeNotImportedInAroundCE.java">
        	<message line="10" kind="error"></message>
        </compile>
	</ajc-test>
<ajc-test title="type not imported in aspect" num="767" dir="errors">
        <compile files="TypeInAspectNotImportedCE.java">
        	<message line="6" kind="error"></message>
        </compile>
	</ajc-test>
<ajc-test title="class extending abstract aspect" num="768" keywords="error" dir="errors">
        <compile files="ClassExtendingAbstractAspectCE.java">
			<message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Declare parents removing ancestor" num="776" keywords="from-new" dir="new/declareParents">
        <compile files="IllegalAdoption.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="implemented abstract pointcut" pr="36736" num="780" dir="new">
        <compile files="AbstractImplementedPointcut.java">
            <message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="lame error message: negation doesn't allow binding" pr="30663" num="790" dir="bugs">
        <compile files="BadBindingError.java">
            <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="CLE: -help usage" num="809" keywords="command-line-error,knownLimitation" dir="harness" comment="can't test -help: has to abort, but returns 0, normal status">
        <compile options="-help" badInput="true">
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="CLE: bad filename" num="811" keywords="command-line-error,knownLimitation-ajctaskCompiler,knownLimitation-ajdeCompiler" dir="harness" comment="ajde omits usage" abccomment="abc only throws one error - correctly, in our opinion. PA/AGS">
        <compile files="NoSuchFile.java" badInput="true">
            <ajcmessage text="NoSuchFile.java" kind="error"></ajcmessage>
            <ajcmessage text="Usage" kind="abort"></ajcmessage>
	    <message kind="error" file="NoSuchFile.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="Compiler crash in ajc 1.1 - terrible error for inaccessible constructor" pr="39458" num="834" dir="bugs" abccomment="abc bails out early">
        <compile files="NewVoid.java">
            <ajcmessage line="17" kind="error"></ajcmessage>        
            <ajcmessage line="20" kind="error"></ajcmessage>        
            <ajcmessage line="21" kind="error"></ajcmessage>
                  
            <ajcmessage line="28" kind="error"></ajcmessage>        
            <ajcmessage line="29" kind="warning"></ajcmessage>        
            <ajcmessage line="30" kind="warning"></ajcmessage>            

            <message line="20" kind="error"></message>        
            <message line="28" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="Missing import crashes compiler" pr="39460" num="835" dir="bugs">
        <compile files="MissingImport.java">
            <message line="13" kind="error"></message>       
        </compile>
    </ajc-test>
<ajc-test title="using super in method introduced on interface with multiple supertypes" num="839" dir="bugs">
        <compile files="MultipleSuperCf.java">
        	<message line="14" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="compile error expected for abstract pointcut outside abstract aspect" num="844" dir="errors" abccomment="better errors from abc. 19/07/04 ODM">
		<compile files="AbstractPointcutCE.java">
			<ajcmessage line="5" kind="error"></ajcmessage>
			<ajcmessage line="10" kind="error"></ajcmessage>
                        <message line="4" kind="error"></message>
                        <message line="5" kind="error"></message>
                        <message line="9" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="weaver trace on mis-qualified pointcut reference" pr="40858" num="846" dir="bugs" comment="super is not permitted in pointcuts in 1.1">
		<compile files="SuperPointcutCE.java">
			<message line="23" kind="error"></message>
			<message line="26" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="compile error expected for interface pointcuts" pr="40814" num="847" dir="bugs" abccomment="an extra message from abc. ODM 19/07/04">
		<compile files="AbstractPointcutCE.java">
			<ajcmessage line="7" kind="error"></ajcmessage>
			<ajcmessage line="11" kind="error"></ajcmessage>		
			<ajcmessage line="15" kind="error"></ajcmessage>
	                <message line="7" kind="error"></message>
			<message line="11" kind="error"></message>
                        <message line="14" kind="error"></message>		
			<message line="15" kind="error"></message>                        
		</compile>
	</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar" num="852" dir="new/interfaceLibrary" comment="prove aspect is required even if interface is woven" abccomment="only one error, but ok. ODM 27/07/04">
		<compile files="Client.java" classpath="aspectedInterfaceOnly.jar">
			<ajcmessage text="LibraryAspect" line="0" kind="error"></ajcmessage>
			<ajcmessage text="LibraryInterface" line="9" kind="error"></ajcmessage>
	                <message text="LibraryInterface" line="9" kind="error"></message>
			</compile>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar,aspectOnly.jar" num="853" dir="new/interfaceLibrary" comment="weaving required for implementations of interface?             XXX Would prefer to support javac compiles of Client here, mimicked with classpath only">
		<compile files="Client.java" classpath="aspectedInterfaceOnly.jar,aspectOnly.jar">
			<message line="9" kind="error"></message>
                        </compile>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnlyBinary.jar,aspectOnly.jar" num="854" dir="new/interfaceLibrary" comment="works if aspect is only on the classpath?, i.e., no weaving XXX need javac run">
		<compile files="Client.java" classpath="aspectedInterfaceOnlyBinary.jar,aspectOnly.jar">
			<message line="9" kind="error"></message>
			</compile>
		</ajc-test>
<ajc-test title="declare error fails on pointcuts composed from multiple classes" pr="42740" num="874" dir="bugs/declareBinding" abccomment="awaiting tags with source locs, ok. ODM 19/07/04">
		<compile files="SampleExceptionHandling1.java">
		    <ajcmessage line="2" kind="error"></ajcmessage>
		    <message kind="error"></message>
                </compile>
	</ajc-test>
<ajc-test title="No error on overloaded pointcuts in class" pr="49457" num="882" dir="bugs" abccomment="abc messages differ but ok. ODM 19/07/04">
        <compile files="OverloadedPointcutsInClass.java">
        	<ajcmessage text="duplicate pointcut name: pc1" line="3" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc1" line="4" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc2" line="6" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc2" line="7" kind="error"></ajcmessage>
                <message line="4" kind="error"></message>
                <message line="6" kind="error"></message>
        	<message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="No error on overloaded pointcuts unless binding variables" pr="49457" num="883" dir="bugs" abccomment="abc text different but ok. ODM 19/07/04">
        <compile files="OverloadedPointcutsInAspect.java">
        	<ajcmessage text="duplicate pointcut name: pc" line="15" kind="error"></ajcmessage>
        	<ajcmessage text="duplicate pointcut name: pc" line="16" kind="error"></ajcmessage>
        	<ajcmessage text="incompatible type" line="18" kind="error"></ajcmessage>
        	<ajcmessage text="incompatible type" line="20" kind="error"></ajcmessage>
                <message line="15" kind="error"></message>
        	<message line="16" kind="error"></message>
                <message line="16" kind="error"></message>
                <message line="17" kind="error"></message>
                <message line="18" kind="error"></message>
                <message line="19" kind="error"></message>
        	<message line="20" kind="error"></message>
                <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="static method introduction on interfaces, should not be allowed" pr="47754" num="886" dir="bugs" abccomment="text of message is better in abc. ODM 19/07/04">
        <compile files="StaticInterfaceMethods.java">
		  <ajcmessage text="methods in interfaces cannot be declared static" line="7" kind="error"></ajcmessage>
                  <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="External pointcut refs not resolved if named pointcut used by declare" pr="45184" num="887" dir="bugs" abccomment="awaiting source pos tags. OK for now ODM 19/07/04">
        <compile files="DeclareErrorNamedPointcutCE.java">
 	        <ajcmessage text="ref" line="10" kind="error"></ajcmessage>
                <message kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Appropriate message for 'after() thowing(Throwable th)' syntax error" pr="49638" num="892" dir="bugs" abccomment="Polyglot continues beyond parse errors and throws another problem. ODM 07/07/04">
		<compile files="AfterThrowingAdviceSyntaxError.java">
			<ajcmessage line="21" kind="error"></ajcmessage>
			<ajcmessage line="23" kind="error"></ajcmessage>
			<message line="21" kind="error"></message>
                        <message line="22" kind="error"></message>
			<message line="23" kind="error"></message>
                </compile>
	</ajc-test>
<ajc-test title="Bad parser error recovery in advice" pr="45663" num="895" dir="bugs" abccomment="Polyglot continues beyond parse, and thus has another error. ODM 07/07/04">
        <compile files="ParserRecoveryTest.java">
		  <ajcmessage line="7" kind="error"></ajcmessage>
                  <message line="4" kind="error"></message>
                  <message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Bad parser error recovery in java source" pr="45663" num="896" dir="bugs" abccomment="error on line 8 is not reported by abc, but it is                   ok.  July 6/04 LJH. abc now reports both. July 19/04 ODM.">
        <compile files="ParserRecoveryTestPureJava.java">
		  <message line="6" kind="error"></message>
		  <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introduced abstract method on interface not implemented by subtype (injars)" pr="49784" num="901" dir="bugs/abstractMethods">
       <compile files="interface/C.java,interface/jars/AandB.jar"> 
            <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Introduced abstract method on abstract class not implemented by subtype (single source file)" pr="49784" num="903" dir="bugs/abstractMethods" abccomment="abc gives message at intertype decl rather than class. ODM July 14,2004">
        <compile files="singlesource/C.java">
        	<ajcmessage line="9" kind="error"></ajcmessage>
                <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="aspect declares interface method (no modifiers)" pr="49784" num="906" dir="bugs/interAbstract">
        <compile files="InterfaceMethodDeclarationNone.java">
        	<message text="requires a body" line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 1" pr="51320" num="926" dir="bugs" abccomment="abc does indirect checks in later phase, and bails out too early,                      hence cloned this test. ODM 10/8/04">
        <compile files="DecwClassCastException.java">
        
         
         <ajcmessage text="if() pointcut designator cannot be used" line="27" kind="error"></ajcmessage>
         <ajcmessage text="if() pointcut designator cannot be used" line="29" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="31" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="33" kind="error"></ajcmessage>
         
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></ajcmessage>
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></ajcmessage>
         
         <ajcmessage text="this() pointcut designator cannot be used" line="39" kind="error"></ajcmessage>
         <ajcmessage text="this() pointcut designator cannot be used" line="41" kind="error"></ajcmessage>
         
         <ajcmessage text="target() pointcut designator cannot be used" line="43" kind="error"></ajcmessage>
         <ajcmessage text="target() pointcut designator cannot be used" line="45" kind="error"></ajcmessage>
         
         <ajcmessage text="args() pointcut designator cannot be used" line="47" kind="error"></ajcmessage>
         <ajcmessage text="args() pointcut designator cannot be used" line="49" kind="error"></ajcmessage>
         <message text="if() pointcut designator cannot be used" line="27" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="31" kind="error"></message>
         <message text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="39" kind="error"></message>
         <message text="target() pointcut designator cannot be used" line="43" kind="error"></message>
         <message text="args() pointcut designator cannot be used" line="47" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 1-1" pr="51320" num="92601" dir="abctests/bugs" abccomment="cloned from 926">
        <compile files="DecwClassCastExceptionIndirect.java">
        
         
         <message text="if() pointcut designator cannot be used" line="29" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="33" kind="error"></message>
         <message text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="41" kind="error"></message>
         <message text="target() pointcut designator cannot be used" line="45" kind="error"></message>
         <message text="args() pointcut designator cannot be used" line="49" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 2-1" pr="51320" num="927" dir="bugs">
        <compile files="DeclareSoftDynamicPCDs.java">
        
         
         <ajcmessage text="if() pointcut designator cannot be used" line="27" kind="error"></ajcmessage>
         <ajcmessage text="if() pointcut designator cannot be used" line="29" kind="error"></ajcmessage>
         
         <ajcmessage text="cflow() pointcut designator cannot be used" line="31" kind="error"></ajcmessage>
         <ajcmessage text="cflow() pointcut designator cannot be used" line="33" kind="error"></ajcmessage>
         
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></ajcmessage>
         <ajcmessage text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></ajcmessage>
         
         <ajcmessage text="this() pointcut designator cannot be used" line="39" kind="error"></ajcmessage>
         <ajcmessage text="this() pointcut designator cannot be used" line="41" kind="error"></ajcmessage>
         
         <ajcmessage text="target() pointcut designator cannot be used" line="43" kind="error"></ajcmessage>
         <ajcmessage text="target() pointcut designator cannot be used" line="45" kind="error"></ajcmessage>
         
         <ajcmessage text="args() pointcut designator cannot be used" line="47" kind="error"></ajcmessage>
         <ajcmessage text="args() pointcut designator cannot be used" line="49" kind="error"></ajcmessage>
         
         <message text="if() pointcut designator cannot be used" line="27" kind="error"></message>
         <message text="cflow() pointcut designator cannot be used" line="31" kind="error"></message>
         
         <message text="cflowbelow() pointcut designator cannot be used" line="35" kind="error"></message>
         <message text="this() pointcut designator cannot be used" line="39" kind="error"></message>
         
         <message text="target() pointcut designator cannot be used" line="43" kind="error"></message>
         
         <message text="args() pointcut designator cannot be used" line="47" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="ClasscastException on concretization of if(false) 2-2" pr="51320" num="92701" dir="abctests/bugs">
        <compile files="DeclareSoftDynamicPCDsIndirect.java">
        
         
         <message text="if() pointcut designator cannot be used" line="29" kind="error"></message>
         
         <message text="cflow() pointcut designator cannot be used" line="33" kind="error"></message>
         
         <message text="cflowbelow() pointcut designator cannot be used" line="37" kind="error"></message>
         
         <message text="this() pointcut designator cannot be used" line="41" kind="error"></message>
         
         <message text="target() pointcut designator cannot be used" line="45" kind="error"></message>
         
         <message text="args() pointcut designator cannot be used" line="49" kind="error"></message>
         
        </compile>
    </ajc-test>
<ajc-test title="declare String field on interface" pr="52107" num="945" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="StringFieldOnInterface.java">
			<message line="16" kind="error"></message>
			<message line="17" kind="error"></message>
			<ajcmessage text="this affected type is not exposed" line="16" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="17" kind="warning"></ajcmessage>
		</compile>	   
	</ajc-test>
<ajc-test title="declare int field on interface" pr="52107" num="946" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="IntFieldOnInterface.java">
		<message line="27" kind="error"></message>
		<message line="28" kind="error"></message>
		<ajcmessage text="this affected type is not exposed" line="27" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="28" kind="warning"></ajcmessage>
		</compile>
	</ajc-test>
<ajc-test title="declare Object field on interface" pr="52107" num="947" dir="bugs/fieldsOnInterfaces" abccomment="this is an error for us">
		<compile files="ObjectFieldOnInterface.java">
			<message line="20" kind="error"></message>
			<message line="21" kind="error"></message>
			<ajcmessage text="this affected type is not exposed" line="20" kind="warning"></ajcmessage>
         	<ajcmessage text="this affected type is not exposed" line="21" kind="warning"></ajcmessage>
		</compile>
	</ajc-test>
<ajc-test title="Introduce Unknown Type to class causes Null pointer exception" pr="51322" num="953" dir="bugs">
        <compile files="Pr51322.java"> 
        	<message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Private members introduced via an interface are visible to the class" pr="52928" num="957" dir="bugs">
		<compile files="VisiblePrivateInterfaceITDs.java">
            <message line="13" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="declare precedence on a class should be a compile-time error 1" pr="53012" num="958" dir="bugs/declarePrecedenceWithClasses">
        <compile files="DeclarePrecedenceTestClass.java">
          <message text="Non-aspect types can only be specified" line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="error Type mismatch: cannot convert from java.lang.String to java.lang.String" pr="55341" num="960" keywords="" dir="bugs/StringToString" comment="make helloworld.jar with 'ajc -outjar helloworld.jar HW.java' or run BcweaverJarMaker" abccomment="we think this is an error">
        <compile files="X.java" classpath="helloworld.jar">
        	<ajcmessage line="3" kind="warning"></ajcmessage>
        	<ajcmessage line="7" kind="warning"></ajcmessage>
        	<message line="3" kind="error"></message>
        	<message line="7" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="NPE when binary weaving a ctor ITD" pr="59440" num="964" dir="bugs">
        <compile files="CtorITD.aj">
        	<message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare parents causes interface to implement itself" num="991" dir="abctests/bugs">
	<compile files="foo/Foo.java">
	    <message line="11" kind="error" file="foo/Foo.java"></message>
	</compile>
    </ajc-test>
<ajc-test title="circular pointcuts" num="1013" dir="abctests/bugs">
         <compile files="TestAspect.java">
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
         </compile>
    </ajc-test>
 
</suite>
