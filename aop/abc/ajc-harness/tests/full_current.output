Running test base/test100/static and non-static before methods -- one file
Commandline: abc -d base/test100 base/test100/Driver.java 
Abc started on Fri Jul 30 09:58:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Pos... 
Transforming Bar... 
Transforming Driver... 
Transforming Foo... 
Transforming Foo$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:04 BST 2004. ( 0 min. 4 sec. )
================================================
Breakdown of abc phases  (total: 4157 millisec.)
------------------------------------------------
[ 14.361% ] Init. of Soot:  597
[ 00.072% ] Loading Jars:  3
[ 09.526% ] Create polyglot compiler:  396
[ 27.664% ] Polyglot phases:  1150
[ 00.096% ] Resolve class names:  4
[ 00.048% ] Declare Parents:  2
[ 00.601% ] Intertype Adjuster:  25
[ 07.048% ] Retrieving bodies:  293
[ 01.419% ] Update pattern matcher:  59
[ 00.000% ] Weave Initializers:  0
[ 00.505% ] Load shadow types:  21
[ 03.536% ] Compute advice lists:  147
[ 00.072% ] Intertype weave:  3
[ 01.491% ] Add aspect code:  62
[ 00.986% ] Weaving advice:  41
[ 00.144% ] Exceptions check:  6
[ 00.000% ] Validate jimple:  0
[ 20.640% ] Soot Packs:  858
[ 11.787% ] Soot Writing Output:  490
================================================
PASS: base/test100: Test "static and non-static before methods -- one file" passed.


Running test base/test101/static and non-static before methods -- many files
Commandline: abc -d base/test101 base/test101/Driver.java base/test101/Foo.java base/test101/Bar.java base/test101/Pos.java 
Abc started on Fri Jul 30 09:59:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Pos... 
Transforming Foo... 
Transforming Bar... 
Transforming Driver... 
Transforming Foo$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:05 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1260 millisec.)
------------------------------------------------
[ 09.127% ] Init. of Soot:  115
[ 00.000% ] Loading Jars:  0
[ 00.079% ] Create polyglot compiler:  1
[ 21.032% ] Polyglot phases:  265
[ 00.079% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.444% ] Retrieving bodies:  56
[ 04.206% ] Update pattern matcher:  53
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.937% ] Compute advice lists:  37
[ 00.000% ] Intertype weave:  0
[ 00.159% ] Add aspect code:  2
[ 01.190% ] Weaving advice:  15
[ 00.159% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 46.032% ] Soot Packs:  580
[ 10.556% ] Soot Writing Output:  133
================================================
PASS: base/test101: Test "static and non-static before methods -- many files" passed.


Running test base/test102/this redirection in non-static before methods
Commandline: abc -d base/test102 base/test102/Driver.java 
Abc started on Fri Jul 30 09:59:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming DriverAspect... 
Transforming Driver... 
Transforming DriverAspect$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 783 millisec.)
------------------------------------------------
[ 10.728% ] Init. of Soot:  84
[ 00.000% ] Loading Jars:  0
[ 00.128% ] Create polyglot compiler:  1
[ 28.352% ] Polyglot phases:  222
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.171% ] Retrieving bodies:  17
[ 36.398% ] Update pattern matcher:  285
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.788% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.128% ] Add aspect code:  1
[ 00.766% ] Weaving advice:  6
[ 00.128% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.027% ] Soot Packs:  102
[ 06.386% ] Soot Writing Output:  50
================================================
PASS: base/test102: Test "this redirection in non-static before methods" passed.


Running test base/test103/DEPRECATED: introductions
Commandline: abc -d base/test103 base/test103/Driver.java 
Abc started on Fri Jul 30 09:59:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Pos... 
Transforming Driver... 
Transforming MagicKey... 
Transforming Foo... 
Abc finished on Fri Jul 30 09:59:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 618 millisec.)
------------------------------------------------
[ 14.725% ] Init. of Soot:  91
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.644% ] Polyglot phases:  245
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.324% ] Intertype Adjuster:  2
[ 03.398% ] Retrieving bodies:  21
[ 10.032% ] Update pattern matcher:  62
[ 00.162% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 02.265% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.162% ] Add aspect code:  1
[ 00.485% ] Weaving advice:  3
[ 00.809% ] Exceptions check:  5
[ 00.000% ] Validate jimple:  0
[ 17.476% ] Soot Packs:  108
[ 10.518% ] Soot Writing Output:  65
================================================
PASS: base/test103: Test "DEPRECATED: introductions" passed.


Running test base/test104/before constructors -- one file
Commandline: abc -d base/test104 base/test104/Driver.java 
Abc started on Fri Jul 30 09:59:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Line... 
Transforming Driver... 
Transforming Circle... 
Transforming Point... 
Abc finished on Fri Jul 30 09:59:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 979 millisec.)
------------------------------------------------
[ 08.274% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.642% ] Polyglot phases:  486
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.779% ] Retrieving bodies:  37
[ 06.844% ] Update pattern matcher:  67
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.962% ] Compute advice lists:  29
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.511% ] Weaving advice:  5
[ 00.613% ] Exceptions check:  6
[ 00.000% ] Validate jimple:  0
[ 18.182% ] Soot Packs:  178
[ 09.193% ] Soot Writing Output:  90
================================================
PASS: base/test104: Test "before constructors -- one file" passed.


Running test base/test105/advise weaves find methods typed to builtins or non-woven classes
Commandline: abc -d base/test105 base/test105/Driver.java 
Abc started on Fri Jul 30 09:59:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 554 millisec.)
------------------------------------------------
[ 15.523% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.181% ] Create polyglot compiler:  1
[ 38.628% ] Polyglot phases:  214
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.888% ] Retrieving bodies:  16
[ 10.108% ] Update pattern matcher:  56
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.791% ] Compute advice lists:  21
[ 00.000% ] Intertype weave:  0
[ 00.181% ] Add aspect code:  1
[ 00.181% ] Weaving advice:  1
[ 00.181% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 21.480% ] Soot Packs:  119
[ 06.859% ] Soot Writing Output:  38
================================================
PASS: base/test105: Test "advise weaves find methods typed to builtins or non-woven classes" passed.


Running test base/test106/make sure new weaves work inside of packages
Commandline: abc -d base/test106 base/test106/Driver.java base/test106/pkg/Obj.java 
Abc started on Fri Jul 30 09:59:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Transforming pkg.Obj... 
Transforming pkg.Asp... 
Transforming Abc$access$pkg_d_Asp$around$26... 
Abc finished on Fri Jul 30 09:59:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 768 millisec.)
------------------------------------------------
[ 38.542% ] Init. of Soot:  296
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.568% ] Polyglot phases:  181
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.260% ] Intertype Adjuster:  2
[ 02.344% ] Retrieving bodies:  18
[ 07.031% ] Update pattern matcher:  54
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.651% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.130% ] Add aspect code:  1
[ 07.422% ] Weaving advice:  57
[ 00.521% ] Exceptions check:  4
[ 00.000% ] Validate jimple:  0
[ 11.589% ] Soot Packs:  89
[ 07.943% ] Soot Writing Output:  61
================================================
PASS: base/test106: Test "make sure new weaves work inside of packages" passed.


Running test base/test107/make sure new weaves work inside of packages (again)
Commandline: abc -d base/test107 base/test107/Driver.java base/test107/C1.java base/test107/C2.java base/test107/pack1/Foo.java base/test107/pack2/Foo.java base/test107/pack3/Foo.java 
Abc started on Fri Jul 30 09:59:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming pack2.Foo... 
Transforming Test... 
Transforming C3... 
Transforming C1... 
Transforming pack3.Foo... 
Transforming Driver... 
Transforming pack1.Foo... 
Transforming Abc$access$Test$around$28... 
Abc finished on Fri Jul 30 09:59:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 899 millisec.)
------------------------------------------------
[ 09.455% ] Init. of Soot:  85
[ 00.000% ] Loading Jars:  0
[ 00.111% ] Create polyglot compiler:  1
[ 51.613% ] Polyglot phases:  464
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.556% ] Intertype Adjuster:  5
[ 02.892% ] Retrieving bodies:  26
[ 06.007% ] Update pattern matcher:  54
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.891% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.667% ] Weaving advice:  6
[ 00.111% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.352% ] Soot Packs:  147
[ 10.345% ] Soot Writing Output:  93
================================================
PASS: base/test107: Test "make sure new weaves work inside of packages (again)" passed.


Running test base/test108/Inheritance of class and aspect vars in weaves
Commandline: abc -d base/test108 base/test108/Driver.java 
Abc started on Fri Jul 30 09:59:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming B... 
Transforming Bar... 
Transforming Driver... 
Transforming Foo... 
Abc finished on Fri Jul 30 09:59:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 717 millisec.)
------------------------------------------------
[ 11.576% ] Init. of Soot:  83
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.268% ] Polyglot phases:  174
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.139% ] Intertype Adjuster:  1
[ 02.371% ] Retrieving bodies:  17
[ 06.555% ] Update pattern matcher:  47
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.255% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.418% ] Weaving advice:  3
[ 00.139% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 46.583% ] Soot Packs:  334
[ 06.695% ] Soot Writing Output:  48
================================================
PASS: base/test108: Test "Inheritance of class and aspect vars in weaves" passed.


Running test base/test109/Accessibility of class and aspect members from inside weaves
Commandline: abc -d base/test109 base/test109/Driver.java base/test109/Aspect.java base/test109/Foo.java 
Abc started on Fri Jul 30 09:59:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Foo... 
Transforming Driver... 
Transforming Aspect$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 485 millisec.)
------------------------------------------------
[ 17.320% ] Init. of Soot:  84
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.536% ] Polyglot phases:  119
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.948% ] Retrieving bodies:  24
[ 04.536% ] Update pattern matcher:  22
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 08.041% ] Compute advice lists:  39
[ 00.000% ] Intertype weave:  0
[ 00.206% ] Add aspect code:  1
[ 02.268% ] Weaving advice:  11
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 26.186% ] Soot Packs:  127
[ 11.959% ] Soot Writing Output:  58
================================================
PASS: base/test109: Test "Accessibility of class and aspect members from inside weaves" passed.


Running test base/test110/Packaged aspects referring to packaged classes
Commandline: abc -d base/test110 base/test110/Driver.java base/test110/pAspect/Aspect.java base/test110/pClass/Class.java 
Abc started on Fri Jul 30 09:59:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pClass.Class... 
Transforming pAspect.Aspect... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 622 millisec.)
------------------------------------------------
[ 13.826% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.010% ] Polyglot phases:  168
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.161% ] Intertype Adjuster:  1
[ 00.965% ] Retrieving bodies:  6
[ 41.801% ] Update pattern matcher:  260
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.894% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.161% ] Weaving advice:  1
[ 00.161% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 09.164% ] Soot Packs:  57
[ 03.859% ] Soot Writing Output:  24
================================================
PASS: base/test110: Test "Packaged aspects referring to packaged classes" passed.


Running test base/test111/Inheritance of methods advised by aspects
Commandline: abc -d base/test111 base/test111/Driver.java base/test111/SubClass.java base/test111/SuperClass.java base/test111/SuperAspect.java 
Abc started on Fri Jul 30 09:59:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SuperAspect... 
Transforming SuperClass... 
Transforming Driver... 
Transforming SubClass... 
Abc finished on Fri Jul 30 09:59:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 557 millisec.)
------------------------------------------------
[ 16.158% ] Init. of Soot:  90
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.215% ] Polyglot phases:  224
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.513% ] Retrieving bodies:  14
[ 09.336% ] Update pattern matcher:  52
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.334% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.463% ] Weaving advice:  36
[ 00.180% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.285% ] Soot Packs:  74
[ 09.515% ] Soot Writing Output:  53
================================================
PASS: base/test111: Test "Inheritance of methods advised by aspects" passed.


Running test base/test112/Inherited weaves on constructor
Commandline: abc -d base/test112 base/test112/Driver.java 
Abc started on Fri Jul 30 09:59:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SuperAspect... 
Transforming Driver... 
Transforming SuperClass... 
Transforming SubClass... 
Abc finished on Fri Jul 30 09:59:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 634 millisec.)
------------------------------------------------
[ 46.372% ] Init. of Soot:  294
[ 00.000% ] Loading Jars:  0
[ 00.158% ] Create polyglot compiler:  1
[ 27.287% ] Polyglot phases:  173
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.893% ] Retrieving bodies:  12
[ 06.625% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.789% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.473% ] Weaving advice:  3
[ 00.158% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.410% ] Soot Packs:  66
[ 05.836% ] Soot Writing Output:  37
================================================
PASS: base/test112: Test "Inherited weaves on constructor" passed.


Running test base/test113/Initializers in Aspect and Class Bodies
Commandline: abc -d base/test113 base/test113/Driver.java 
Abc started on Fri Jul 30 09:59:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Class... 
Transforming Driver... 
Transforming Aspect$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 672 millisec.)
------------------------------------------------
[ 12.054% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.149% ] Create polyglot compiler:  1
[ 59.524% ] Polyglot phases:  400
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.149% ] Intertype Adjuster:  1
[ 01.637% ] Retrieving bodies:  11
[ 07.887% ] Update pattern matcher:  53
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.595% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.149% ] Add aspect code:  1
[ 00.893% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.161% ] Soot Packs:  75
[ 05.804% ] Soot Writing Output:  39
================================================
PASS: base/test113: Test "Initializers in Aspect and Class Bodies" passed.


Running test base/test114/Weaver Resolution of method names in method calls passed as args
Commandline: abc -d base/test114 base/test114/Driver.java 
Abc started on Fri Jul 30 09:59:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Class... 
Transforming Driver... 
Transforming Aspect$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 517 millisec.)
------------------------------------------------
[ 17.795% ] Init. of Soot:  92
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.368% ] Polyglot phases:  157
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.642% ] Retrieving bodies:  24
[ 11.605% ] Update pattern matcher:  60
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.934% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.774% ] Add aspect code:  4
[ 02.901% ] Weaving advice:  15
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.663% ] Soot Packs:  112
[ 08.317% ] Soot Writing Output:  43
================================================
PASS: base/test114: Test "Weaver Resolution of method names in method calls passed as args" passed.


Running test base/test115/DEPRECATED: Introduce constructor with class inheritance
Commandline: abc -d base/test115 base/test115/Driver.java 
Abc started on Fri Jul 30 09:59:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Driver... 
Transforming SubClass... 
Transforming Class... 
Abc finished on Fri Jul 30 09:59:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 806 millisec.)
------------------------------------------------
[ 38.337% ] Init. of Soot:  309
[ 00.000% ] Loading Jars:  0
[ 00.124% ] Create polyglot compiler:  1
[ 20.844% ] Polyglot phases:  168
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.124% ] Intertype Adjuster:  1
[ 02.109% ] Retrieving bodies:  17
[ 06.452% ] Update pattern matcher:  52
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.489% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.124% ] Weaving advice:  1
[ 00.372% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 22.953% ] Soot Packs:  185
[ 07.072% ] Soot Writing Output:  57
================================================
PASS: base/test115: Test "DEPRECATED: Introduce constructor with class inheritance" passed.


Running test base/test116/empty and singular patterns on modifiers and throws
Commandline: abc -d base/test116 base/test116/Driver.java 
Abc started on Fri Jul 30 09:59:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Class... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 733 millisec.)
------------------------------------------------
[ 11.050% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.136% ] Create polyglot compiler:  1
[ 28.377% ] Polyglot phases:  208
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.183% ] Retrieving bodies:  16
[ 38.199% ] Update pattern matcher:  280
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.729% ] Compute advice lists:  20
[ 00.000% ] Intertype weave:  0
[ 00.136% ] Add aspect code:  1
[ 00.409% ] Weaving advice:  3
[ 00.136% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.460% ] Soot Packs:  84
[ 05.184% ] Soot Writing Output:  38
================================================
PASS: base/test116: Test "empty and singular patterns on modifiers and throws" passed.


Running test base/test117/DEPRECATED: introduce of variables
Commandline: abc -d base/test117 base/test117/Driver.java 
Abc started on Fri Jul 30 09:59:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: base/test117: Test "DEPRECATED: introduce of variables" passed.


Running test base/test118/DEPRECATED: Introduce of constructors
Commandline: abc -d base/test118 base/test118/Driver.java 
Abc started on Fri Jul 30 09:59:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C111... 
Transforming I111... 
Transforming C11... 
Transforming I12... 
Transforming I11... 
Transforming Verify... 
Transforming Cleaf111... 
Transforming C12... 
Transforming Cleaf12... 
Transforming I1... 
Transforming Cleaf1... 
Transforming Driver... 
Transforming A1... 
Transforming Cleaf11... 
Transforming C1... 
Abc finished on Fri Jul 30 09:59:17 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1049 millisec.)
------------------------------------------------
[ 07.531% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 18.494% ] Polyglot phases:  194
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.095% ] Intertype Adjuster:  1
[ 02.479% ] Retrieving bodies:  26
[ 04.576% ] Update pattern matcher:  48
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.099% ] Compute advice lists:  43
[ 00.000% ] Intertype weave:  0
[ 00.191% ] Add aspect code:  2
[ 00.572% ] Weaving advice:  6
[ 00.095% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 52.050% ] Soot Packs:  546
[ 09.819% ] Soot Writing Output:  103
================================================
Test failed, compiled class behaved incorrectly
Message: fail A1.i1Count: 0 < 8
org.aspectj.bridge.AbortException: A1.i1Count: 0 < 8
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:462)
	at Verify.after$85(Driver.java:70)
	at Driver.test(Driver.java:14)
	at Driver.main(Driver.java:4)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "base/test118/DEPRECATED: Introduce of constructors" failed


Running test base/test119/Local declarations in advise bodies
Commandline: abc -d base/test119 base/test119/Driver.java 
Abc started on Fri Jul 30 09:59:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Foo... 
Transforming A$1Internal... 
Transforming Driver... 
Transforming Abc$access$A$around$92... 
Abc finished on Fri Jul 30 09:59:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 860 millisec.)
------------------------------------------------
[ 20.000% ] Init. of Soot:  172
[ 00.000% ] Loading Jars:  0
[ 00.116% ] Create polyglot compiler:  1
[ 23.953% ] Polyglot phases:  206
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.116% ] Intertype Adjuster:  1
[ 01.628% ] Retrieving bodies:  14
[ 05.930% ] Update pattern matcher:  51
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.744% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.163% ] Weaving advice:  10
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.326% ] Soot Packs:  106
[ 33.023% ] Soot Writing Output:  284
================================================
PASS: base/test119: Test "Local declarations in advise bodies" passed.


Running test base/test120/unicodes and literals
Commandline: abc -d base/test120 base/test120/Driver.java 
Abc started on Fri Jul 30 09:59:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 273 millisec.)
------------------------------------------------
[ 28.205% ] Init. of Soot:  77
[ 00.366% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 35.165% ] Polyglot phases:  96
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.366% ] Intertype Adjuster:  1
[ 07.692% ] Retrieving bodies:  21
[ 11.355% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.930% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.366% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.593% ] Soot Packs:  18
[ 06.960% ] Soot Writing Output:  19
================================================
PASS: base/test120: Test "unicodes and literals" passed.


Running test base/test121/advises on introduced methods and constructors
Commandline: abc -d base/test121 base/test121/Driver.java 
Abc started on Fri Jul 30 09:59:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line <Foo: void <init>(int,A)>
Getting position for a untagged source line return
Transforming A... 
Transforming A0_8beta1... 
Transforming Driver... 
Transforming Foo... 
Transforming A$abc$PerTarget... 
Abc finished on Fri Jul 30 09:59:20 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1170 millisec.)
------------------------------------------------
[ 07.009% ] Init. of Soot:  82
[ 00.000% ] Loading Jars:  0
[ 00.085% ] Create polyglot compiler:  1
[ 20.855% ] Polyglot phases:  244
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.085% ] Intertype Adjuster:  1
[ 26.667% ] Retrieving bodies:  312
[ 04.444% ] Update pattern matcher:  52
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.761% ] Compute advice lists:  44
[ 00.000% ] Intertype weave:  0
[ 00.171% ] Add aspect code:  2
[ 04.274% ] Weaving advice:  50
[ 00.085% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 22.906% ] Soot Packs:  268
[ 09.658% ] Soot Writing Output:  113
================================================
creating: A@44d839
init at initialization(A())
init at initialization(Foo(int))
external before advise on execution(void Foo.introducedNonStaticMethod())
PASS: base/test121: Test "advises on introduced methods and constructors" passed.


Running test base/test122/DEPRECATED: Method introduction into interface implemented by abstract class
Commandline: abc -d base/test122 base/test122/Driver.java 
Abc started on Fri Jul 30 09:59:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming I... 
Transforming Driver... 
Transforming C4... 
Transforming Aspect... 
Transforming C1... 
Transforming C3... 
Abc finished on Fri Jul 30 09:59:20 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 434 millisec.)
------------------------------------------------
[ 18.203% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.230% ] Create polyglot compiler:  1
[ 35.484% ] Polyglot phases:  154
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 01.152% ] Intertype Adjuster:  5
[ 01.613% ] Retrieving bodies:  7
[ 11.290% ] Update pattern matcher:  49
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.765% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.230% ] Add aspect code:  1
[ 00.230% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.972% ] Soot Packs:  78
[ 10.829% ] Soot Writing Output:  47
================================================
PASS: base/test122: Test "DEPRECATED: Method introduction into interface implemented by abstract class" passed.


Running test base/test123/Crossing super calls in constructors
Commandline: abc -d base/test123 base/test123/Driver.java 
Abc started on Fri Jul 30 09:59:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming A... 
Transforming C1... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 765 millisec.)
------------------------------------------------
[ 40.915% ] Init. of Soot:  313
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.980% ] Polyglot phases:  237
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.222% ] Retrieving bodies:  17
[ 05.490% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.699% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.261% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.288% ] Soot Packs:  94
[ 06.144% ] Soot Writing Output:  47
================================================
PASS: base/test123: Test "Crossing super calls in constructors" passed.


Running test base/test124/empty modifier pattern
Commandline: abc -d base/test124 base/test124/Driver.java 
Abc started on Fri Jul 30 09:59:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Trace... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 621 millisec.)
------------------------------------------------
[ 12.560% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.256% ] Polyglot phases:  132
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.254% ] Retrieving bodies:  14
[ 43.961% ] Update pattern matcher:  273
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.771% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.161% ] Add aspect code:  1
[ 00.483% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.205% ] Soot Packs:  82
[ 04.348% ] Soot Writing Output:  27
================================================
PASS: base/test124: Test "empty modifier pattern" passed.


Running test base/test125/Alpha conversion of argument names in designators
Commandline: abc -d base/test125 base/test125/Driver.java 
Abc started on Fri Jul 30 09:59:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Point... 
Transforming Driver... 
Transforming Trace... 
Abc finished on Fri Jul 30 09:59:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 503 millisec.)
------------------------------------------------
[ 15.706% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.141% ] Polyglot phases:  217
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.777% ] Retrieving bodies:  19
[ 08.151% ] Update pattern matcher:  41
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.175% ] Compute advice lists:  21
[ 00.000% ] Intertype weave:  0
[ 00.199% ] Add aspect code:  1
[ 00.199% ] Weaving advice:  1
[ 00.199% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.700% ] Soot Packs:  84
[ 07.753% ] Soot Writing Output:  39
================================================
PASS: base/test125: Test "Alpha conversion of argument names in designators" passed.


Running test base/test126/For Statement
Commandline: abc -d base/test126 base/test126/Driver.java 
Abc started on Fri Jul 30 09:59:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 401 millisec.)
------------------------------------------------
[ 18.953% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.249% ] Create polyglot compiler:  1
[ 10.224% ] Polyglot phases:  41
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 53.117% ] Intertype Adjuster:  213
[ 02.494% ] Retrieving bodies:  10
[ 05.486% ] Update pattern matcher:  22
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.998% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.237% ] Soot Packs:  21
[ 03.242% ] Soot Writing Output:  13
================================================
PASS: base/test126: Test "For Statement" passed.


Running test base/test127/advice uses its own formals to get actuals
Commandline: abc -d base/test127 base/test127/Driver.java 
Abc started on Fri Jul 30 09:59:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Driver... 
Transforming C... 
Abc finished on Fri Jul 30 09:59:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 449 millisec.)
------------------------------------------------
[ 33.853% ] Init. of Soot:  152
[ 00.000% ] Loading Jars:  0
[ 00.223% ] Create polyglot compiler:  1
[ 32.962% ] Polyglot phases:  148
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.223% ] Intertype Adjuster:  1
[ 01.336% ] Retrieving bodies:  6
[ 10.690% ] Update pattern matcher:  48
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.336% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.223% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.586% ] Soot Packs:  61
[ 05.568% ] Soot Writing Output:  25
================================================
PASS: base/test127: Test "advice uses its own formals to get actuals" passed.


Running test base/test128/DEPRECATED:  introduce weaves can use this
Commandline: abc -d base/test128 base/test128/Driver.java 
Abc started on Fri Jul 30 09:59:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Driver... 
Transforming C... 
Abc finished on Fri Jul 30 09:59:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 594 millisec.)
------------------------------------------------
[ 12.795% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.886% ] Polyglot phases:  130
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.168% ] Intertype Adjuster:  1
[ 01.178% ] Retrieving bodies:  7
[ 47.643% ] Update pattern matcher:  283
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.673% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.852% ] Weaving advice:  11
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.596% ] Soot Packs:  57
[ 04.209% ] Soot Writing Output:  25
================================================
PASS: base/test128: Test "DEPRECATED:  introduce weaves can use this" passed.


Running test base/test129/DEPRECATED: introduce of abstract methods works
Commandline: abc -d base/test129 base/test129/Driver.java 
Abc started on Fri Jul 30 09:59:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming C... 
Transforming Driver... 
Transforming A... 
Transforming AbstractC... 
Abc finished on Fri Jul 30 09:59:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 424 millisec.)
------------------------------------------------
[ 20.283% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.434% ] Polyglot phases:  146
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.236% ] Intertype Adjuster:  1
[ 03.538% ] Retrieving bodies:  15
[ 11.085% ] Update pattern matcher:  47
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.943% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.236% ] Add aspect code:  1
[ 00.236% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.340% ] Soot Packs:  82
[ 09.670% ] Soot Writing Output:  41
================================================
PASS: base/test129: Test "DEPRECATED: introduce of abstract methods works" passed.


Running test base/test130/multiple arounds successfully intercept and return own values
Commandline: abc -d base/test130 base/test130/Driver.java 
Abc started on Fri Jul 30 09:59:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming Driver... 
Transforming B... 
Transforming Abc$access$B$around$129... 
Transforming Abc$access$B$around$130... 
Abc finished on Fri Jul 30 09:59:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 665 millisec.)
------------------------------------------------
[ 11.429% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 55.338% ] Polyglot phases:  368
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.805% ] Retrieving bodies:  12
[ 06.767% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.504% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.150% ] Add aspect code:  1
[ 00.752% ] Weaving advice:  5
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.940% ] Soot Packs:  106
[ 06.316% ] Soot Writing Output:  42
================================================
PASS: base/test130: Test "multiple arounds successfully intercept and return own values" passed.


Running test base/test132/proper matching of overloaded constructors
Commandline: abc -d base/test132 base/test132/Driver.java 
Abc started on Fri Jul 30 09:59:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 364 millisec.)
------------------------------------------------
[ 21.978% ] Init. of Soot:  80
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.538% ] Polyglot phases:  133
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.846% ] Retrieving bodies:  14
[ 10.989% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.923% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.275% ] Add aspect code:  1
[ 01.648% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.659% ] Soot Packs:  57
[ 07.143% ] Soot Writing Output:  26
================================================
PASS: base/test132: Test "proper matching of overloaded constructors" passed.


Running test base/test133/correct super call lookup for method().name()
Commandline: abc -d base/test133 base/test133/Driver.java 
Abc started on Fri Jul 30 09:59:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:26 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 555 millisec.)
------------------------------------------------
[ 13.694% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.180% ] Create polyglot compiler:  1
[ 65.766% ] Polyglot phases:  365
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.180% ] Intertype Adjuster:  1
[ 01.081% ] Retrieving bodies:  6
[ 08.108% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.721% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.180% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.667% ] Soot Packs:  37
[ 03.423% ] Soot Writing Output:  19
================================================
PASS: base/test133: Test "correct super call lookup for method().name()" passed.


Running test base/test134/proper handling of formals in catch advice
Commandline: abc -d base/test134 base/test134/Driver.java 
Abc started on Fri Jul 30 09:59:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CatchArithmetic... 
Transforming Driver... 
Transforming Abc$access$CatchArithmetic$around$134... 
Abc finished on Fri Jul 30 09:59:26 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 430 millisec.)
------------------------------------------------
[ 20.000% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.233% ] Create polyglot compiler:  1
[ 38.140% ] Polyglot phases:  164
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.581% ] Retrieving bodies:  24
[ 10.000% ] Update pattern matcher:  43
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.093% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.628% ] Weaving advice:  7
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.884% ] Soot Packs:  64
[ 07.442% ] Soot Writing Output:  32
================================================
PASS: base/test134: Test "proper handling of formals in catch advice" passed.


Running test base/test135/proper values for thisJoinPoint attributes
Commandline: abc -d base/test135 base/test135/Driver.java base/test135/JoinPointFields.java base/test135/TopFoo.java base/test135/pack/PackFoo.java base/test135/pack/JoinPointFields.java base/test135/pack/PackJoinPointFields.java 
Abc started on Fri Jul 30 09:59:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>()
Transforming test135.pack.JoinPointFields... 
Transforming test135.JoinPointFields... 
Transforming test135.TopFoo... 
Transforming test135.pack.PackJoinPointFields... 
Transforming test135.Driver... 
Transforming test135.pack.PackFoo... 
Abc finished on Fri Jul 30 09:59:28 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1200 millisec.)
------------------------------------------------
[ 06.583% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 55.500% ] Polyglot phases:  666
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.750% ] Retrieving bodies:  33
[ 03.500% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.250% ] Compute advice lists:  51
[ 00.083% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 03.000% ] Weaving advice:  36
[ 00.083% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.500% ] Soot Packs:  174
[ 09.750% ] Soot Writing Output:  117
================================================
call(void test135.TopFoo.bar(int, String))
test135.TopFoo
DONE: call(void test135.TopFoo.bar(int, String))
call(void test135.pack.PackFoo.bar(int, String))
test135.pack.PackFoo
DONE: call(void test135.pack.PackFoo.bar(int, String))
call(void test135.pack.PackFoo.bar(int, String))
test135.pack.PackFoo
DONE: call(void test135.pack.PackFoo.bar(int, String))
PASS: base/test135: Test "proper values for thisJoinPoint attributes" passed.


Running test base/test136/supers, supers, supers
Commandline: abc -d base/test136 base/test136/Driver.java 
Abc started on Fri Jul 30 09:59:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming C0... 
Transforming A... 
Transforming C1... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 863 millisec.)
------------------------------------------------
[ 09.038% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 50.406% ] Polyglot phases:  435
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.287% ] Retrieving bodies:  37
[ 04.635% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.910% ] Compute advice lists:  51
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.348% ] Weaving advice:  3
[ 00.116% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.875% ] Soot Packs:  137
[ 09.386% ] Soot Writing Output:  81
================================================
PASS: base/test136: Test "supers, supers, supers" passed.


Running test base/test137/operations on private and protected aspect members (++, -- in partciular)
Commandline: abc -d base/test137 base/test137/Driver.java 
Abc started on Fri Jul 30 09:59:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Foo... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 813 millisec.)
------------------------------------------------
[ 09.348% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.123% ] Create polyglot compiler:  1
[ 24.354% ] Polyglot phases:  198
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.305% ] Retrieving bodies:  35
[ 05.535% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.075% ] Compute advice lists:  25
[ 00.000% ] Intertype weave:  0
[ 00.123% ] Add aspect code:  1
[ 00.369% ] Weaving advice:  3
[ 00.123% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.808% ] Soot Packs:  96
[ 40.836% ] Soot Writing Output:  332
================================================
PASS: base/test137: Test "operations on private and protected aspect members (++, -- in partciular)" passed.


Running test base/test138/only register things once
Commandline: abc -d base/test138 base/test138/Driver.java 
Abc started on Fri Jul 30 09:59:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming B... 
Transforming Driver... 
Transforming A... 
Abc finished on Fri Jul 30 09:59:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 400 millisec.)
------------------------------------------------
[ 20.250% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.000% ] Polyglot phases:  148
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.000% ] Retrieving bodies:  8
[ 11.250% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.250% ] Load shadow types:  1
[ 03.500% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.250% ] Add aspect code:  1
[ 00.250% ] Weaving advice:  1
[ 00.250% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.750% ] Soot Packs:  63
[ 09.250% ] Soot Writing Output:  37
================================================
PASS: base/test138: Test "only register things once" passed.


Running test base/test139/inner aspects and around
Commandline: abc -d base/test139 base/test139/Driver.java 
Abc started on Fri Jul 30 09:59:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming C1... 
Transforming C1$A... 
Transforming Driver... 
Transforming Abc$access$C1$A$around$144... 
Abc finished on Fri Jul 30 09:59:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 711 millisec.)
------------------------------------------------
[ 46.695% ] Init. of Soot:  332
[ 00.000% ] Loading Jars:  0
[ 00.141% ] Create polyglot compiler:  1
[ 20.956% ] Polyglot phases:  149
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.391% ] Retrieving bodies:  17
[ 05.626% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.141% ] Load shadow types:  1
[ 03.094% ] Compute advice lists:  22
[ 00.141% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.844% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.689% ] Soot Packs:  76
[ 09.283% ] Soot Writing Output:  66
================================================
PASS: base/test139: Test "inner aspects and around" passed.


Running test base/test140/aspect inheritance and advice, introduction
Commandline: abc -d base/test140 base/test140/Driver.java 
Abc started on Fri Jul 30 09:59:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A0... 
Transforming Driver... 
Transforming A1... 
Transforming A2... 
Transforming C1... 
Transforming Abc$access$A1$around$148... 
Transforming Abc$access$A2$around$150... 
Abc finished on Fri Jul 30 09:59:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 803 millisec.)
------------------------------------------------
[ 09.963% ] Init. of Soot:  80
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.672% ] Polyglot phases:  166
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.125% ] Intertype Adjuster:  1
[ 04.981% ] Retrieving bodies:  40
[ 36.239% ] Update pattern matcher:  291
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.619% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.125% ] Add aspect code:  1
[ 01.619% ] Weaving advice:  13
[ 00.125% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.816% ] Soot Packs:  127
[ 08.717% ] Soot Writing Output:  70
================================================
PASS: base/test140: Test "aspect inheritance and advice, introduction" passed.


Running test base/test141/thisResultObject for primitives
Commandline: abc -d base/test141 base/test141/Driver.java 
Abc started on Fri Jul 30 09:59:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A1... 
Transforming Driver... 
Transforming C1... 
Abc finished on Fri Jul 30 09:59:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 793 millisec.)
------------------------------------------------
[ 09.584% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.807% ] Polyglot phases:  165
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.126% ] Intertype Adjuster:  1
[ 02.144% ] Retrieving bodies:  17
[ 05.170% ] Update pattern matcher:  41
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.639% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.126% ] Add aspect code:  1
[ 04.918% ] Weaving advice:  39
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 47.415% ] Soot Packs:  376
[ 08.071% ] Soot Writing Output:  64
================================================
PASS: base/test141: Test "thisResultObject for primitives" passed.


Running test base/test142/introductions calling super.
Commandline: abc -d base/test142 base/test142/Driver.java 
Abc started on Fri Jul 30 09:59:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming C1... 
Transforming Driver... 
Transforming A... 
Abc finished on Fri Jul 30 09:59:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 401 millisec.)
------------------------------------------------
[ 19.202% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.406% ] Polyglot phases:  150
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.249% ] Intertype Adjuster:  1
[ 05.985% ] Retrieving bodies:  24
[ 11.222% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.998% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.998% ] Add aspect code:  4
[ 00.249% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.711% ] Soot Packs:  63
[ 07.980% ] Soot Writing Output:  32
================================================
PASS: base/test142: Test "introductions calling super." passed.


Running test base/allow one argument calls even when there's a comma in the arglist
Commandline: abc -d base base/OneArgCallsIsOkay.java 
Abc started on Fri Jul 30 09:59:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OneArgCallsIsOkay... 
Abc finished on Fri Jul 30 09:59:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 419 millisec.)
------------------------------------------------
[ 80.430% ] Init. of Soot:  337
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 08.353% ] Polyglot phases:  35
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.477% ] Retrieving bodies:  2
[ 05.489% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.239% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.239% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.341% ] Soot Packs:  14
[ 01.432% ] Soot Writing Output:  6
================================================
PASS: base: Test "allow one argument calls even when there's a comma in the arglist" passed.


Running test new/advice on calls to static methods even works when called on super
Commandline: abc -d new new/SuperStaticCallJoinPoint.java 
Abc started on Fri Jul 30 09:59:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming SuperStaticCallJoinPoint... 
Transforming Sup... 
Abc finished on Fri Jul 30 09:59:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 391 millisec.)
------------------------------------------------
[ 20.205% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.256% ] Create polyglot compiler:  1
[ 39.130% ] Polyglot phases:  153
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.325% ] Retrieving bodies:  13
[ 12.788% ] Update pattern matcher:  50
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.325% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.256% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 01.279% ] Exceptions check:  5
[ 00.000% ] Validate jimple:  0
[ 12.020% ] Soot Packs:  47
[ 07.417% ] Soot Writing Output:  29
================================================
PASS: new: Test "advice on calls to static methods even works when called on super" passed.


Running test new/combined logic expression (handling coericions vs. parens)
Commandline: abc -d new new/CombinedLogic.java 
Abc started on Fri Jul 30 09:59:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CombinedLogic... 
Abc finished on Fri Jul 30 09:59:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 510 millisec.)
------------------------------------------------
[ 14.706% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 69.608% ] Polyglot phases:  355
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.569% ] Retrieving bodies:  8
[ 08.431% ] Update pattern matcher:  43
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.196% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.196% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.333% ] Soot Packs:  17
[ 01.961% ] Soot Writing Output:  10
================================================
PASS: new: Test "combined logic expression (handling coericions vs. parens)" passed.


Running test new/comment after class closes (with no new line at end)
Commandline: abc -d new new/CommentAfterClass.java 
Abc started on Fri Jul 30 09:59:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CommentAfterClass... 
Abc finished on Fri Jul 30 09:59:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 262 millisec.)
------------------------------------------------
[ 30.916% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.366% ] Polyglot phases:  111
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.763% ] Retrieving bodies:  2
[ 18.321% ] Update pattern matcher:  48
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.382% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.580% ] Soot Packs:  12
[ 02.672% ] Soot Writing Output:  7
================================================
PASS: new: Test "comment after class closes (with no new line at end)" passed.


Running test new/handle multiple nested inner classes
Commandline: abc -d new new/InnerHell.java 
Abc started on Fri Jul 30 09:59:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InnerHell... 
Transforming MyButton... 
Transforming MyButton$AccessibleMyButton... 
Abc finished on Fri Jul 30 09:59:36 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1664 millisec.)
------------------------------------------------
[ 04.567% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 83.894% ] Polyglot phases:  1396
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.060% ] Intertype Adjuster:  1
[ 00.661% ] Retrieving bodies:  11
[ 07.873% ] Update pattern matcher:  131
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.601% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.060% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 01.202% ] Soot Packs:  20
[ 01.082% ] Soot Writing Output:  18
================================================
PASS: new: Test "handle multiple nested inner classes" passed.


Running test new/multi-dimensional array initializers
Commandline: abc -d new new/MultiArrays.java 
Abc started on Fri Jul 30 09:59:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MultiArrays... 
Abc finished on Fri Jul 30 09:59:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 587 millisec.)
------------------------------------------------
[ 12.777% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.509% ] Polyglot phases:  138
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.852% ] Retrieving bodies:  5
[ 07.155% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.341% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 52.129% ] Soot Packs:  306
[ 03.237% ] Soot Writing Output:  19
================================================
PASS: new: Test "multi-dimensional array initializers" passed.


Running test new/probelm with the generated names of exceptions
Commandline: abc -d new new/ExceptionNames.java 
Abc started on Fri Jul 30 09:59:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ExceptionNames... 
Abc finished on Fri Jul 30 09:59:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 368 millisec.)
------------------------------------------------
[ 21.196% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.652% ] Polyglot phases:  168
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.272% ] Intertype Adjuster:  1
[ 05.707% ] Retrieving bodies:  21
[ 12.228% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.272% ] Load shadow types:  1
[ 02.989% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.065% ] Soot Packs:  26
[ 04.620% ] Soot Writing Output:  17
================================================
PASS: new: Test "probelm with the generated names of exceptions" passed.


Running test new/checks if the class field can be used on all of the primitive types
Commandline: abc -d new new/ClassFieldOnPrimitiveType.java 
Abc started on Fri Jul 30 09:59:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <ClassFieldOnPrimitiveType: java.lang.String checkVoid()>
polyglot.util.InternalCompilerError: Exception while processing <ClassFieldOnPrimitiveType: java.lang.String checkVoid()>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: 
Aborting: can't find classfile java.lang.Void
	at soot.Scene.getSootClass(Scene.java:335)
	at soot.javaToJimple.JimpleBodyBuilder.getSpecialClassLitLocal(JimpleBodyBuilder.java:2057)
	at soot.javaToJimple.JimpleBodyBuilder.createLiteral(JimpleBodyBuilder.java:389)
	at soot.javaToJimple.JimpleBodyBuilder.createExpr(JimpleBodyBuilder.java:1585)
	at soot.javaToJimple.JimpleBodyBuilder.createLocalDecl(JimpleBodyBuilder.java:791)
	at soot.javaToJimple.JimpleBodyBuilder.createStmt(JimpleBodyBuilder.java:505)
	at soot.javaToJimple.JimpleBodyBuilder.createBlock(JimpleBodyBuilder.java:302)
	at soot.javaToJimple.JimpleBodyBuilder.createJimpleBody(JimpleBodyBuilder.java:103)
	at soot.javaToJimple.PolyglotMethodSource.getBody(PolyglotMethodSource.java:35)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "new/checks if the class field can be used on all of the primitive types" failed


Running test new/volatileKeyword/advice on a static method
Commandline: abc -d new/volatileKeyword new/volatileKeyword/Driver.java 
Abc started on Fri Jul 30 09:59:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 289 millisec.)
------------------------------------------------
[ 25.260% ] Init. of Soot:  73
[ 00.000% ] Loading Jars:  0
[ 00.346% ] Create polyglot compiler:  1
[ 41.522% ] Polyglot phases:  120
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 02.422% ] Intertype Adjuster:  7
[ 01.384% ] Retrieving bodies:  4
[ 15.225% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.692% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.346% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.266% ] Soot Packs:  21
[ 05.536% ] Soot Writing Output:  16
================================================
PASS: new/volatileKeyword: Test "advice on a static method" passed.


Running test new/innerConsSyntax/inner constructor syntax causes compile error
Commandline: abc -d new/innerConsSyntax new/innerConsSyntax/Driver.java 
Abc started on Fri Jul 30 09:59:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Transforming Driver$Inner... 
Abc finished on Fri Jul 30 09:59:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 614 millisec.)
------------------------------------------------
[ 57.003% ] Init. of Soot:  350
[ 00.000% ] Loading Jars:  0
[ 00.163% ] Create polyglot compiler:  1
[ 26.384% ] Polyglot phases:  162
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.163% ] Intertype Adjuster:  1
[ 01.140% ] Retrieving bodies:  7
[ 07.003% ] Update pattern matcher:  43
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.792% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.163% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.094% ] Soot Packs:  19
[ 03.094% ] Soot Writing Output:  19
================================================
PASS: new/innerConsSyntax: Test "inner constructor syntax causes compile error" passed.


Running test new/paramWidening/widening of method parameters to match javac
Commandline: abc -d new/paramWidening new/paramWidening/Driver.java 
Abc started on Fri Jul 30 09:59:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 333 millisec.)
------------------------------------------------
[ 23.123% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 47.147% ] Polyglot phases:  157
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 02.102% ] Intertype Adjuster:  7
[ 02.102% ] Retrieving bodies:  7
[ 13.213% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.601% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.009% ] Soot Packs:  30
[ 02.703% ] Soot Writing Output:  9
================================================
PASS: new/paramWidening: Test "widening of method parameters to match javac" passed.


Running test pureJava/equalsMethOnStr/equals method on quoted strings
Commandline: abc -d pureJava/equalsMethOnStr pureJava/equalsMethOnStr/Driver.java 
Abc started on Fri Jul 30 09:59:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 310 millisec.)
------------------------------------------------
[ 23.548% ] Init. of Soot:  73
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 50.645% ] Polyglot phases:  157
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.323% ] Intertype Adjuster:  1
[ 00.968% ] Retrieving bodies:  3
[ 16.452% ] Update pattern matcher:  51
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.645% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.839% ] Soot Packs:  15
[ 02.581% ] Soot Writing Output:  8
================================================
PASS: pureJava/equalsMethOnStr: Test "equals method on quoted strings" passed.


Running test new/parenthesized string literals matching primitive type names
Commandline: abc -d new new/ParenPrimitive.java 
Abc started on Fri Jul 30 09:59:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ParenPrimitive... 
Abc finished on Fri Jul 30 09:59:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 531 millisec.)
------------------------------------------------
[ 14.689% ] Init. of Soot:  78
[ 00.188% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 71.751% ] Polyglot phases:  381
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.565% ] Retrieving bodies:  3
[ 08.851% ] Update pattern matcher:  47
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.188% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 01.883% ] Soot Packs:  10
[ 01.883% ] Soot Writing Output:  10
================================================
PASS: new: Test "parenthesized string literals matching primitive type names" passed.


Running test pureJava/anonInnerClass/anonymous inner class
Commandline: abc -d pureJava/anonInnerClass pureJava/anonInnerClass/Driver.java 
Abc started on Fri Jul 30 09:59:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming C$1... 
Transforming Driver... 
Abc finished on Fri Jul 30 09:59:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 449 millisec.)
------------------------------------------------
[ 16.927% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 44.098% ] Polyglot phases:  198
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.223% ] Intertype Adjuster:  1
[ 05.345% ] Retrieving bodies:  24
[ 19.154% ] Update pattern matcher:  86
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.891% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.018% ] Soot Packs:  36
[ 05.345% ] Soot Writing Output:  24
================================================
PASS: pureJava/anonInnerClass: Test "anonymous inner class" passed.


Running test new/simple type coercions tests
Commandline: abc -d new new/TypeCoercions.java 
Abc started on Fri Jul 30 09:59:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TypeCoercions... 
Abc finished on Fri Jul 30 09:59:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 265 millisec.)
------------------------------------------------
[ 27.170% ] Init. of Soot:  72
[ 00.000% ] Loading Jars:  0
[ 00.377% ] Create polyglot compiler:  1
[ 46.038% ] Polyglot phases:  122
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.377% ] Intertype Adjuster:  1
[ 00.755% ] Retrieving bodies:  2
[ 15.094% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.755% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.660% ] Soot Packs:  15
[ 03.774% ] Soot Writing Output:  10
================================================
PASS: new: Test "simple type coercions tests" passed.


Running test new/order of type declarations shouldn't matter
Commandline: abc -d new new/OrderOfTypes.java 
Abc started on Fri Jul 30 09:59:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming First... 
Transforming Second... 
Transforming Second$SecondInner... 
Transforming OrderOfTypes... 
Transforming Root... 
Transforming Root$RootInner... 
Abc finished on Fri Jul 30 09:59:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 209 millisec.)
------------------------------------------------
[ 36.364% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.478% ] Create polyglot compiler:  1
[ 11.962% ] Polyglot phases:  25
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.349% ] Retrieving bodies:  7
[ 09.091% ] Update pattern matcher:  19
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.914% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.478% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.139% ] Soot Packs:  40
[ 17.225% ] Soot Writing Output:  36
================================================
PASS: new: Test "order of type declarations shouldn't matter" passed.


Running test pureJava/parsing of parenthesized 'this' (in returns)
Commandline: abc -d pureJava pureJava/ReturnThis.java 
Abc started on Fri Jul 30 09:59:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ReturnThis... 
Transforming C... 
Abc finished on Fri Jul 30 09:59:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 163 millisec.)
------------------------------------------------
[ 46.626% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.178% ] Polyglot phases:  28
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.840% ] Retrieving bodies:  3
[ 12.270% ] Update pattern matcher:  20
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.227% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.613% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.656% ] Soot Packs:  19
[ 08.589% ] Soot Writing Output:  14
================================================
PASS: pureJava: Test "parsing of parenthesized 'this' (in returns)" passed.


Running test new/Scanner non recognizing strictfp.
Commandline: abc -d new new/StrictFp.java 
Abc started on Fri Jul 30 09:59:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming StrictFp... 
Abc finished on Fri Jul 30 09:59:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 537 millisec.)
------------------------------------------------
[ 14.898% ] Init. of Soot:  80
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 71.508% ] Polyglot phases:  384
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.676% ] Retrieving bodies:  9
[ 07.449% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.186% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.186% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 02.607% ] Soot Packs:  14
[ 01.490% ] Soot Writing Output:  8
================================================
PASS: new: Test "Scanner non recognizing strictfp." passed.


Running test pureJava/Strings are folded and interned correctly
Commandline: abc -d pureJava pureJava/StringFold.java 
Abc started on Fri Jul 30 09:59:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming StringFold... 
Transforming StringFoldHelper... 
Abc finished on Fri Jul 30 09:59:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 280 millisec.)
------------------------------------------------
[ 26.429% ] Init. of Soot:  74
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.929% ] Polyglot phases:  123
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.071% ] Retrieving bodies:  3
[ 14.643% ] Update pattern matcher:  41
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.714% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.357% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.500% ] Soot Packs:  21
[ 05.357% ] Soot Writing Output:  15
================================================
PASS: pureJava: Test "Strings are folded and interned correctly" passed.


Running test pureJava/Cast binds tighter than equality tests
Commandline: abc -d pureJava pureJava/CastAndBinary.java 
Abc started on Fri Jul 30 09:59:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CastAndBinary... 
Abc finished on Fri Jul 30 09:59:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 160 millisec.)
------------------------------------------------
[ 48.750% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.625% ] Create polyglot compiler:  1
[ 21.875% ] Polyglot phases:  35
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.625% ] Intertype Adjuster:  1
[ 00.625% ] Retrieving bodies:  1
[ 14.375% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.625% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.375% ] Soot Packs:  15
[ 03.125% ] Soot Writing Output:  5
================================================
false
PASS: pureJava: Test "Cast binds tighter than equality tests" passed.


Running test pureJava/Boundary base values can be parsed
Commandline: abc -d pureJava pureJava/BoundaryNums.java 
Abc started on Fri Jul 30 09:59:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BoundaryNums... 
Abc finished on Fri Jul 30 09:59:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 417 millisec.)
------------------------------------------------
[ 18.705% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.640% ] Polyglot phases:  207
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.918% ] Retrieving bodies:  8
[ 11.751% ] Update pattern matcher:  49
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.959% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.954% ] Soot Packs:  29
[ 10.072% ] Soot Writing Output:  42
================================================
PASS: pureJava: Test "Boundary base values can be parsed" passed.


Running test pureJava/State is passed correctly across nested annonymous inners
Commandline: abc -d pureJava pureJava/NestedInners.java 
Abc started on Fri Jul 30 09:59:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NestedInners... 
Transforming Outer... 
Transforming Outer$1... 
Transforming Outer$2... 
Abc finished on Fri Jul 30 09:59:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 661 millisec.)
------------------------------------------------
[ 11.800% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 61.422% ] Polyglot phases:  406
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.177% ] Retrieving bodies:  21
[ 05.749% ] Update pattern matcher:  38
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.269% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.151% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.169% ] Soot Packs:  54
[ 07.262% ] Soot Writing Output:  48
================================================
PASS: pureJava: Test "State is passed correctly across nested annonymous inners" passed.


Running test pureJava/?: expressions should typecheck in interesting ways
Commandline: abc -d pureJava pureJava/TriTestTypecheck.java 
Abc started on Fri Jul 30 09:59:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TriTestTypecheck... 
Transforming A... 
Transforming E... 
Transforming G... 
Abc finished on Fri Jul 30 09:59:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 616 millisec.)
------------------------------------------------
[ 12.825% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.162% ] Create polyglot compiler:  1
[ 20.942% ] Polyglot phases:  129
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 12.987% ] Retrieving bodies:  80
[ 02.760% ] Update pattern matcher:  17
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.545% ] Compute advice lists:  28
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.162% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 27.435% ] Soot Packs:  169
[ 18.182% ] Soot Writing Output:  112
================================================
PASS: pureJava: Test "?: expressions should typecheck in interesting ways" passed.


Running test pureJava/cast expressions should allow casts to/from interfaces at compile-time.
Commandline: abc -d pureJava pureJava/InterfaceCast.java 
Abc started on Fri Jul 30 09:59:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming InterfaceCast... 
Transforming B... 
Abc finished on Fri Jul 30 09:59:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 188 millisec.)
------------------------------------------------
[ 39.894% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 18.085% ] Polyglot phases:  34
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.660% ] Retrieving bodies:  5
[ 13.298% ] Update pattern matcher:  25
[ 00.532% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.064% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.532% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.766% ] Soot Packs:  24
[ 11.170% ] Soot Writing Output:  21
================================================
PASS: pureJava: Test "cast expressions should allow casts to/from interfaces at compile-time." passed.


Running test pureJava/various anonymous inner classes plus super types tests
Commandline: abc -d pureJava pureJava/InnerSuper.java 
Abc started on Fri Jul 30 09:59:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Counter... 
Transforming C... 
Transforming C$1... 
Transforming C$InnerCounter... 
Transforming InnerSuper... 
Transforming C$1MyCounter... 
Abc finished on Fri Jul 30 09:59:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 676 millisec.)
------------------------------------------------
[ 10.947% ] Init. of Soot:  74
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.006% ] Polyglot phases:  142
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.071% ] Retrieving bodies:  14
[ 06.509% ] Update pattern matcher:  44
[ 00.148% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.036% ] Compute advice lists:  7
[ 00.148% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.148% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.432% ] Soot Packs:  57
[ 49.556% ] Soot Writing Output:  335
================================================
PASS: pureJava: Test "various anonymous inner classes plus super types tests" passed.


Running test new/Doesn't parse an array-returning method that throws an exception
Commandline: abc -d new new/ArrayMethod.java 
Abc started on Fri Jul 30 09:59:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ArrayMethod... 
Abc finished on Fri Jul 30 09:59:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 338 millisec.)
------------------------------------------------
[ 23.077% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.124% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.692% ] Retrieving bodies:  26
[ 12.426% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.888% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.296% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 09.763% ] Soot Packs:  33
[ 04.734% ] Soot Writing Output:  16
================================================
PASS: new: Test "Doesn't parse an array-returning method that throws an exception" passed.


Running test new/Crashes when a lot of zeros are in front of a double variable [!!! purejava]
Commandline: abc -d new new/Zeros.java 
Abc started on Fri Jul 30 09:59:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Zeros... 
Abc finished on Fri Jul 30 09:59:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 512 millisec.)
------------------------------------------------
[ 14.844% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.195% ] Create polyglot compiler:  1
[ 59.961% ] Polyglot phases:  307
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.195% ] Intertype Adjuster:  1
[ 05.859% ] Retrieving bodies:  30
[ 08.594% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.344% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.195% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.641% ] Soot Packs:  34
[ 01.172% ] Soot Writing Output:  6
================================================
PASS: new: Test "Crashes when a lot of zeros are in front of a double variable [!!! purejava]" passed.


Running test pureJava/Various comment syntaxes should be handled.
Commandline: abc -d pureJava pureJava/CommentSyntax.java 
Abc started on Fri Jul 30 09:59:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CommentSyntax... 
Abc finished on Fri Jul 30 09:59:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 131 millisec.)
------------------------------------------------
[ 57.252% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.763% ] Create polyglot compiler:  1
[ 12.214% ] Polyglot phases:  16
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.763% ] Retrieving bodies:  1
[ 16.031% ] Update pattern matcher:  21
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.763% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.580% ] Soot Packs:  6
[ 07.634% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "Various comment syntaxes should be handled." passed.


Running test pureJava/abstractInner/Abstract inner classes across package boundaries
Commandline: abc -d pureJava/abstractInner pureJava/abstractInner/C.java pureJava/abstractInner/pkg/A.java 
Abc started on Fri Jul 30 09:59:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pkg.A... 
Transforming pkg.A$B... 
Transforming C... 
Transforming C$1... 
Abc finished on Fri Jul 30 09:59:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 481 millisec.)
------------------------------------------------
[ 69.647% ] Init. of Soot:  335
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 10.603% ] Polyglot phases:  51
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.495% ] Retrieving bodies:  12
[ 04.366% ] Update pattern matcher:  21
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.624% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.208% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.069% ] Soot Packs:  34
[ 04.990% ] Soot Writing Output:  24
================================================
PASS: pureJava/abstractInner: Test "Abstract inner classes across package boundaries" passed.


Running test pureJava/inner classes accessing outers and some more inner class names
Commandline: abc -d pureJava pureJava/InnerAccess.java 
Abc started on Fri Jul 30 09:59:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming Outer... 
Transforming Outer$Middle... 
Transforming DI... 
Transforming C... 
Transforming D$Inner... 
Transforming InnerAccess... 
Transforming Outer$Middle$Inner... 
Transforming C$1... 
Transforming C$2... 
Abc finished on Fri Jul 30 09:59:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 562 millisec.)
------------------------------------------------
[ 14.235% ] Init. of Soot:  80
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.858% ] Polyglot phases:  224
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.626% ] Retrieving bodies:  26
[ 07.117% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.669% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.356% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.972% ] Soot Packs:  101
[ 13.167% ] Soot Writing Output:  74
================================================
PASS: pureJava: Test "inner classes accessing outers and some more inner class names" passed.


Running test pureJava/remember to cast folded values down to the proper types.
Commandline: abc -d pureJava pureJava/CastingFoldedValues.java 
Abc started on Fri Jul 30 09:59:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CastingFoldedValues... 
Abc finished on Fri Jul 30 09:59:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 277 millisec.)
------------------------------------------------
[ 27.437% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.361% ] Create polyglot compiler:  1
[ 43.682% ] Polyglot phases:  121
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.610% ] Retrieving bodies:  10
[ 14.079% ] Update pattern matcher:  39
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.722% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.859% ] Soot Packs:  19
[ 03.249% ] Soot Writing Output:  9
================================================
PASS: pureJava: Test "remember to cast folded values down to the proper types." passed.


Running test pureJava/inner classes can be built using protected constructors in super
Commandline: abc -d pureJava pureJava/VariousConstructors.java 
Abc started on Fri Jul 30 09:59:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming VariousConstructors... 
Transforming VariousConstructors$1... 
Transforming AbstractC... 
Transforming VariousConstructors$2... 
Abc finished on Fri Jul 30 09:59:48 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1208 millisec.)
------------------------------------------------
[ 06.457% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.083% ] Create polyglot compiler:  1
[ 77.980% ] Polyglot phases:  942
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.828% ] Retrieving bodies:  10
[ 10.348% ] Update pattern matcher:  125
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.248% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 02.070% ] Soot Packs:  25
[ 01.987% ] Soot Writing Output:  24
================================================
PASS: pureJava: Test "inner classes can be built using protected constructors in super" passed.


Running test pureJava/check that nested constructions of local classes work
Commandline: abc -d pureJava pureJava/NestedConstructionsOfLocalClasses.java 
Abc started on Fri Jul 30 09:59:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NestedConstructionsOfLocalClasses... 
Transforming NestedConstructionsOfLocalClasses$1D... 
Abc finished on Fri Jul 30 09:59:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 155 millisec.)
------------------------------------------------
[ 48.387% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 13.548% ] Polyglot phases:  21
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.935% ] Retrieving bodies:  3
[ 12.903% ] Update pattern matcher:  20
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.290% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.548% ] Soot Packs:  21
[ 08.387% ] Soot Writing Output:  13
================================================
PASS: pureJava: Test "check that nested constructions of local classes work" passed.


Running test pureJava/Make sure anonymous classes can have non-nullary constructors
Commandline: abc -d pureJava pureJava/NonNullaryAnonymous.java 
Abc started on Fri Jul 30 09:59:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NonNullaryAnonymous... 
Transforming NonNullaryAnonymous$1... 
Abc finished on Fri Jul 30 09:59:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 151 millisec.)
------------------------------------------------
[ 50.331% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.662% ] Create polyglot compiler:  1
[ 08.609% ] Polyglot phases:  13
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.987% ] Retrieving bodies:  3
[ 18.543% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.325% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.258% ] Soot Packs:  17
[ 07.285% ] Soot Writing Output:  11
================================================
PASS: pureJava: Test "Make sure anonymous classes can have non-nullary constructors" passed.


Running test new/Full names are dropped from inner interfaces
Commandline: abc -d new new/PR417a.java 
Abc started on Fri Jul 30 09:59:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR417a... 
Transforming PR417a$Types... 
Transforming PR417a$StaticTypes... 
Abc finished on Fri Jul 30 09:59:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 628 millisec.)
------------------------------------------------
[ 12.102% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 66.720% ] Polyglot phases:  419
[ 00.159% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.592% ] Retrieving bodies:  10
[ 05.892% ] Update pattern matcher:  37
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.070% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.159% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.255% ] Soot Packs:  33
[ 06.051% ] Soot Writing Output:  38
================================================
PASS: new: Test "Full names are dropped from inner interfaces" passed.


Running test new/Making sure full names stay on static inner classes
Commandline: abc -d new new/PR417b.java 
Abc started on Fri Jul 30 09:59:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR417b... 
Transforming PR417b$StaticTypes... 
Abc finished on Fri Jul 30 09:59:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 323 millisec.)
------------------------------------------------
[ 23.839% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.867% ] Polyglot phases:  132
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.477% ] Retrieving bodies:  8
[ 14.551% ] Update pattern matcher:  47
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.238% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.288% ] Soot Packs:  30
[ 07.740% ] Soot Writing Output:  25
================================================
PASS: new: Test "Making sure full names stay on static inner classes" passed.


Running test pureJava/The current AspectJ compiler cannot parse qualified superclass constructor invocations
Commandline: abc -d pureJava pureJava/QualifiedSuperClassConstructorInvocations_PR401.java 
Abc started on Fri Jul 30 09:59:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming S... 
Transforming Outer... 
Transforming Outer$Inner... 
Transforming ChildOfInner... 
Transforming QualifiedSuperClassConstructorInvocations_PR401... 
Abc finished on Fri Jul 30 09:59:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 317 millisec.)
------------------------------------------------
[ 25.237% ] Init. of Soot:  80
[ 00.000% ] Loading Jars:  0
[ 00.315% ] Create polyglot compiler:  1
[ 31.546% ] Polyglot phases:  100
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.155% ] Retrieving bodies:  10
[ 11.987% ] Update pattern matcher:  38
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.732% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.315% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.672% ] Soot Packs:  37
[ 11.041% ] Soot Writing Output:  35
================================================
PASS: pureJava: Test "The current AspectJ compiler cannot parse qualified superclass constructor invocations" passed.


Running test pureJava/More thourough test of static members using full names
Commandline: abc -d pureJava pureJava/Statics.java pureJava/StaticMembers_PR421.java pureJava/p1/C1.java pureJava/p1/P1Statics.java pureJava/p1/subp1/SubC1.java pureJava/p1/p2/P1P2Statics.java 
Abc started on Fri Jul 30 09:59:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.p2.P1P2Statics... 
Transforming p1.p2.P1P2Statics$NestedStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedInterface... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticClass... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics... 
Transforming p1.P1Statics$NestedStaticInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticClass... 
Transforming p1.P1Statics$NestedInterface... 
Transforming p1.P1Statics$NestedInterface$InnerInterface... 
Transforming p1.P1Statics$NestedStaticClass... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticClass... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming p1.P1Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics$NestedInterface$InnerStaticInterface... 
Transforming p1.P1Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticInterface$InnerInterface... 
Transforming p1.P1Statics$NestedInterface$InnerStaticClass... 
Transforming p1.P1Statics$NestedStaticClass$InnerInterface... 
Transforming p1.C1... 
Transforming StaticMembers_PR421... 
Transforming Statics... 
Transforming Statics$NestedStaticInterface... 
Transforming Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming Statics$NestedStaticInterface$InnerInterface... 
Transforming Statics$NestedStaticInterface$InnerStaticClass... 
Transforming Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming Statics$NestedInterface... 
Transforming Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming Statics$NestedStaticClass... 
Transforming Statics$NestedStaticClass$InnerStaticClass... 
Transforming Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming Statics$NestedInterface$InnerStaticClass... 
Transforming Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming Statics$NestedStaticClass$InnerInterface... 
Transforming Statics$NestedInterface$InnerStaticInterface... 
Transforming Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming Statics$NestedInterface$InnerInterface... 
Transforming Statics$NestedStaticClass$InnerStaticInterface... 
Transforming Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming p1.subp1.SubC1... 
Abc finished on Fri Jul 30 09:59:55 BST 2004. ( 0 min. 5 sec. )
================================================
Breakdown of abc phases  (total: 5358 millisec.)
------------------------------------------------
[ 01.418% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.293% ] Polyglot phases:  1891
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.297% ] Retrieving bodies:  391
[ 00.821% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.080% ] Compute advice lists:  165
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.187% ] Weaving advice:  10
[ 00.056% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 33.557% ] Soot Packs:  1798
[ 18.290% ] Soot Writing Output:  980
================================================
PASS: pureJava: Test "More thourough test of static members using full names" passed.


Running test pureJava/More thourough test of static members using imports
Commandline: abc -d pureJava pureJava/Statics.java pureJava/StaticMembersImports_PR421.java pureJava/p1/C1.java pureJava/p1/P1Statics.java pureJava/p1/subp1/SubC1.java pureJava/p1/p2/P1P2Statics.java 
Abc started on Fri Jul 30 09:59:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.p2.P1P2Statics... 
Transforming p1.p2.P1P2Statics$NestedInterface... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedStaticInterface$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticInterface... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticClass... 
Transforming p1.p2.P1P2Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerInterface... 
Transforming p1.p2.P1P2Statics$NestedInterface$InnerStaticClass... 
Transforming p1.P1Statics... 
Transforming p1.P1Statics$NestedStaticClass... 
Transforming p1.P1Statics$NestedStaticClass$InnerInterface... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticClass... 
Transforming p1.P1Statics$NestedStaticInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticClass... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticInterface... 
Transforming p1.P1Statics$NestedInterface... 
Transforming p1.P1Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming p1.P1Statics$NestedInterface$InnerStaticClass... 
Transforming p1.P1Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics$NestedInterface$InnerStaticInterface... 
Transforming p1.P1Statics$NestedInterface$InnerInterface... 
Transforming p1.P1Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming p1.P1Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming StaticMembersImports_PR421... 
Transforming Statics... 
Transforming Statics$NestedStaticInterface... 
Transforming Statics$NestedStaticInterface$InnerStaticInterface... 
Transforming Statics$NestedInterface... 
Transforming Statics$NestedInterface$InnerStaticClass... 
Transforming Statics$NestedStaticClass... 
Transforming Statics$NestedInterface$InnerInterface... 
Transforming Statics$NestedStaticClass$InnerStaticInterfaceNoStatics... 
Transforming Statics$NestedInterface$InnerStaticInterface... 
Transforming Statics$NestedStaticClass$InnerInterfaceNoStatics... 
Transforming Statics$NestedStaticInterface$InnerInterface... 
Transforming Statics$NestedInterface$InnerInterfaceNoStatics... 
Transforming Statics$NestedStaticInterface$InnerStaticClass... 
Transforming Statics$NestedStaticInterface$InnerStaticInterfaceNoStatics... 
Transforming Statics$NestedInterface$InnerStaticInterfaceNoStatics... 
Transforming Statics$NestedStaticClass$InnerInterface... 
Transforming Statics$NestedStaticInterface$InnerInterfaceNoStatics... 
Transforming Statics$NestedStaticClass$InnerStaticInterface... 
Transforming Statics$NestedStaticClass$InnerStaticClass... 
Transforming p1.C1... 
Transforming p1.subp1.SubC1... 
Abc finished on Fri Jul 30 10:00:01 BST 2004. ( 0 min. 5 sec. )
================================================
Breakdown of abc phases  (total: 5130 millisec.)
------------------------------------------------
[ 01.481% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.177% ] Polyglot phases:  1702
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.019% ] Intertype Adjuster:  1
[ 07.349% ] Retrieving bodies:  377
[ 00.643% ] Update pattern matcher:  33
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.021% ] Compute advice lists:  155
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.526% ] Weaving advice:  27
[ 00.214% ] Exceptions check:  11
[ 00.000% ] Validate jimple:  0
[ 35.653% ] Soot Packs:  1829
[ 17.914% ] Soot Writing Output:  919
================================================
PASS: pureJava: Test "More thourough test of static members using imports" passed.


Running test pureJava/conflictingPackageNames/Looking in class Java for java.lang.String WITH separate compilation
Commandline: abc -d pureJava/conflictingPackageNames pureJava/conflictingPackageNames/Java.java 
Abc started on Fri Jul 30 10:00:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Java... 
Transforming Java$lang... 
Transforming Java$lang$String... 
Abc finished on Fri Jul 30 10:00:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 198 millisec.)
------------------------------------------------
[ 35.354% ] Init. of Soot:  70
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.202% ] Polyglot phases:  40
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.051% ] Retrieving bodies:  10
[ 11.111% ] Update pattern matcher:  22
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.515% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.051% ] Weaving advice:  10
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.626% ] Soot Packs:  25
[ 09.091% ] Soot Writing Output:  18
================================================
Commandline: abc -d pureJava/conflictingPackageNames pureJava/conflictingPackageNames/Main.java 
Abc started on Fri Jul 30 10:00:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Main... 
Abc finished on Fri Jul 30 10:00:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 581 millisec.)
------------------------------------------------
[ 12.220% ] Init. of Soot:  71
[ 00.000% ] Loading Jars:  0
[ 00.172% ] Create polyglot compiler:  1
[ 21.343% ] Polyglot phases:  124
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.172% ] Intertype Adjuster:  1
[ 00.688% ] Retrieving bodies:  4
[ 07.573% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.516% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 55.422% ] Soot Packs:  322
[ 01.893% ] Soot Writing Output:  11
================================================
PASS: pureJava/conflictingPackageNames: Test "Looking in class Java for java.lang.String WITH separate compilation" passed.


Running test pureJava/conflictingPackageNames/Looking in class Java for java.lang.String WITHOUT separate compilation
Commandline: abc -d pureJava/conflictingPackageNames pureJava/conflictingPackageNames/Main.java pureJava/conflictingPackageNames/Java.java 
Abc started on Fri Jul 30 10:00:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Java... 
Transforming Java$lang... 
Transforming Java$lang$String... 
Transforming Main... 
Abc finished on Fri Jul 30 10:00:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 359 millisec.)
------------------------------------------------
[ 19.499% ] Init. of Soot:  70
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 38.162% ] Polyglot phases:  137
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.279% ] Intertype Adjuster:  1
[ 06.407% ] Retrieving bodies:  23
[ 13.928% ] Update pattern matcher:  50
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.114% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.279% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.256% ] Soot Packs:  44
[ 08.078% ] Soot Writing Output:  29
================================================
PASS: pureJava/conflictingPackageNames: Test "Looking in class Java for java.lang.String WITHOUT separate compilation" passed.


Running test pureJava/conflictingPackageNamesWithPackages/Looking in class Java for java.lang.String WITH separate compilation with packages
Commandline: abc -d pureJava/conflictingPackageNamesWithPackages pureJava/conflictingPackageNamesWithPackages/Java.java 
Abc started on Fri Jul 30 10:00:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming conflictingPackageNamesWithPackages.Java... 
Transforming conflictingPackageNamesWithPackages.Java$lang... 
Transforming conflictingPackageNamesWithPackages.Java$lang$String... 
Abc finished on Fri Jul 30 10:00:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 205 millisec.)
------------------------------------------------
[ 33.171% ] Init. of Soot:  68
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 18.049% ] Polyglot phases:  37
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.488% ] Intertype Adjuster:  1
[ 04.878% ] Retrieving bodies:  10
[ 10.732% ] Update pattern matcher:  22
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.854% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.878% ] Weaving advice:  10
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.732% ] Soot Packs:  22
[ 11.220% ] Soot Writing Output:  23
================================================
Commandline: abc -d pureJava/conflictingPackageNamesWithPackages pureJava/conflictingPackageNamesWithPackages/Main.java 
Abc started on Fri Jul 30 10:00:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming conflictingPackageNamesWithPackages.Main... 
Abc finished on Fri Jul 30 10:00:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 277 millisec.)
------------------------------------------------
[ 24.910% ] Init. of Soot:  69
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.126% ] Polyglot phases:  125
[ 00.361% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.444% ] Retrieving bodies:  4
[ 15.884% ] Update pattern matcher:  44
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.083% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.220% ] Soot Packs:  20
[ 03.971% ] Soot Writing Output:  11
================================================
PASS: pureJava/conflictingPackageNamesWithPackages: Test "Looking in class Java for java.lang.String WITH separate compilation with packages" passed.


Running test pureJava/conflictingPackageNamesWithPackages/Looking in class Java for java.lang.String WITHOUT separate compilation with packages
Commandline: abc -d pureJava/conflictingPackageNamesWithPackages pureJava/conflictingPackageNamesWithPackages/Main.java pureJava/conflictingPackageNamesWithPackages/Java.java 
Abc started on Fri Jul 30 10:00:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming conflictingPackageNamesWithPackages.Main... 
Transforming conflictingPackageNamesWithPackages.Java... 
Transforming conflictingPackageNamesWithPackages.Java$lang... 
Transforming conflictingPackageNamesWithPackages.Java$lang$String... 
Abc finished on Fri Jul 30 10:00:03 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 356 millisec.)
------------------------------------------------
[ 21.348% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.281% ] Create polyglot compiler:  1
[ 39.045% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.281% ] Intertype Adjuster:  1
[ 04.213% ] Retrieving bodies:  15
[ 12.921% ] Update pattern matcher:  46
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.124% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.281% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.360% ] Soot Packs:  44
[ 08.146% ] Soot Writing Output:  29
================================================
PASS: pureJava/conflictingPackageNamesWithPackages: Test "Looking in class Java for java.lang.String WITHOUT separate compilation with packages" passed.


Running test pureJava/Testing ternary operations.
Commandline: abc -d pureJava pureJava/MultiTernaryOps.java 
Abc started on Fri Jul 30 10:00:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MultiTernaryOps... 
Transforming MultiTernaryOps$t... 
Abc finished on Fri Jul 30 10:00:14 BST 2004. ( 0 min. 11 sec. )
================================================
Breakdown of abc phases  (total: 11069 millisec.)
------------------------------------------------
[ 00.632% ] Init. of Soot:  70
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 13.940% ] Polyglot phases:  1543
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 28.901% ] Retrieving bodies:  3199
[ 00.343% ] Update pattern matcher:  38
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.361% ] Compute advice lists:  372
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.036% ] Exceptions check:  4
[ 00.000% ] Validate jimple:  0
[ 43.157% ] Soot Packs:  4777
[ 09.630% ] Soot Writing Output:  1066
================================================
PASS: pureJava: Test "Testing ternary operations." passed.


Running test pureJava/Lifting locals in switch statements.
Commandline: abc -d pureJava pureJava/SwitchStmtLocals.java 
Abc started on Fri Jul 30 10:00:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SwitchStmtLocals... 
Abc finished on Fri Jul 30 10:00:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 656 millisec.)
------------------------------------------------
[ 10.366% ] Init. of Soot:  68
[ 00.000% ] Loading Jars:  0
[ 00.152% ] Create polyglot compiler:  1
[ 73.323% ] Polyglot phases:  481
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.982% ] Retrieving bodies:  13
[ 06.098% ] Update pattern matcher:  40
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.610% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.354% ] Soot Packs:  22
[ 04.116% ] Soot Writing Output:  27
================================================
PASS: pureJava: Test "Lifting locals in switch statements." passed.


Running test pureJava/Getting confused when looking up method signatures
Commandline: abc -d pureJava pureJava/MethodSigs.java 
Abc started on Fri Jul 30 10:00:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MethodSigs... 
Transforming MethodSigs$1... 
Transforming MethodSigs$2... 
Transforming MethodSigs$3... 
Transforming MethodSigs$4... 
Transforming MethodSigs$5... 
Transforming MethodSigs$6... 
Transforming MethodSigs$7... 
Transforming MethodSigs$8... 
Transforming MethodSigs$9... 
Transforming MethodSigs$10... 
Transforming MethodSigs$11... 
Transforming MethodSigs$12... 
Transforming MethodSigs$13... 
Transforming MethodSigs$14... 
Transforming MethodSigs$15... 
Abc finished on Fri Jul 30 10:00:16 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1167 millisec.)
------------------------------------------------
[ 06.341% ] Init. of Soot:  74
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.131% ] Polyglot phases:  480
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.656% ] Retrieving bodies:  66
[ 03.342% ] Update pattern matcher:  39
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.741% ] Compute advice lists:  67
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.171% ] Weaving advice:  2
[ 00.086% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 21.080% ] Soot Packs:  246
[ 16.452% ] Soot Writing Output:  192
================================================
PASS: pureJava: Test "Getting confused when looking up method signatures" passed.


Running test pureJava/Not recognizing the chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'
Commandline: abc -d pureJava pureJava/Chars.java 
Abc started on Fri Jul 30 10:00:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Chars... 
Abc finished on Fri Jul 30 10:00:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 591 millisec.)
------------------------------------------------
[ 10.660% ] Init. of Soot:  63
[ 00.000% ] Loading Jars:  0
[ 00.169% ] Create polyglot compiler:  1
[ 31.303% ] Polyglot phases:  185
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 08.460% ] Retrieving bodies:  50
[ 05.753% ] Update pattern matcher:  34
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.230% ] Compute advice lists:  25
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.169% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.474% ] Soot Packs:  121
[ 18.782% ] Soot Writing Output:  111
================================================
PASS: pureJava: Test "Not recognizing the chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'" passed.


Running test pureJava/Test chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7' with a case statement
Commandline: abc -d pureJava pureJava/CaseClauses.java 
Abc started on Fri Jul 30 10:00:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CaseClauses... 
Abc finished on Fri Jul 30 10:00:18 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1327 millisec.)
------------------------------------------------
[ 05.124% ] Init. of Soot:  68
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 47.852% ] Polyglot phases:  635
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 12.359% ] Retrieving bodies:  164
[ 02.713% ] Update pattern matcher:  36
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.638% ] Compute advice lists:  35
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.075% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.956% ] Soot Packs:  225
[ 12.283% ] Soot Writing Output:  163
================================================
PASS: pureJava: Test "Test chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7' with a case statement" passed.


Running test pureJava/Checking character values with all the unicode chars.
Commandline: abc -d pureJava pureJava/CharsUnicode.java 
Abc started on Fri Jul 30 10:00:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CharsUnicode... 
Abc finished on Fri Jul 30 10:01:51 BST 2004. ( 1 min. 33 sec. )
================================================
Breakdown of abc phases  (total: 93156 millisec.)
------------------------------------------------
[ 00.069% ] Init. of Soot:  64
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.819% ] Polyglot phases:  14736
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 11.759% ] Retrieving bodies:  10954
[ 00.026% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.706% ] Compute advice lists:  3452
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.004% ] Weaving advice:  4
[ 00.068% ] Exceptions check:  63
[ 00.000% ] Validate jimple:  0
[ 24.571% ] Soot Packs:  22889
[ 43.980% ] Soot Writing Output:  40970
================================================
PASS: pureJava: Test "Checking character values with all the unicode chars." passed.


Running test pureJava/Trouble finding methods with the same name and different parameter types
Commandline: abc -d pureJava pureJava/MethodsWithTheSameName.java 
Abc started on Fri Jul 30 10:01:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MethodsWithTheSameName... 
Transforming MethodsWithTheSameName$Inner... 
Abc finished on Fri Jul 30 10:01:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 353 millisec.)
------------------------------------------------
[ 15.581% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.161% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 02.833% ] Declare Parents:  10
[ 00.000% ] Intertype Adjuster:  0
[ 02.833% ] Retrieving bodies:  10
[ 06.799% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.116% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.745% ] Soot Packs:  105
[ 07.932% ] Soot Writing Output:  28
================================================
PASS: pureJava: Test "Trouble finding methods with the same name and different parameter types" passed.


Running test pureJava/Binding non-public static inner classes of interfaces in other packages
Commandline: abc -d pureJava pureJava/StaticClassesInInterfaces.java pureJava/anotherPackage/AnotherPackageInterface.java 
Abc started on Fri Jul 30 10:01:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming anotherPackage.AnotherPackageInterface... 
Transforming anotherPackage.AnotherPackageInterface$Inner... 
Transforming StaticClassesInInterfaces... 
Abc finished on Fri Jul 30 10:01:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 235 millisec.)
------------------------------------------------
[ 24.255% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 46.809% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.702% ] Retrieving bodies:  4
[ 11.915% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.426% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.426% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.234% ] Soot Packs:  17
[ 07.234% ] Soot Writing Output:  17
================================================
PASS: pureJava: Test "Binding non-public static inner classes of interfaces in other packages" passed.


Running test pureJava/Not recognizing the octal chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'
Commandline: abc -d pureJava pureJava/OctalChars.java 
Abc started on Fri Jul 30 10:01:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OctalChars... 
Abc finished on Fri Jul 30 10:01:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 566 millisec.)
------------------------------------------------
[ 21.378% ] Init. of Soot:  121
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.201% ] Polyglot phases:  120
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.184% ] Retrieving bodies:  35
[ 04.240% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.297% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.177% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.724% ] Soot Packs:  89
[ 28.799% ] Soot Writing Output:  163
================================================
PASS: pureJava: Test "Not recognizing the octal chars '\0', '\1', '\2', '\3', '\4', '\5', '\6', '\7'" passed.


Running test pureJava/Members with the same name as their package cause confusion with fully-qualified names.
Commandline: abc -d pureJava pureJava/samenames/Main.java pureJava/samenames/Other.java 
Abc started on Fri Jul 30 10:01:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming samenames.Main... 
Transforming samenames.Other... 
Abc finished on Fri Jul 30 10:01:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 226 millisec.)
------------------------------------------------
[ 24.336% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 46.460% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.212% ] Retrieving bodies:  5
[ 10.619% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.885% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.442% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.407% ] Soot Packs:  19
[ 06.637% ] Soot Writing Output:  15
================================================
PASS: pureJava: Test "Members with the same name as their package cause confusion with fully-qualified names." passed.


Running test pureJava/Fully-qual'ed names with same start as variable names
Commandline: abc -d pureJava pureJava/FullNames.java 
Abc started on Fri Jul 30 10:01:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FullNames... 
Abc finished on Fri Jul 30 10:01:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 329 millisec.)
------------------------------------------------
[ 34.954% ] Init. of Soot:  115
[ 00.000% ] Loading Jars:  0
[ 00.304% ] Create polyglot compiler:  1
[ 37.690% ] Polyglot phases:  124
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.736% ] Retrieving bodies:  9
[ 06.991% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.343% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.304% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 07.903% ] Soot Packs:  26
[ 05.775% ] Soot Writing Output:  19
================================================
PASS: pureJava: Test "Fully-qual'ed names with same start as variable names" passed.


Running test pureJava/Fully qualifying inner classes within annonymous classes causes problems.
Commandline: abc -d pureJava pureJava/InnerClassesInAnnonymousClasses.java 
Abc started on Fri Jul 30 10:01:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InnerClassesInAnnonymousClasses... 
Transforming InnerClassesInAnnonymousClasses$1... 
Transforming InnerClassesInAnnonymousClasses$1$Inner... 
Abc finished on Fri Jul 30 10:01:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 162 millisec.)
------------------------------------------------
[ 33.333% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.617% ] Create polyglot compiler:  1
[ 10.494% ] Polyglot phases:  17
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.704% ] Retrieving bodies:  6
[ 23.457% ] Update pattern matcher:  38
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.852% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.617% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.963% ] Soot Packs:  21
[ 12.963% ] Soot Writing Output:  21
================================================
PASS: pureJava: Test "Fully qualifying inner classes within annonymous classes causes problems." passed.


Running test pureJava/Calls to methods in outer annonymous classes are being qual's incorrectly with 'this'
Commandline: abc -d pureJava pureJava/MisplacedThisInAnnonymousInnerClasses.java 
Abc started on Fri Jul 30 10:01:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MisplacedThisInAnnonymousInnerClasses... 
Transforming MisplacedThisInAnnonymousInnerClasses$1... 
Transforming MisplacedThisInAnnonymousInnerClasses$2... 
Transforming MisplacedThisInAnnonymousInnerClasses$3... 
Transforming MisplacedThisInAnnonymousInnerClasses$4... 
Abc finished on Fri Jul 30 10:01:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 394 millisec.)
------------------------------------------------
[ 14.213% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.995% ] Polyglot phases:  130
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.807% ] Retrieving bodies:  15
[ 05.838% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.807% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.508% ] Weaving advice:  2
[ 00.254% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.635% ] Soot Packs:  101
[ 12.944% ] Soot Writing Output:  51
================================================
PASS: pureJava: Test "Calls to methods in outer annonymous classes are being qual's incorrectly with 'this'" passed.


Running test pureJava/innersFromSourceAndBytecode/Reading inner classes from source and bytecode (1) -- was failing
Commandline: abc -d pureJava/innersFromSourceAndBytecode pureJava/innersFromSourceAndBytecode/C.java pureJava/innersFromSourceAndBytecode/D.java 
Abc started on Fri Jul 30 10:01:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming C$I... 
Transforming C$I$J... 
Transforming C$I$J$K... 
Abc finished on Fri Jul 30 10:01:55 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 862 millisec.)
------------------------------------------------
[ 06.381% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.116% ] Create polyglot compiler:  1
[ 34.687% ] Polyglot phases:  299
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.381% ] Retrieving bodies:  55
[ 02.784% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.552% ] Compute advice lists:  22
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.232% ] Weaving advice:  2
[ 00.116% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 34.339% ] Soot Packs:  296
[ 12.413% ] Soot Writing Output:  107
================================================
Commandline: abc -cp /usr/local/src/abc-dev/lib/abc-complete.jar:/usr/local/src/abc-dev/lib/abc-testing.jar:/usr/local/src/abc-dev/lib/abc-runtime.jar:pureJava/innersFromSourceAndBytecode -d pureJava/innersFromSourceAndBytecode pureJava/innersFromSourceAndBytecode/Main.java pureJava/innersFromSourceAndBytecode/C.java 
Abc started on Fri Jul 30 10:01:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Main... 
Transforming C... 
Transforming C$I... 
Transforming C$I$J... 
Transforming C$I$J$K... 
Abc finished on Fri Jul 30 10:01:56 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1070 millisec.)
------------------------------------------------
[ 05.327% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.093% ] Create polyglot compiler:  1
[ 32.897% ] Polyglot phases:  352
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.093% ] Intertype Adjuster:  1
[ 07.383% ] Retrieving bodies:  79
[ 02.897% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 09.065% ] Compute advice lists:  97
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.093% ] Weaving advice:  1
[ 00.093% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 28.131% ] Soot Packs:  301
[ 13.925% ] Soot Writing Output:  149
================================================
PASS: pureJava/innersFromSourceAndBytecode: Test "Reading inner classes from source and bytecode (1) -- was failing" passed.


Running test pureJava/innersFromSourceAndBytecode/Reading inner classes from source and bytecode (2)
Commandline: abc -d pureJava/innersFromSourceAndBytecode pureJava/innersFromSourceAndBytecode/Main.java pureJava/innersFromSourceAndBytecode/C.java pureJava/innersFromSourceAndBytecode/D.java 
Abc started on Fri Jul 30 10:01:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming C$I... 
Transforming C$I$J... 
Transforming C$I$J$K... 
Transforming Main... 
Abc finished on Fri Jul 30 10:01:57 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1162 millisec.)
------------------------------------------------
[ 04.733% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.993% ] Polyglot phases:  395
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.627% ] Retrieving bodies:  77
[ 01.979% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.012% ] Compute advice lists:  35
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.172% ] Weaving advice:  2
[ 00.086% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 34.251% ] Soot Packs:  398
[ 15.146% ] Soot Writing Output:  176
================================================
PASS: pureJava/innersFromSourceAndBytecode: Test "Reading inner classes from source and bytecode (2)" passed.


Running test pureJava/innersFromSourceAndBytecode/Reading inner classes from source and bytecode (3)
Commandline: abc -d pureJava/innersFromSourceAndBytecode pureJava/innersFromSourceAndBytecode/C.java pureJava/innersFromSourceAndBytecode/D.java 
Abc started on Fri Jul 30 10:01:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming C$I... 
Transforming C$I$J... 
Transforming C$I$J$K... 
Abc finished on Fri Jul 30 10:01:58 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 813 millisec.)
------------------------------------------------
[ 06.765% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.980% ] Polyglot phases:  260
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.134% ] Retrieving bodies:  58
[ 02.952% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.829% ] Compute advice lists:  23
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.246% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 36.285% ] Soot Packs:  295
[ 11.808% ] Soot Writing Output:  96
================================================
Commandline: abc -cp /usr/local/src/abc-dev/lib/abc-complete.jar:/usr/local/src/abc-dev/lib/abc-testing.jar:/usr/local/src/abc-dev/lib/abc-runtime.jar:pureJava/innersFromSourceAndBytecode -d pureJava/innersFromSourceAndBytecode pureJava/innersFromSourceAndBytecode/Main.java pureJava/innersFromSourceAndBytecode/C.java pureJava/innersFromSourceAndBytecode/D.java 
Abc started on Fri Jul 30 10:01:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming C$I... 
Transforming C$I$J... 
Transforming C$I$J$K... 
Transforming Main... 
Abc finished on Fri Jul 30 10:01:59 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1188 millisec.)
------------------------------------------------
[ 04.714% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.084% ] Create polyglot compiler:  1
[ 35.017% ] Polyglot phases:  416
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 10.859% ] Retrieving bodies:  129
[ 02.104% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.778% ] Compute advice lists:  33
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.168% ] Weaving advice:  2
[ 00.084% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 30.219% ] Soot Packs:  359
[ 13.973% ] Soot Writing Output:  166
================================================
PASS: pureJava/innersFromSourceAndBytecode: Test "Reading inner classes from source and bytecode (3)" passed.


Running test pureJava/Not lifting types correctly with bytes and shorts with ternary ops
Commandline: abc -d pureJava pureJava/TernaryPrimitiveOps.java 
Abc started on Fri Jul 30 10:01:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TernaryPrimitiveOps... 
Abc finished on Fri Jul 30 10:02:05 BST 2004. ( 0 min. 5 sec. )
================================================
Breakdown of abc phases  (total: 5423 millisec.)
------------------------------------------------
[ 01.401% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.338% ] Polyglot phases:  886
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 54.970% ] Retrieving bodies:  2981
[ 00.461% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.555% ] Compute advice lists:  247
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.055% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 16.743% ] Soot Packs:  908
[ 05.477% ] Soot Writing Output:  297
================================================
PASS: pureJava: Test "Not lifting types correctly with bytes and shorts with ternary ops" passed.


Running test pureJava/Not looking up methods inside of anonymous declarations correctly.
Commandline: abc -d pureJava pureJava/AnonymousMethodLookup.java 
Abc started on Fri Jul 30 10:02:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming AnonymousMethodLookup... 
Transforming AnonymousMethodLookup$1... 
Abc finished on Fri Jul 30 10:02:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 132 millisec.)
------------------------------------------------
[ 41.667% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 19.697% ] Polyglot phases:  26
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.273% ] Retrieving bodies:  3
[ 09.091% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.515% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.758% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.879% ] Soot Packs:  17
[ 12.121% ] Soot Writing Output:  16
================================================
PASS: pureJava: Test "Not looking up methods inside of anonymous declarations correctly." passed.


Running test pureJava/Resolving extended classes with array parameters
Commandline: abc -d pureJava pureJava/ResolvingArrayParameters.java 
Abc started on Fri Jul 30 10:02:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C_double_short_byte... 
Transforming C_float_boolean_char... 
Transforming C_double_short_int... 
Transforming C_float_char_boolean... 
Transforming C_long_double_float... 
Transforming C_short_boolean_double... 
Transforming C_byte_boolean_float... 
Transforming C_int_double_float... 
Transforming C_char_int_long... 
Transforming C_float_byte_short... 
Transforming C_long_double_boolean... 
Transforming C_float_byte_boolean... 
Transforming C_short_byte_float... 
Transforming C_byte_char... 
Transforming C_double_byte_boolean... 
Transforming C_boolean_char_double... 
Transforming C_long_int_short... 
Transforming C_char_float_int... 
Transforming C_float_boolean_byte... 
Transforming C_int_char... 
Transforming C_double_char_int... 
Transforming C_char_double_byte... 
Transforming C_char_int_short... 
Transforming C_byte_float_boolean... 
Transforming C_byte_short_char... 
Transforming C_int_boolean... 
Transforming C_byte_long... 
Transforming CC_byte... 
Transforming CC_short... 
Transforming C_char_byte... 
Transforming C_boolean_char_long... 
Transforming C_long_float... 
Transforming C_boolean_char... 
Transforming C_byte_double_int... 
Transforming C_double_long... 
Transforming C_boolean_double_long... 
Transforming C_float_double_byte... 
Transforming C_long_boolean_char... 
Transforming C_char_byte_float... 
Transforming C_byte_char_boolean... 
Transforming C_float_boolean... 
Transforming C_int_double_short... 
Transforming C_int_boolean_byte... 
Transforming C_double_char_boolean... 
Transforming C_long_boolean_double... 
Transforming C_short_float_char... 
Transforming C_long_short_int... 
Transforming C_long_boolean_float... 
Transforming C_byte_int... 
Transforming C_int_char_byte... 
Transforming C_int_boolean_double... 
Transforming C_double_char_short... 
Transforming C_int_char_double... 
Transforming C_byte_int_boolean... 
Transforming C_int_double_boolean... 
Transforming C_char_byte_short... 
Transforming C_int_short_char... 
Transforming C_long_char_float... 
Transforming C_char_short_boolean... 
Transforming C_char_long... 
Transforming C_double_boolean... 
Transforming C_float_char_long... 
Transforming C_boolean_int_float... 
Transforming C_double_byte... 
Transforming C_short_int_char... 
Transforming C_long_char_short... 
Transforming C_int_short_long... 
Transforming C_char_short_int... 
Transforming C_boolean_int_char... 
Transforming C_double_char_byte... 
Transforming CC_double... 
Transforming C_byte... 
Transforming C_char_byte_double... 
Transforming C_int_short_boolean... 
Transforming C_long_float_char... 
Transforming C_short_boolean_float... 
Transforming C_boolean_byte_long... 
Transforming C_short_int_double... 
Transforming C_float_short_byte... 
Transforming C_byte_boolean_double... 
Transforming C_short_char... 
Transforming C_byte_float_char... 
Transforming C_long_int_byte... 
Transforming C_boolean_byte_short... 
Transforming C_byte_short_double... 
Transforming C_long_double_short... 
Transforming C_char_int_byte... 
Transforming C_long_float_boolean... 
Transforming C_double_short_boolean... 
Transforming C_boolean_float_byte... 
Transforming C_int_byte_boolean... 
Transforming C_int_byte_char... 
Transforming C_float_char_double... 
Transforming C_int_float... 
Transforming C_int_short_double... 
Transforming C_float_double_char... 
Transforming C_double_char_float... 
Transforming C_char_int_boolean... 
Transforming C_short_float_boolean... 
Transforming C_int_boolean_long... 
Transforming C_short_byte_long... 
Transforming C_long_int_char... 
Transforming C_float_byte_int... 
Transforming C_double... 
Transforming C_boolean_int_short... 
Transforming C_long_char_double... 
Transforming C_byte_float_short... 
Transforming C_short_char_boolean... 
Transforming C_boolean_float_double... 
Transforming C_byte_boolean_char... 
Transforming C_float_long... 
Transforming C_float_boolean_short... 
Transforming C_char... 
Transforming C_float_double... 
Transforming C_char_byte_boolean... 
Transforming C_char_boolean_short... 
Transforming C_long_short_double... 
Transforming C_int... 
Transforming C_short_double_long... 
Transforming C_int_boolean_float... 
Transforming C_int_boolean_short... 
Transforming CC_boolean... 
Transforming C_double_short... 
Transforming C_char_double... 
Transforming C_char_short_long... 
Transforming C_short_double_boolean... 
Transforming C_char_boolean... 
Transforming C_byte_boolean_short... 
Transforming C_float_byte... 
Transforming C_boolean_short_char... 
Transforming C_long_char... 
Transforming C_short_long... 
Transforming C_short_int_float... 
Transforming C_short_byte... 
Transforming C_double_float_boolean... 
Transforming C_char_float... 
Transforming C_short_char_float... 
Transforming C_float_byte_double... 
Transforming C_float... 
Transforming C_short... 
Transforming C_long_float_byte... 
Transforming C_short_char_long... 
Transforming C_char_short_float... 
Transforming C_boolean_char_float... 
Transforming C_int_float_boolean... 
Transforming C_float_double_short... 
Transforming C_boolean... 
Transforming C_char_short_byte... 
Transforming C_short_boolean_byte... 
Transforming C_char_boolean_double... 
Transforming C_char_short... 
Transforming C_float_double_long... 
Transforming C_char_double_long... 
Transforming C_float_short_long... 
Transforming C_float_int_short... 
Transforming C_short_float_long... 
Transforming C_byte_char_float... 
Transforming C_double_short_long... 
Transforming C_short_double_byte... 
Transforming C_char_float_short... 
Transforming C_boolean_byte... 
Transforming C_boolean_short_long... 
Transforming C_boolean_char_byte... 
Transforming C_byte_char_double... 
Transforming C_long... 
Transforming C_boolean_double_short... 
Transforming C_int_short_float... 
Transforming C_double_int_float... 
Transforming C_long_double... 
Transforming C_boolean_int_byte... 
Transforming C_char_int_float... 
Transforming C_boolean_short_int... 
Transforming C_int_double_long... 
Transforming C_short_float... 
Transforming C_int_float_char... 
Transforming C_byte_char_int... 
Transforming C_boolean_int_double... 
Transforming C_float_double_boolean... 
Transforming C_byte_boolean_int... 
Transforming C_char_float_boolean... 
Transforming C_boolean_double_char... 
Transforming C_int_boolean_char... 
Transforming C_int_double_char... 
Transforming C_short_double_float... 
Transforming C_boolean_float_short... 
Transforming C_boolean_int_long... 
Transforming C_float_boolean_long... 
Transforming C_int_char_float... 
Transforming C_double_boolean_long... 
Transforming CC_long... 
Transforming C_double_char... 
Transforming C_char_int_double... 
Transforming C_short_float_byte... 
Transforming C_double_int_byte... 
Transforming C_boolean_short_double... 
Transforming C_short_int... 
Transforming C_int_byte_short... 
Transforming C_long_short_char... 
Transforming C_char_boolean_long... 
Transforming C_boolean_byte_float... 
Transforming C_byte_short_long... 
Transforming C_short_int_long... 
Transforming C_int_char_short... 
Transforming CC_float... 
Transforming C_short_int_boolean... 
Transforming C_float_short_char... 
Transforming C_short_float_int... 
Transforming C_long_byte_short... 
Transforming C_long_double_byte... 
Transforming C_boolean_double... 
Transforming CC_char... 
Transforming C_byte_double_long... 
Transforming C_int_byte_long... 
Transforming C_int_short_byte... 
Transforming C_byte_boolean_long... 
Transforming C_int_double_byte... 
Transforming C_long_short_boolean... 
Transforming C_short_double_int... 
Transforming C_int_float_double... 
Transforming C_float_char... 
Transforming C_double_byte_long... 
Transforming C_float_double_int... 
Transforming C_int_short... 
Transforming C_short_byte_boolean... 
Transforming C_boolean_byte_char... 
Transforming C_byte_int_long... 
Transforming C_double_short_float... 
Transforming C_long_char_int... 
Transforming C_double_byte_char... 
Transforming C_int_char_long... 
Transforming C_boolean_short_byte... 
Transforming C_double_float_int... 
Transforming C_long_float_int... 
Transforming C_float_char_int... 
Transforming C_float_char_short... 
Transforming C_int_float_byte... 
Transforming C_short_double_char... 
Transforming C_long_short... 
Transforming C_long_byte_boolean... 
Transforming C_long_byte_char... 
Transforming C_byte_double_boolean... 
Transforming C_float_int_long... 
Transforming C_double_int_long... 
Transforming C_int_long... 
Transforming C_float_short_boolean... 
Transforming C_byte_double_char... 
Transforming C_short_boolean_int... 
Transforming C_boolean_long... 
Transforming C_byte_int_short... 
Transforming C_char_double_short... 
Transforming C_float_int... 
Transforming C_long_boolean_int... 
Transforming C_short_char_int... 
Transforming C_int_byte... 
Transforming C_long_int... 
Transforming C_long_char_byte... 
Transforming C_short_char_double... 
Transforming C_boolean_short... 
Transforming C_short_float_double... 
Transforming C_boolean_float_long... 
Transforming C_boolean_double_byte... 
Transforming C_double_char_long... 
Transforming C_long_boolean_byte... 
Transforming C_int_char_boolean... 
Transforming C_long_float_long... 
Transforming C_double_byte_int... 
Transforming C_short_byte_int... 
Transforming C_int_double... 
Transforming C_float_int_double... 
Transforming C_byte_float_double... 
Transforming C_float_int_boolean... 
Transforming C_double_float_long... 
Transforming C_long_boolean... 
Transforming C_long_int_double... 
Transforming C_double_float... 
Transforming C_long_float_double... 
Transforming C_long_byte_float... 
Transforming C_double_boolean_int... 
Transforming C_short_boolean... 
Transforming C_double_boolean_short... 
Transforming C_char_double_boolean... 
Transforming C_short_double... 
Transforming C_boolean_char_int... 
Transforming C_byte_short_int... 
Transforming C_char_byte_long... 
Transforming C_long_int_float... 
Transforming C_double_int_boolean... 
Transforming C_boolean_float_int... 
Transforming C_short_boolean_char... 
Transforming C_byte_short... 
Transforming C_char_float_byte... 
Transforming C_float_byte_long... 
Transforming C_double_int_char... 
Transforming C_short_char_byte... 
Transforming C_char_int... 
Transforming C_double_byte_float... 
Transforming C_double_float_byte... 
Transforming C_byte_int_float... 
Transforming C_double_int_short... 
Transforming C_char_boolean_float... 
Transforming C_boolean_double_int... 
Transforming C_short_int_byte... 
Transforming C_boolean_byte_double... 
Transforming C_float_byte_char... 
Transforming C_char_float_long... 
Transforming C_boolean_byte_int... 
Transforming C_byte_boolean... 
Transforming C_char_boolean_byte... 
Transforming C_char_short_double... 
Transforming C_float_char_byte... 
Transforming CC_int... 
Transforming C_byte_double_float... 
Transforming C_float_boolean_double... 
Transforming C_float_int_char... 
Transforming C_double_int... 
Transforming C_double_boolean_char... 
Transforming C_byte_char_long... 
Transforming C_float_int_byte... 
Transforming C_double_float_char... 
Transforming C_char_double_float... 
Transforming C_short_byte_double... 
Transforming C_byte_short_float... 
Transforming C_int_byte_double... 
Transforming C_long_short_byte... 
Transforming C_short_byte_char... 
Transforming C_char_boolean_int... 
Transforming C_long_byte... 
Transforming C_double_boolean_float... 
Transforming ResolvingArrayParameters... 
Transforming C_int_byte_float... 
Transforming C_boolean_short_float... 
Transforming C_byte_double... 
Transforming C_double_short_char... 
Transforming C_long_int_boolean... 
Transforming C_byte_float_int... 
Transforming C_float_short... 
Transforming C_float_short_double... 
Transforming C_byte_double_short... 
Transforming C_boolean_int... 
Transforming C_byte_int_double... 
Transforming C_long_char_boolean... 
Transforming C_double_float_short... 
Transforming C_int_float_short... 
Transforming C_long_double_int... 
Transforming C_double_byte_short... 
Transforming C_char_float_double... 
Transforming C_long_double_char... 
Transforming C_byte_float... 
Transforming C_double_boolean_byte... 
Transforming C_long_byte_int... 
Transforming C_byte_short_boolean... 
Transforming C_byte_float_long... 
Transforming C_boolean_float... 
Transforming C_boolean_float_char... 
Transforming A... 
Transforming C_long_boolean_short... 
Transforming C_short_boolean_long... 
Transforming C_float_short_int... 
Transforming C_long_float_short... 
Transforming C_boolean_char_short... 
Transforming C_byte_char_short... 
Transforming C_long_byte_double... 
Transforming C_boolean_double_float... 
Transforming C_byte_int_char... 
Transforming C_float_boolean_int... 
Transforming C_char_byte_int... 
Transforming C_long_short_float... 
Transforming C_char_double_int... 
Abc finished on Fri Jul 30 10:02:28 BST 2004. ( 0 min. 23 sec. )
================================================
Breakdown of abc phases  (total: 23477 millisec.)
------------------------------------------------
[ 00.362% ] Init. of Soot:  85
[ 00.000% ] Loading Jars:  0
[ 00.004% ] Create polyglot compiler:  1
[ 56.856% ] Polyglot phases:  13348
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.004% ] Intertype Adjuster:  1
[ 06.317% ] Retrieving bodies:  1483
[ 00.111% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.449% ] Compute advice lists:  575
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.243% ] Weaving advice:  57
[ 00.064% ] Exceptions check:  15
[ 00.000% ] Validate jimple:  0
[ 20.429% ] Soot Packs:  4796
[ 13.162% ] Soot Writing Output:  3090
================================================
PASS: pureJava: Test "Resolving extended classes with array parameters" passed.


Running test pureJava/Assignments as second arguments in ternary operators.
Commandline: abc -d pureJava pureJava/TernaryAssignments.java 
Abc started on Fri Jul 30 10:02:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TernaryAssignments... 
Abc finished on Fri Jul 30 10:02:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 198 millisec.)
------------------------------------------------
[ 37.879% ] Init. of Soot:  75
[ 00.000% ] Loading Jars:  0
[ 00.505% ] Create polyglot compiler:  1
[ 37.374% ] Polyglot phases:  74
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.505% ] Intertype Adjuster:  1
[ 02.020% ] Retrieving bodies:  4
[ 11.616% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.010% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.051% ] Soot Packs:  10
[ 04.040% ] Soot Writing Output:  8
================================================
PASS: pureJava: Test "Assignments as second arguments in ternary operators." passed.


Running test pureJava/Using 'aspect' as identifier is legal TODO
Commandline: abc -d pureJava pureJava/KeywordAspect.java 
Abc started on Fri Jul 30 10:02:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 7 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Using 'aspect' as identifier is legal TODO" passed.


Running test pureJava/Using 'pointcut' as identifier is legal TODO
Commandline: abc -d pureJava pureJava/KeywordPointcut.java 
Abc started on Fri Jul 30 10:02:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 7 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Using 'pointcut' as identifier is legal TODO" passed.


Running test pureJava/Conflicting inner classes with interfaces.
Commandline: abc -d pureJava pureJava/PR413.java 
Abc started on Fri Jul 30 10:02:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AbstractConflictingClassThatRedefinesInnerClass... 
Transforming PR413... 
Transforming AbstractConflictingClassThatRedefinesInnerClass$InnerClass... 
Transforming Interface... 
Transforming Interface$InnerClass... 
Transforming NonAbstractExtendingClass... 
Transforming NonAbstractExtendingClass$InnerClass... 
Transforming NonAbstractConflictingClass... 
Transforming NonAbstractConflictingClassThatRedefinesInnerClass... 
Transforming NonAbstractConflictingClassThatRedefinesInnerClass$InnerClass... 
Transforming AbstractConflictingClass... 
Transforming Abstract... 
Transforming Abstract$InnerClass... 
Transforming NonAbstractClass... 
Transforming NonAbstractClass$InnerClass... 
Abc finished on Fri Jul 30 10:02:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 301 millisec.)
------------------------------------------------
[ 19.934% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 10.631% ] Polyglot phases:  32
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.332% ] Intertype Adjuster:  1
[ 03.987% ] Retrieving bodies:  12
[ 04.319% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.658% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.664% ] Weaving advice:  2
[ 00.332% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 21.927% ] Soot Packs:  66
[ 35.216% ] Soot Writing Output:  106
================================================
PASS: pureJava: Test "Conflicting inner classes with interfaces." passed.


Running test new/Not binding constructor when using more than one compilation
Commandline: abc -d new new/OuterAbstract_PR408.java 
Abc started on Fri Jul 30 10:02:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OuterAbstract_PR408... 
Transforming OuterAbstract_PR408$InnerAbstract... 
Abc finished on Fri Jul 30 10:02:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 209 millisec.)
------------------------------------------------
[ 27.273% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.933% ] Polyglot phases:  96
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.435% ] Retrieving bodies:  3
[ 11.483% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.478% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.478% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.220% ] Soot Packs:  13
[ 06.699% ] Soot Writing Output:  14
================================================
Commandline: abc -d new new/ExtendsOuterAbstract_PR408.java 
Abc started on Fri Jul 30 10:02:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/ExtendsOuterAbstract_PR408.java:2,48-67: Could not find type "OuterAbstract_PR408".
FAIL: Test "new/Not binding constructor when using more than one compilation" failed


Running test pureJava/confusions of casts and parens
Commandline: abc -d pureJava pureJava/CastVsParen.java 
Abc started on Fri Jul 30 10:02:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CastVsParen... 
Abc finished on Fri Jul 30 10:02:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 145 millisec.)
------------------------------------------------
[ 50.345% ] Init. of Soot:  73
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.345% ] Polyglot phases:  44
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.690% ] Intertype Adjuster:  1
[ 01.379% ] Retrieving bodies:  2
[ 08.276% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.690% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.828% ] Soot Packs:  7
[ 03.448% ] Soot Writing Output:  5
================================================
PASS: pureJava: Test "confusions of casts and parens" passed.


Running test pureJava/default constructors seen by inner classes subtyping outers
Commandline: abc -d pureJava pureJava/DefaultConsAndInner.java 
Abc started on Fri Jul 30 10:02:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming DefaultConsAndInner... 
Transforming Outer... 
Transforming Outer$Inner... 
Abc finished on Fri Jul 30 10:02:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 232 millisec.)
------------------------------------------------
[ 23.276% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.431% ] Create polyglot compiler:  1
[ 50.000% ] Polyglot phases:  116
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.724% ] Retrieving bodies:  4
[ 09.914% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.862% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.431% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.466% ] Soot Packs:  15
[ 06.897% ] Soot Writing Output:  16
================================================
PASS: pureJava: Test "default constructors seen by inner classes subtyping outers" passed.


Running test pureJava/folding fields set to anonymous instances containing self-references
Commandline: abc -d pureJava pureJava/AnonFolding.java 
Abc started on Fri Jul 30 10:02:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AnonFolding... 
Transforming AnonFolding$1... 
Abc finished on Fri Jul 30 10:02:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 248 millisec.)
------------------------------------------------
[ 36.290% ] Init. of Soot:  90
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.903% ] Polyglot phases:  94
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.403% ] Intertype Adjuster:  1
[ 02.016% ] Retrieving bodies:  5
[ 09.677% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.806% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.403% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.452% ] Soot Packs:  16
[ 06.048% ] Soot Writing Output:  15
================================================
PASS: pureJava: Test "folding fields set to anonymous instances containing self-references" passed.


Running test pureJava/finally at the end of a method that needs to return
Commandline: abc -d pureJava pureJava/FinallyAndReturns.java 
Abc started on Fri Jul 30 10:02:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FinallyAndReturns... 
Abc finished on Fri Jul 30 10:02:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 244 millisec.)
------------------------------------------------
[ 22.541% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.180% ] Polyglot phases:  120
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.738% ] Retrieving bodies:  14
[ 10.656% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.820% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.410% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.557% ] Soot Packs:  16
[ 04.098% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "finally at the end of a method that needs to return" passed.


Running test pureJava/return;;; is not really legal
Commandline: abc -d pureJava pureJava/ReachableEmpty.java 
Abc started on Fri Jul 30 10:02:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 8 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "return;;; is not really legal" passed.


Running test new/ajc treating Throwable as checked, issuing error if not found
Commandline: abc -d new new/FalseThrowsCE.java 
Abc started on Fri Jul 30 10:02:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FalseThrowsCE... 
Abc finished on Fri Jul 30 10:02:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 249 millisec.)
------------------------------------------------
[ 21.687% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.402% ] Create polyglot compiler:  1
[ 54.217% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.418% ] Retrieving bodies:  11
[ 10.040% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.803% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.418% ] Soot Packs:  11
[ 04.016% ] Soot Writing Output:  10
================================================
PASS: new: Test "ajc treating Throwable as checked, issuing error if not found" passed.


Running test pureJava/overriding methods from object in interfaces and multiple-inheritance
Commandline: abc -d pureJava pureJava/InterfaceAndObject.java 
Abc started on Fri Jul 30 10:02:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming InterfaceAndObject... 
Transforming Root... 
Transforming C... 
Transforming C1... 
Transforming I0... 
Transforming InterfaceAndObject$1... 
Transforming I1... 
Abc finished on Fri Jul 30 10:02:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 634 millisec.)
------------------------------------------------
[ 08.675% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 76.341% ] Polyglot phases:  484
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.789% ] Retrieving bodies:  5
[ 02.839% ] Update pattern matcher:  18
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.473% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.158% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.205% ] Soot Packs:  33
[ 05.521% ] Soot Writing Output:  35
================================================
InterfaceAndObject$1@143653e
PASS: pureJava: Test "overriding methods from object in interfaces and multiple-inheritance" passed.


Running test pureJava/private fields in an outer class accessed by an inner which also extends the outer
Commandline: abc -d pureJava pureJava/PrivateFields.java 
Abc started on Fri Jul 30 10:02:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PrivateFields... 
Transforming Outer... 
Transforming Outer$Inner... 
Abc finished on Fri Jul 30 10:02:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 150 millisec.)
------------------------------------------------
[ 36.667% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 08.667% ] Polyglot phases:  13
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.667% ] Intertype Adjuster:  1
[ 03.333% ] Retrieving bodies:  5
[ 08.000% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.333% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 30.000% ] Soot Packs:  45
[ 11.333% ] Soot Writing Output:  17
================================================
PASS: pureJava: Test "private fields in an outer class accessed by an inner which also extends the outer" passed.


Running test pureJava/breaking out of a labeled block inside of an if
Commandline: abc -d pureJava pureJava/Breaks.java 
Abc started on Fri Jul 30 10:02:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Breaks... 
Abc finished on Fri Jul 30 10:02:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 235 millisec.)
------------------------------------------------
[ 23.404% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.426% ] Create polyglot compiler:  1
[ 49.787% ] Polyglot phases:  117
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.553% ] Retrieving bodies:  6
[ 10.213% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.851% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.234% ] Soot Packs:  17
[ 05.532% ] Soot Writing Output:  13
================================================
true
PASS: pureJava: Test "breaking out of a labeled block inside of an if" passed.


Running test pureJava/abstractifying a method and getting it back through super
Commandline: abc -d pureJava pureJava/Abstracts.java 
Abc started on Fri Jul 30 10:02:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming Abstracts... 
Transforming C... 
Abc finished on Fri Jul 30 10:02:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 252 millisec.)
------------------------------------------------
[ 21.825% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 44.841% ] Polyglot phases:  113
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.778% ] Retrieving bodies:  7
[ 09.524% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.984% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.397% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.317% ] Soot Packs:  26
[ 08.333% ] Soot Writing Output:  21
================================================
PASS: pureJava: Test "abstractifying a method and getting it back through super" passed.


Running test new/package protected classes becoming public
Commandline: abc -d new new/PR328.java 
Abc started on Fri Jul 30 10:02:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR328... 
Transforming Modest... 
Abc finished on Fri Jul 30 10:02:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 319 millisec.)
------------------------------------------------
[ 17.555% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.313% ] Create polyglot compiler:  1
[ 56.113% ] Polyglot phases:  179
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.389% ] Retrieving bodies:  14
[ 08.777% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.627% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.313% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.583% ] Soot Packs:  21
[ 05.329% ] Soot Writing Output:  17
================================================
PASS: new: Test "package protected classes becoming public" passed.


Running test pureJava/Packages and static classes with the same name produce compile errors.
Commandline: abc -d pureJava pureJava/PackagesAndStaticClassesWithTheSameName.java 
Abc started on Fri Jul 30 10:02:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PackagesAndStaticClassesWithTheSameName... 
Transforming PackagesAndStaticClassesWithTheSameName$java... 
Transforming PackagesAndStaticClassesWithTheSameName$java$lang... 
Transforming PackagesAndStaticClassesWithTheSameName$java$lang$Str... 
Abc finished on Fri Jul 30 10:02:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 292 millisec.)
------------------------------------------------
[ 18.836% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.192% ] Polyglot phases:  94
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.110% ] Retrieving bodies:  12
[ 08.219% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.027% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.342% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 24.315% ] Soot Packs:  71
[ 10.959% ] Soot Writing Output:  32
================================================
PASS: pureJava: Test "Packages and static classes with the same name produce compile errors." passed.


Running test pureJava/innerTypeModifiers/Inner types must generate classfiles with only Public/Default access flags.
Commandline: abc -d pureJava/innerTypeModifiers pureJava/innerTypeModifiers/pkg1/Main.java pureJava/innerTypeModifiers/pkg2/Foo.java 
Abc started on Fri Jul 30 10:02:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pkg1.Main... 
Transforming pkg2.Foo... 
Transforming pkg2.Foo$Goo... 
Transforming pkg1.Main$Noo... 
Abc finished on Fri Jul 30 10:02:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 137 millisec.)
------------------------------------------------
[ 40.146% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.730% ] Create polyglot compiler:  1
[ 17.518% ] Polyglot phases:  24
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.920% ] Retrieving bodies:  4
[ 08.759% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.460% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.730% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.409% ] Soot Packs:  17
[ 15.328% ] Soot Writing Output:  21
================================================
PASS: pureJava/innerTypeModifiers: Test "Inner types must generate classfiles with only Public/Default access flags." passed.


Running test pureJava/innerDefaultConstructors/Default constructors have same access as their enclosing type
Commandline: abc -d pureJava/innerDefaultConstructors pureJava/innerDefaultConstructors/pkg1/Main.java pureJava/innerDefaultConstructors/pkg2/Foo.java 
Abc started on Fri Jul 30 10:02:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pkg1.Main... 
Transforming pkg2.Foo... 
Transforming pkg2.Foo$Goo... 
Abc finished on Fri Jul 30 10:02:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 181 millisec.)
------------------------------------------------
[ 30.387% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.127% ] Polyglot phases:  31
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.657% ] Retrieving bodies:  3
[ 06.630% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.105% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 35.359% ] Soot Packs:  64
[ 07.735% ] Soot Writing Output:  14
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "pureJava/innerDefaultConstructors/Default constructors have same access as their enclosing type" failed


Running test pureJava/Returning primitive values matching method return type (minimal)
Commandline: abc -d pureJava pureJava/ReturnTypes.java 
Abc started on Fri Jul 30 10:02:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ReturnTypes... 
Abc finished on Fri Jul 30 10:02:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 192 millisec.)
------------------------------------------------
[ 28.646% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.521% ] Create polyglot compiler:  1
[ 46.875% ] Polyglot phases:  90
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.521% ] Intertype Adjuster:  1
[ 01.042% ] Retrieving bodies:  2
[ 12.500% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.042% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.208% ] Soot Packs:  10
[ 03.646% ] Soot Writing Output:  7
================================================
PASS: pureJava: Test "Returning primitive values matching method return type (minimal)" passed.


Running test pureJava/Flow analysis and if(true)
Commandline: abc -d pureJava pureJava/Flow.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Flow... 
Abc finished on Fri Jul 30 10:02:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 221 millisec.)
------------------------------------------------
[ 24.887% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 53.846% ] Polyglot phases:  119
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.357% ] Retrieving bodies:  3
[ 10.860% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.452% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.977% ] Soot Packs:  11
[ 03.620% ] Soot Writing Output:  8
================================================
PASS: pureJava: Test "Flow analysis and if(true)" passed.


Running test pureJava/packages and generated inner types (for I.class)
Commandline: abc -d pureJava pureJava/InterfaceAndClass.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at null: public class p.InterfaceAndClass cannot be defined in file pureJava/InterfaceAndClass.java
FAIL: Test "pureJava/packages and generated inner types (for I.class)" failed


Running test pureJava/A.this exprs match by exact type matching
Commandline: abc -d pureJava pureJava/QualifiedThisMatchesExactly.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "A.this exprs match by exact type matching" passed.


Running test pureJava/Implicit this for new inner instance must be avaliable
Commandline: abc -d pureJava pureJava/ImplicitThisMissing.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Implicit this for new inner instance must be avaliable" passed.


Running test pureJava/Inners can reference protected fields of their outer's super.
Commandline: abc -d pureJava pureJava/protectedFieldRefInInner/Main.java pureJava/protectedFieldRefInInner/p1/C.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming protectedFieldRefInInner.Main... 
Transforming protectedFieldRefInInner.Main$Inner... 
Transforming protectedFieldRefInInner.p1.C... 
Abc finished on Fri Jul 30 10:02:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 155 millisec.)
------------------------------------------------
[ 36.129% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.290% ] Polyglot phases:  33
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.871% ] Retrieving bodies:  6
[ 08.387% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.290% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.645% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.194% ] Soot Packs:  22
[ 14.194% ] Soot Writing Output:  22
================================================
InvocationTargetException while trying to run compiled class: java.lang.IllegalAccessError: tried to access field protectedFieldRefInInner.p1.C.x from class protectedFieldRefInInner.Main$Inner
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.IllegalAccessError: tried to access field protectedFieldRefInInner.p1.C.x from class protectedFieldRefInInner.Main$Inner
	at protectedFieldRefInInner.Main$Inner.foo(Main.java:6)
	at protectedFieldRefInInner.Main.main(Main.java:9)
	... 7 more
FAIL: Test "pureJava/Inners can reference protected fields of their outer's super." failed


Running test new/IOException on windows if nul used as identifier
Commandline: abc -d new new/NulIOException.java 
Abc started on Fri Jul 30 10:02:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: new: Test "IOException on windows if nul used as identifier" passed.


Running test new/NullPointerException (not compiler error) when extending non-static inner class
Commandline: abc -d new new/ExtendInnerCE.java 
Abc started on Fri Jul 30 10:02:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "NullPointerException (not compiler error) when extending non-static inner class" passed.


Running test new/compiler flags final static variable as indefinite in member assignment.
Commandline: abc -d new new/DefiniteStatic.java 
Abc started on Fri Jul 30 10:02:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming bat... 
Transforming DefiniteStatic... 
Abc finished on Fri Jul 30 10:02:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 119 millisec.)
------------------------------------------------
[ 45.378% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 11.765% ] Polyglot phases:  14
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.361% ] Retrieving bodies:  4
[ 10.084% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.681% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.840% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.605% ] Soot Packs:  15
[ 14.286% ] Soot Writing Output:  17
================================================
PASS: new: Test "compiler flags final static variable as indefinite in member assignment." passed.


Running test new/confirm no IOException on windows if nul used as identifier
Commandline: abc -d new new/NulIOException2.java 
Abc started on Fri Jul 30 10:02:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NulIOException2... 
Transforming Super... 
Abc finished on Fri Jul 30 10:02:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 229 millisec.)
------------------------------------------------
[ 37.555% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.991% ] Polyglot phases:  87
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.183% ] Retrieving bodies:  5
[ 10.044% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.873% ] Compute advice lists:  2
[ 00.437% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.114% ] Soot Packs:  14
[ 04.803% ] Soot Writing Output:  11
================================================
PASS: new: Test "confirm no IOException on windows if nul used as identifier" passed.


Running test pureJava/Primitives that special case for a constant arm should work
Commandline: abc -d pureJava pureJava/OneArmedPrimitiveTests.java 
Abc started on Fri Jul 30 10:02:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OneArmedPrimitiveTests... 
Abc finished on Fri Jul 30 10:02:37 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1971 millisec.)
------------------------------------------------
[ 02.841% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.019% ] Polyglot phases:  434
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 16.692% ] Retrieving bodies:  329
[ 01.218% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 08.422% ] Compute advice lists:  166
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.152% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 30.999% ] Soot Packs:  611
[ 17.656% ] Soot Writing Output:  348
================================================
PASS: pureJava: Test "Primitives that special case for a constant arm should work" passed.


Running test pureJava/Parenthesized true and false don't parse
Commandline: abc -d pureJava pureJava/ParenKeywords.java 
Abc started on Fri Jul 30 10:02:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ParenKeywords... 
Abc finished on Fri Jul 30 10:02:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 216 millisec.)
------------------------------------------------
[ 25.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.463% ] Create polyglot compiler:  1
[ 52.778% ] Polyglot phases:  114
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.389% ] Retrieving bodies:  3
[ 11.111% ] Update pattern matcher:  24
[ 00.463% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.463% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.093% ] Soot Packs:  11
[ 03.241% ] Soot Writing Output:  7
================================================
PASS: pureJava: Test "Parenthesized true and false don't parse" passed.


Running test pureJava/Field sets to public fields of private fields of enclosing types
Commandline: abc -d pureJava pureJava/InnerFieldRef.java 
Abc started on Fri Jul 30 10:02:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InnerFieldRef... 
Transforming Foo... 
Transforming InnerFieldRef$Inner... 
Abc finished on Fri Jul 30 10:02:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 149 millisec.)
------------------------------------------------
[ 36.913% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 01.342% ] Create polyglot compiler:  2
[ 14.765% ] Polyglot phases:  22
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.356% ] Retrieving bodies:  5
[ 08.725% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.342% ] Compute advice lists:  2
[ 00.671% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.779% ] Soot Packs:  25
[ 16.107% ] Soot Writing Output:  24
================================================
PASS: pureJava: Test "Field sets to public fields of private fields of enclosing types" passed.


Running test pureJava/Constant values should be stored with the correct type of their fields
Commandline: abc -d pureJava pureJava/ConstantValueConversion.java 
Abc started on Fri Jul 30 10:02:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConstantValueConversion... 
Abc finished on Fri Jul 30 10:02:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 135 millisec.)
------------------------------------------------
[ 65.185% ] Init. of Soot:  88
[ 00.000% ] Loading Jars:  0
[ 00.741% ] Create polyglot compiler:  1
[ 11.111% ] Polyglot phases:  15
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.741% ] Intertype Adjuster:  1
[ 00.741% ] Retrieving bodies:  1
[ 09.630% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.741% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.444% ] Soot Packs:  6
[ 06.667% ] Soot Writing Output:  9
================================================
PASS: pureJava: Test "Constant values should be stored with the correct type of their fields" passed.


Running test pureJava/Local variables in initializers should not be treated as blank final fields
Commandline: abc -d pureJava pureJava/LocalInitializerVariableNotBlank.java 
Abc started on Fri Jul 30 10:02:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalInitializerVariableNotBlank... 
Abc finished on Fri Jul 30 10:02:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 190 millisec.)
------------------------------------------------
[ 31.053% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.579% ] Polyglot phases:  79
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.684% ] Retrieving bodies:  7
[ 11.579% ] Update pattern matcher:  22
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.053% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.789% ] Soot Packs:  11
[ 05.263% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "Local variables in initializers should not be treated as blank final fields" passed.


Running test pureJava/Binops aren't allowed as update stmts in for loops
Commandline: abc -d pureJava pureJava/NonStmtInFor.java 
Abc started on Fri Jul 30 10:02:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Binops aren't allowed as update stmts in for loops" passed.


Running test pureJava/Can't avoid doing division in case of div by zero
Commandline: abc -d pureJava pureJava/DivOpMustHappen.java 
Abc started on Fri Jul 30 10:02:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming DivOpMustHappen... 
Abc finished on Fri Jul 30 10:02:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 219 millisec.)
------------------------------------------------
[ 24.658% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.457% ] Create polyglot compiler:  1
[ 39.726% ] Polyglot phases:  87
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 12.785% ] Retrieving bodies:  28
[ 12.785% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.457% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.566% ] Soot Packs:  10
[ 04.566% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "Can't avoid doing division in case of div by zero" passed.


Running test pureJava/Testing frames w/greater than FF locals and 7F incs (i.e., WIDE instruction)
Commandline: abc -d pureJava pureJava/BigFrameTest.java 
Abc started on Fri Jul 30 10:02:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BigFrameTest... 
Abc finished on Fri Jul 30 10:02:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 293 millisec.)
------------------------------------------------
[ 32.765% ] Init. of Soot:  96
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.488% ] Polyglot phases:  145
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.389% ] Retrieving bodies:  7
[ 07.850% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.683% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.754% ] Soot Packs:  11
[ 03.072% ] Soot Writing Output:  9
================================================
PASS: pureJava: Test "Testing frames w/greater than FF locals and 7F incs (i.e., WIDE instruction)" passed.


Running test pureJava/correct numeric literals
Commandline: abc -d pureJava pureJava/LiteralsCp.java 
Abc started on Fri Jul 30 10:02:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LiteralsCp... 
Abc finished on Fri Jul 30 10:02:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 287 millisec.)
------------------------------------------------
[ 19.164% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.826% ] Polyglot phases:  143
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.484% ] Retrieving bodies:  10
[ 08.362% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.742% ] Compute advice lists:  5
[ 00.348% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.362% ] Soot Packs:  24
[ 08.711% ] Soot Writing Output:  25
================================================
PASS: pureJava: Test "correct numeric literals" passed.


Running test pureJava/invalid numeric literals
Commandline: abc -d pureJava pureJava/LiteralsCf.java 
Abc started on Fri Jul 30 10:02:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 6, should be 18
Actual errors found: 
Syntax Error at pureJava/LiteralsCf.java:18,22-23: Syntax error.
Syntax Error at pureJava/LiteralsCf.java:20,23-24: Syntax error.
Syntax Error at pureJava/LiteralsCf.java:22,23-24: Syntax error.
Syntax Error at pureJava/LiteralsCf.java:29,23-33: Syntax error.
Syntax Error at pureJava/LiteralsCf.java:30,37-38: Syntax error.
Semantic Error at pureJava/LiteralsCf.java:32,8-14: Cannot assign double to int.
FAIL: Test "pureJava/invalid numeric literals" failed


Running test pureJava/inner types can't have the same simple name as an enclosing type
Commandline: abc -d pureJava pureJava/InnerNameConflictsCf.java 
Abc started on Fri Jul 30 10:02:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "inner types can't have the same simple name as an enclosing type" passed.


Running test pureJava/test + and += for strings and variously typed values
Commandline: abc -d pureJava pureJava/BigString.java 
Abc started on Fri Jul 30 10:02:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BigString... 
Abc finished on Fri Jul 30 10:02:43 BST 2004. ( 0 min. 3 sec. )
================================================
Breakdown of abc phases  (total: 3767 millisec.)
------------------------------------------------
[ 01.779% ] Init. of Soot:  67
[ 00.000% ] Loading Jars:  0
[ 00.027% ] Create polyglot compiler:  1
[ 45.421% ] Polyglot phases:  1711
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.027% ] Intertype Adjuster:  1
[ 07.592% ] Retrieving bodies:  286
[ 00.743% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.336% ] Compute advice lists:  88
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.133% ] Exceptions check:  5
[ 00.000% ] Validate jimple:  0
[ 27.714% ] Soot Packs:  1044
[ 14.229% ] Soot Writing Output:  536
================================================
PASS: pureJava: Test "test + and += for strings and variously typed values" passed.


Running test pureJava/test try/catch/finally statements
Commandline: abc -d pureJava pureJava/TryCatchFinally.java 
Abc started on Fri Jul 30 10:02:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TryCatchFinally... 
Abc finished on Fri Jul 30 10:02:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 549 millisec.)
------------------------------------------------
[ 10.383% ] Init. of Soot:  57
[ 00.182% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 62.659% ] Polyglot phases:  344
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.193% ] Retrieving bodies:  34
[ 04.736% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.275% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.182% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 08.743% ] Soot Packs:  48
[ 05.647% ] Soot Writing Output:  31
================================================
PASS: pureJava: Test "test try/catch/finally statements" passed.


Running test pureJava/local types can be bound in the signatures of other local types
Commandline: abc -d pureJava pureJava/LocalInners.java 
Abc started on Fri Jul 30 10:02:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalInners... 
Transforming LocalInners$1Local2... 
Transforming LocalInners$1Local1... 
Abc finished on Fri Jul 30 10:02:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 153 millisec.)
------------------------------------------------
[ 35.948% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.654% ] Create polyglot compiler:  1
[ 28.105% ] Polyglot phases:  43
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.614% ] Retrieving bodies:  4
[ 07.843% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.961% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.654% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.458% ] Soot Packs:  16
[ 11.765% ] Soot Writing Output:  18
================================================
PASS: pureJava: Test "local types can be bound in the signatures of other local types" passed.


Running test new/final constructor parameter causes incorrect compiler error
Commandline: abc -d new new/FinalConstructorParm.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FinalConstructorParm... 
Abc finished on Fri Jul 30 10:02:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 196 millisec.)
------------------------------------------------
[ 28.061% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 46.939% ] Polyglot phases:  92
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.041% ] Retrieving bodies:  4
[ 12.245% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.510% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.510% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.102% ] Soot Packs:  10
[ 04.592% ] Soot Writing Output:  9
================================================
PASS: new: Test "final constructor parameter causes incorrect compiler error" passed.


Running test new/Error expected for field of type void
Commandline: abc -d new new/VoidField.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: new: Test "Error expected for field of type void" passed.


Running test new/Error expected for constructor in interfaces
Commandline: abc -d new new/InterfaceConstructor.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: new: Test "Error expected for constructor in interfaces" passed.


Running test new/class name for identifier as String should provoke error
Commandline: abc -d new new/PR558.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "class name for identifier as String should provoke error" passed.


Running test new/cyclic interface inheritance not detected if no classes implement the interfaces
Commandline: abc -d new new/CyclicInterfaceInheritance.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "cyclic interface inheritance not detected if no classes implement the interfaces" passed.


Running test new/cyclic class inheritance
Commandline: abc -d new new/CyclicClassInheritance.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: new: Test "cyclic class inheritance" passed.


Running test pureJava/Type names are not expressions on their own
Commandline: abc -d pureJava pureJava/TypeExprErrors.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 22 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Type names are not expressions on their own" passed.


Running test pureJava/nameConflicts/type and package name conflicts are resolved happily (1a)
Commandline: abc -d pureJava/nameConflicts pureJava/nameConflicts/p1/Main1.java pureJava/nameConflicts/p1/Foo.java pureJava/nameConflicts/p1/p2.java 
Abc started on Fri Jul 30 10:02:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.Main1... 
Transforming p1.p2... 
Transforming p1.p2$Foo... 
Transforming p1.Foo... 
Abc finished on Fri Jul 30 10:02:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 303 millisec.)
------------------------------------------------
[ 17.822% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.330% ] Create polyglot compiler:  1
[ 39.604% ] Polyglot phases:  120
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.650% ] Retrieving bodies:  5
[ 07.921% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.660% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 16.832% ] Weaving advice:  51
[ 00.330% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.271% ] Soot Packs:  19
[ 08.581% ] Soot Writing Output:  26
================================================
PASS: pureJava/nameConflicts: Test "type and package name conflicts are resolved happily (1a)" passed.


Running test pureJava/nameConflicts/(fails in USEJAVAC) type and package name conflicts are resolved happily (1b)
Commandline: abc -d pureJava/nameConflicts pureJava/nameConflicts/p1.java pureJava/nameConflicts/p1/p2/Foo.java 
Abc started on Fri Jul 30 10:02:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.p2.Foo... 
Transforming p1... 
Transforming p1$Foo... 
Abc finished on Fri Jul 30 10:02:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 134 millisec.)
------------------------------------------------
[ 42.537% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.746% ] Create polyglot compiler:  1
[ 24.627% ] Polyglot phases:  33
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.493% ] Retrieving bodies:  2
[ 08.955% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.493% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.701% ] Soot Packs:  13
[ 10.448% ] Soot Writing Output:  14
================================================
Commandline: abc -d pureJava/nameConflicts pureJava/nameConflicts/p1/Main1.java pureJava/nameConflicts/p1/Foo.java pureJava/nameConflicts/p1/p2.java 
Abc started on Fri Jul 30 10:02:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.Main1... 
Transforming p1.Foo... 
Transforming p1.p2... 
Transforming p1.p2$Foo... 
Abc finished on Fri Jul 30 10:02:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 544 millisec.)
------------------------------------------------
[ 40.809% ] Init. of Soot:  222
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.221% ] Polyglot phases:  246
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.919% ] Retrieving bodies:  5
[ 04.779% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.368% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.184% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.860% ] Soot Packs:  21
[ 03.860% ] Soot Writing Output:  21
================================================
PASS: pureJava/nameConflicts: Test "(fails in USEJAVAC) type and package name conflicts are resolved happily (1b)" passed.


Running test pureJava/nameConflicts/type and package name conflicts are resolved happily (2)
Commandline: abc -d pureJava/nameConflicts pureJava/nameConflicts/p1/Main2.java pureJava/nameConflicts/p1/p2/Foo.java 
Abc started on Fri Jul 30 10:02:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.p2.Foo... 
Transforming p1.Main2... 
Abc finished on Fri Jul 30 10:02:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 207 millisec.)
------------------------------------------------
[ 27.536% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.483% ] Create polyglot compiler:  1
[ 47.343% ] Polyglot phases:  98
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.449% ] Retrieving bodies:  3
[ 11.594% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.483% ] Compute advice lists:  1
[ 00.483% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.314% ] Soot Packs:  11
[ 05.314% ] Soot Writing Output:  11
================================================
PASS: pureJava/nameConflicts: Test "type and package name conflicts are resolved happily (2)" passed.


Running test pureJava/nameConflicts/type and package name conflicts caught as errors (1)
Commandline: abc -d pureJava/nameConflicts pureJava/nameConflicts/p1/p2.java pureJava/nameConflicts/p1/Main1.java pureJava/nameConflicts/p1/Foo.java pureJava/nameConflicts/p1/p2/Foo.java 
Abc started on Fri Jul 30 10:02:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.p2.Foo... 
Transforming p1.Main1... 
Transforming p1.Foo... 
Transforming p1.p2... 
Transforming p1.p2$Foo... 
Abc finished on Fri Jul 30 10:02:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 283 millisec.)
------------------------------------------------
[ 34.629% ] Init. of Soot:  98
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.396% ] Polyglot phases:  103
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.120% ] Retrieving bodies:  6
[ 08.127% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.060% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.353% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.481% ] Soot Packs:  24
[ 08.834% ] Soot Writing Output:  25
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "pureJava/nameConflicts/type and package name conflicts caught as errors (1)" failed


Running test pureJava/flow analysis where final variable set in another constructor
Commandline: abc -d pureJava pureJava/ConstructorFlow.java 
Abc started on Fri Jul 30 10:02:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConstructorFlow... 
Transforming ConstructorFlow$1... 
Abc finished on Fri Jul 30 10:02:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 286 millisec.)
------------------------------------------------
[ 19.231% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 51.049% ] Polyglot phases:  146
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.895% ] Retrieving bodies:  14
[ 09.091% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.049% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.350% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.343% ] Soot Packs:  21
[ 06.993% ] Soot Writing Output:  20
================================================
PASS: pureJava: Test "flow analysis where final variable set in another constructor" passed.


Running test new/Can construct inner classes using qualified expressions
Commandline: abc -d new new/PR584.java 
Abc started on Fri Jul 30 10:02:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming PR584... 
Transforming PR584$1... 
Transforming Foo$Test... 
Transforming Foo$StaticTest... 
Abc finished on Fri Jul 30 10:02:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 348 millisec.)
------------------------------------------------
[ 15.805% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 48.563% ] Polyglot phases:  169
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.448% ] Retrieving bodies:  12
[ 06.897% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.437% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.287% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.920% ] Soot Packs:  38
[ 12.644% ] Soot Writing Output:  44
================================================
PASS: new: Test "Can construct inner classes using qualified expressions" passed.


Running test new/protectedStatic/subclass unable to access protected static methods using type-qualified references
Commandline: abc -d new/protectedStatic new/protectedStatic/SubClass.java new/protectedStatic/pack/SuperClass.java 
Abc started on Fri Jul 30 10:02:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pack.SuperClass... 
Transforming SubClass... 
Abc finished on Fri Jul 30 10:02:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 362 millisec.)
------------------------------------------------
[ 15.470% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.254% ] Polyglot phases:  124
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.276% ] Intertype Adjuster:  1
[ 05.249% ] Retrieving bodies:  19
[ 16.298% ] Update pattern matcher:  59
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.486% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.276% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.707% ] Soot Packs:  46
[ 12.983% ] Soot Writing Output:  47
================================================
PASS: new/protectedStatic: Test "subclass unable to access protected static methods using type-qualified references" passed.


Running test new/Undefined inner class constructor
Commandline: abc -d new new/UndefinedInner.java 
Abc started on Fri Jul 30 10:02:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Undefined inner class constructor" passed.


Running test pureJava/try statements work sorta like scoped items for exception flow control
Commandline: abc -d pureJava pureJava/TryWorksLikeEnvironment.java 
Abc started on Fri Jul 30 10:02:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TryWorksLikeEnvironment... 
Abc finished on Fri Jul 30 10:02:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 200 millisec.)
------------------------------------------------
[ 27.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.500% ] Create polyglot compiler:  1
[ 44.500% ] Polyglot phases:  89
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.500% ] Retrieving bodies:  15
[ 07.000% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.000% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.500% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 07.000% ] Soot Packs:  14
[ 05.000% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "try statements work sorta like scoped items for exception flow control" passed.


Running test pureJava/qualified this must work exactly, not based on subtypes
Commandline: abc -d pureJava pureJava/QualifiedThisExactness.java 
Abc started on Fri Jul 30 10:02:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "qualified this must work exactly, not based on subtypes" passed.


Running test new/packagePrefix/classes that are package prefixes are illegal
Commandline: abc -d new/packagePrefix new/packagePrefix/p/prefix.java new/packagePrefix/p/prefix/SomeClass.java 
Abc started on Fri Jul 30 10:02:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line -1, but is on line 2.
Errors found during this compilation:
Semantic Error at new/packagePrefix/p/prefix/SomeClass.java: Class "SomeClass" not found in scope of p.prefix
FAIL: Test "new/packagePrefix/classes that are package prefixes are illegal" failed


Running test new/introTypeMissing/valid type expressions for introduced type testing
Commandline: abc -d new/introTypeMissing new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:02:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming Util... 
Transforming PureJava... 
Transforming PureJava$Result... 
Transforming TargetClass... 
Transforming TargetClass$InnerClass... 
Transforming PureJava$1... 
Transforming PureJava$2... 
Abc finished on Fri Jul 30 10:02:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 586 millisec.)
------------------------------------------------
[ 09.386% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.171% ] Create polyglot compiler:  1
[ 34.300% ] Polyglot phases:  201
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.171% ] Intertype Adjuster:  1
[ 06.314% ] Retrieving bodies:  37
[ 04.096% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.730% ] Compute advice lists:  16
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.171% ] Weaving advice:  1
[ 00.171% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.451% ] Soot Packs:  155
[ 16.041% ] Soot Writing Output:  94
================================================
PASS: new/introTypeMissing: Test "valid type expressions for introduced type testing" passed.


Running test new/introTypeMissing/CF expected when enclosing class superclass used as this qualifier in inner class
Commandline: abc -d new/introTypeMissing new/introTypeMissing/TargetClassCF.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:02:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: new/introTypeMissing: Test "CF expected when enclosing class superclass used as this qualifier in inner class" passed.


Running test new/introTypeMissing/enclosing class may be used as this qualifier in inner class
Commandline: abc -d new/introTypeMissing new/introTypeMissing/TargetClassCP.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:02:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass... 
Transforming SubClass... 
Transforming TargetClass$InnerClass... 
Transforming SubClass$inner... 
Transforming TargetClassCP... 
Transforming Util... 
Abc finished on Fri Jul 30 10:02:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 390 millisec.)
------------------------------------------------
[ 14.872% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 50.513% ] Polyglot phases:  197
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.590% ] Retrieving bodies:  14
[ 06.154% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.538% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.256% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.538% ] Soot Packs:  45
[ 11.538% ] Soot Writing Output:  45
================================================
PASS: new/introTypeMissing: Test "enclosing class may be used as this qualifier in inner class" passed.


Running test new/PR591 compiler error expected when directly calling unimplemented abstract method using super
Commandline: abc -d new new/AbstractMethodCall.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "PR591 compiler error expected when directly calling unimplemented abstract method using super" passed.


Running test pureJava/suggested by Jacks 15.28-qualified-namestr tests
Commandline: abc -d pureJava pureJava/NonConstants.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "suggested by Jacks 15.28-qualified-namestr tests" passed.


Running test pureJava/nested finally blocks have interesting frame location problems
Commandline: abc -d pureJava pureJava/NestedFinally.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at pureJava/NestedFinally.java:5,18-35: Missing return statement.
FAIL: Test "pureJava/nested finally blocks have interesting frame location problems" failed


Running test pureJava/suggested by jacks 3.7-15 all comments must be closed
Commandline: abc -d pureJava pureJava/OpenComment.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "suggested by jacks 3.7-15 all comments must be closed" passed.


Running test pureJava/nested synchronized blocks have interesting frame location problems
Commandline: abc -d pureJava pureJava/NestedSynchronized.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NestedSynchronized... 
Abc finished on Fri Jul 30 10:02:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 162 millisec.)
------------------------------------------------
[ 53.086% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.617% ] Create polyglot compiler:  1
[ 09.259% ] Polyglot phases:  15
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 10.494% ] Retrieving bodies:  17
[ 08.642% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.235% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.617% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.877% ] Soot Packs:  16
[ 06.173% ] Soot Writing Output:  10
================================================
PASS: pureJava: Test "nested synchronized blocks have interesting frame location problems" passed.


Running test new/classaccess/package class access not enforced outside of package
Commandline: abc -d new/classaccess new/classaccess/main/Main.java new/classaccess/pack1/Target.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new/classaccess: Test "package class access not enforced outside of package" passed.


Running test new/expecting CE for ambiguous reference
Commandline: abc -d new new/AmbiguousClassReference.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "expecting CE for ambiguous reference" passed.


Running test new/try without catch or finally
Commandline: abc -d new new/TryNoCatchCE.java 
Abc started on Fri Jul 30 10:02:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Unable to recover from previous errors.
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: new: Test "try without catch or finally" passed.


Running test new/invalid floating-point constant
Commandline: abc -d new new/ParsingFloatCE.java 
Abc started on Fri Jul 30 10:02:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "invalid floating-point constant" passed.


Running test pureJava/anonymous inner classes with inner types
Commandline: abc -d pureJava pureJava/AnonymousWithInner.java 
Abc started on Fri Jul 30 10:02:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AnonymousWithInner... 
Transforming AnonymousWithInner$1... 
Transforming AnonymousWithInner$1$Inner... 
Abc finished on Fri Jul 30 10:02:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 312 millisec.)
------------------------------------------------
[ 20.513% ] Init. of Soot:  64
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.372% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.321% ] Intertype Adjuster:  1
[ 02.885% ] Retrieving bodies:  9
[ 07.692% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.603% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.321% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 24.679% ] Soot Packs:  77
[ 09.615% ] Soot Writing Output:  30
================================================
PASS: pureJava: Test "anonymous inner classes with inner types" passed.


Running test pureJava/qualified super call expr
Commandline: abc -d pureJava pureJava/QualifiedSuperCall.java 
Abc started on Fri Jul 30 10:02:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PackageSuper... 
Transforming QualifiedSuperCall... 
Transforming QualifiedSuperCall$Inner... 
Transforming QualifiedSuperCall$InnerSuper... 
Abc finished on Fri Jul 30 10:02:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 290 millisec.)
------------------------------------------------
[ 18.621% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.552% ] Polyglot phases:  106
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.345% ] Intertype Adjuster:  1
[ 04.483% ] Retrieving bodies:  13
[ 08.621% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.069% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.345% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.828% ] Soot Packs:  43
[ 14.138% ] Soot Writing Output:  41
================================================
PASS: pureJava: Test "qualified super call expr" passed.


Running test new/subaspects/concrete aspect unable to access abstract package-private method in parent for overriding
Commandline: abc -d new/subaspects new/subaspects/parent/ParentMethodCE.java new/subaspects/child/ChildMethodCE.java 
Abc started on Fri Jul 30 10:02:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new/subaspects: Test "concrete aspect unable to access abstract package-private method in parent for overriding" passed.


Running test new/super reference used to disambiguate names of different but compatible types
Commandline: abc -d new new/SuperDisambiguatingType.java 
Abc started on Fri Jul 30 10:02:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CClass... 
Transforming I... 
Transforming C... 
Transforming IClass... 
Transforming SuperDisambiguatingType... 
Transforming Super... 
Transforming Sub... 
Abc finished on Fri Jul 30 10:02:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 415 millisec.)
------------------------------------------------
[ 13.012% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.952% ] Polyglot phases:  116
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.241% ] Intertype Adjuster:  1
[ 03.855% ] Retrieving bodies:  16
[ 05.783% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.687% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.482% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 33.012% ] Soot Packs:  137
[ 13.976% ] Soot Writing Output:  58
================================================
PASS: new: Test "super reference used to disambiguate names of different but compatible types" passed.


Running test pureJava/anonymous explicit inner constructors
Commandline: abc -d pureJava pureJava/QualifiedNewCP.java 
Abc started on Fri Jul 30 10:02:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming Base... 
Transforming QualifiedNewCP... 
Transforming QualifiedNewCP$1... 
Transforming QualifiedNewCP$2... 
Transforming Base$AbstractInner... 
Transforming Base$Inner... 
Abc finished on Fri Jul 30 10:02:52 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1312 millisec.)
------------------------------------------------
[ 04.192% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 03.049% ] Polyglot phases:  40
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.838% ] Retrieving bodies:  11
[ 00.991% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.381% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.076% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.430% ] Soot Packs:  45
[ 87.043% ] Soot Writing Output:  1142
================================================
m
mi
helper
mi
PASS: pureJava: Test "anonymous explicit inner constructors" passed.


Running test pureJava/interfaces with non-explicitly static inner classes
Commandline: abc -d pureJava pureJava/InterfaceAndInnerHelper.java 
Abc started on Fri Jul 30 10:02:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InterfaceAndInnerHelper... 
Transforming InterfaceAndInnerHelper$C... 
Abc finished on Fri Jul 30 10:02:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 99 millisec.)
------------------------------------------------
[ 55.556% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 01.010% ] Create polyglot compiler:  1
[ 15.152% ] Polyglot phases:  15
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 01.010% ] Intertype Adjuster:  1
[ 00.000% ] Retrieving bodies:  0
[ 12.121% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.010% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.010% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.051% ] Soot Packs:  5
[ 08.081% ] Soot Writing Output:  8
================================================
Commandline: abc -cp /usr/local/src/abc-dev/lib/abc-complete.jar:/usr/local/src/abc-dev/lib/abc-testing.jar:/usr/local/src/abc-dev/lib/abc-runtime.jar:pureJava -d pureJava pureJava/InterfaceAndInner.java 
Abc started on Fri Jul 30 10:02:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InterfaceAndInner... 
Abc finished on Fri Jul 30 10:02:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 266 millisec.)
------------------------------------------------
[ 22.180% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.481% ] Polyglot phases:  113
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.504% ] Retrieving bodies:  4
[ 26.316% ] Update pattern matcher:  70
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.752% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.383% ] Soot Packs:  9
[ 03.383% ] Soot Writing Output:  9
================================================
PASS: pureJava: Test "interfaces with non-explicitly static inner classes" passed.


Running test pureJava/Overruning the lineStarts buffer, DO NOT EDIT THIS FILE!!!!
Commandline: abc -d pureJava pureJava/AJError.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AJError... 
Abc finished on Fri Jul 30 10:02:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 91 millisec.)
------------------------------------------------
[ 59.341% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 13.187% ] Polyglot phases:  12
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.198% ] Retrieving bodies:  2
[ 13.187% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.099% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 06.593% ] Soot Packs:  6
[ 04.396% ] Soot Writing Output:  4
================================================
PASS: pureJava: Test "Overruning the lineStarts buffer, DO NOT EDIT THIS FILE!!!!" passed.


Running test new/no CE for unambiguous type reference
Commandline: abc -d new new/UnambiguousClassReference3CP.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming UnambiguousClassReference3CP... 
Abc finished on Fri Jul 30 10:02:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 268 millisec.)
------------------------------------------------
[ 21.642% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.075% ] Polyglot phases:  94
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.373% ] Intertype Adjuster:  1
[ 01.119% ] Retrieving bodies:  3
[ 34.701% ] Update pattern matcher:  93
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.373% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.373% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 02.985% ] Soot Packs:  8
[ 03.358% ] Soot Writing Output:  9
================================================
PASS: new: Test "no CE for unambiguous type reference" passed.


Running test new/CE for ambiguous type reference (imports)
Commandline: abc -d new new/AmbiguousClassReference2CE.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "CE for ambiguous type reference (imports)" passed.


Running test new/CE for ambiguous type reference (two type declarations)
Commandline: abc -d new new/AmbiguousClassReference3CE.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "CE for ambiguous type reference (two type declarations)" passed.


Running test new/CE for ambiguous type reference (two inner types)
Commandline: abc -d new new/AmbiguousClassReference4CE.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "CE for ambiguous type reference (two inner types)" passed.


Running test new/final assignment in loop
Commandline: abc -d new new/FinalInLoop.java 
Abc started on Fri Jul 30 10:02:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FinalInLoop... 
Abc finished on Fri Jul 30 10:02:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 217 millisec.)
------------------------------------------------
[ 32.719% ] Init. of Soot:  71
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.622% ] Polyglot phases:  99
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.382% ] Retrieving bodies:  3
[ 12.442% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.461% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.147% ] Soot Packs:  9
[ 03.226% ] Soot Writing Output:  7
================================================
PASS: new: Test "final assignment in loop" passed.


Running test pureJava/private super access in inners
Commandline: abc -d pureJava pureJava/PrivateSuperInnerAccess.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PrivateSuperInnerAccess... 
Transforming Outer... 
Transforming Outer$B... 
Transforming Outer$C... 
Abc finished on Fri Jul 30 10:02:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 171 millisec.)
------------------------------------------------
[ 32.164% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.585% ] Create polyglot compiler:  1
[ 11.111% ] Polyglot phases:  19
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.509% ] Retrieving bodies:  6
[ 07.602% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.754% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.585% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.450% ] Soot Packs:  23
[ 29.240% ] Soot Writing Output:  50
================================================
InvocationTargetException while trying to run compiled class: java.lang.IllegalAccessError: tried to access field Outer$B.x from class Outer$C
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.IllegalAccessError: tried to access field Outer$B.x from class Outer$C
	at Outer$C.foo(PrivateSuperInnerAccess.java:14)
	at PrivateSuperInnerAccess.main(PrivateSuperInnerAccess.java:4)
	... 7 more
FAIL: Test "pureJava/private super access in inners" failed


Running test pureJava/nested interface does not require new qualifier (8)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier8CE.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (8)" passed.


Running test pureJava/nested interface does not require new qualifier (9)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier9CE.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (9)" passed.


Running test pureJava/nested interface does not require new qualifier (10)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier10CE.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (10)" passed.


Running test pureJava/nested interface does not require new qualifier (14)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier14CE.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (14)" passed.


Running test pureJava/nested interface does not require new qualifier (15)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier15CE.java 
Abc started on Fri Jul 30 10:02:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (15)" passed.


Running test pureJava/nested interface does not require new qualifier (16)
Commandline: abc -d pureJava pureJava/InvalidNewQualifier16CE.java 
Abc started on Fri Jul 30 10:02:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "nested interface does not require new qualifier (16)" passed.


Running test pureJava/Operands work correctly
Commandline: abc -d pureJava pureJava/Ops.java 
Abc started on Fri Jul 30 10:02:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Ops... 
Abc finished on Fri Jul 30 10:02:57 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1970 millisec.)
------------------------------------------------
[ 02.843% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.244% ] Polyglot phases:  714
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.670% ] Retrieving bodies:  92
[ 01.269% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.335% ] Compute advice lists:  46
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.152% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 37.817% ] Soot Packs:  745
[ 14.670% ] Soot Writing Output:  289
================================================
PASS: pureJava: Test "Operands work correctly" passed.


Running test errors/reasonable error for crosscut reference with no formals specified
Commandline: abc -d errors errors/NoFormalsCrosscut.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "reasonable error for crosscut reference with no formals specified" passed.


Running test errors/reasonable error for introduction on type whose source isn't found
Commandline: abc -d errors errors/NoSource.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "reasonable error for introduction on type whose source isn't found" passed.


Running test errors/check that constructor name's match the enclosing type
Commandline: abc -d errors errors/BadConstructorName.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "check that constructor name's match the enclosing type" passed.


Running test errors/handle errors in crosscut designators, insist that they end with a semicolon
Commandline: abc -d errors errors/BadDesignator.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "handle errors in crosscut designators, insist that they end with a semicolon" passed.


Running test errors/errors for not applicable or accessible methods
Commandline: abc -d errors errors/MethodsNotFound.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "errors for not applicable or accessible methods" passed.


Running test errors/try to return from a before, after, after throwing and after returning
Commandline: abc -d errors errors/InvalidReturn.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "try to return from a before, after, after throwing and after returning" passed.


Running test errors/the designator has a wildcard for method name but no return type specified
Commandline: abc -d errors errors/NoReturnTypeInDesignator.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "the designator has a wildcard for method name but no return type specified" passed.


Running test errors/the designator for the introduction has no type after the | charcter
Commandline: abc -d errors errors/BadIntroductionDesignator.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "the designator for the introduction has no type after the | charcter" passed.


Running test errors/crosscut signature does not match
Commandline: abc -d errors errors/BadCCutSig.java 
Abc started on Fri Jul 30 10:02:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "crosscut signature does not match" passed.


Running test errors/proper exit conditions when errors fall through to javac
Commandline: abc -d errors errors/FromJavac.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "proper exit conditions when errors fall through to javac" passed.


Running test errors/mismatched parens on advice (wasn't binding Tester)
Commandline: abc -d errors errors/MismatchedParens.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 5, should be 4
Actual errors found: 
Syntax Error at null: Couldn't repair and continue parse
Syntax Error at null: Unable to recover from previous errors.
Syntax Error at null: Couldn't repair and continue parse
Lexical Error at errors/MismatchedParens.java:17,0-1: Illegal character "}"
Syntax Error at errors/MismatchedParens.java:17: Unexpected end of file.
FAIL: Test "errors/mismatched parens on advice (wasn't binding Tester)" failed


Running test errors/Non-static advice silently ignored
Commandline: abc -d errors errors/BadPointcutName.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Non-static advice silently ignored" passed.


Running test errors/import statement within class body crashes compiler
Commandline: abc -d errors errors/ImportWithinClassBody.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "import statement within class body crashes compiler" passed.


Running test errors/extra closing brace
Commandline: abc -d errors errors/ExtraClosingBrace.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "extra closing brace" passed.


Running test errors/decent errors for around return type not matching target point
Commandline: abc -d errors errors/AroundReturnType.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 4
Actual errors found: 
Semantic Error at AroundReturnType.java:3,9-31: Can't apply around advice with non-object non-void return type to a void shadow***  Shadow type: null_type Advice Type: java.lang.Integer ShadowMatch: abc.weaving.matching.ExecutionShadowMatch@c77c3b Type: abc.weaving.matching.ExecutionShadowMatch
Semantic Error at AroundReturnType.java:7,9-19: Can't apply around advice with non-object non-void return type to a void shadow***  Shadow type: null_type Advice Type: java.lang.Integer ShadowMatch: abc.weaving.matching.ExecutionShadowMatch@12c81aa Type: abc.weaving.matching.ExecutionShadowMatch
Semantic Error at AroundReturnType.java:7,36-39: Can't apply around advice with void return type to a non void shadow.***  Shadow type: java.lang.Integer Advice Type: void ShadowMatch: abc.weaving.matching.MethodCallShadowMatch@175a57e Type: abc.weaving.matching.MethodCallShadowMatch
FAIL: Test "errors/decent errors for around return type not matching target point" failed


Running test errors/eachobject: can't call new on an aspect of
Commandline: abc -d errors errors/CantCallConstructorOnAspects.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "eachobject: can't call new on an aspect of" passed.


Running test errors/eachobject: only zero-argument constructors allowed in an aspect
Commandline: abc -d errors errors/AspectsCantHaveYesArgumentConstructors.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "eachobject: only zero-argument constructors allowed in an aspect" passed.


Running test errors/eachobject: can't extend a concrete aspect
Commandline: abc -d errors errors/SubAspectsCantExtendNonAbstractAspects.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "eachobject: can't extend a concrete aspect" passed.


Running test errors/instanceof used without a class
Commandline: abc -d errors errors/InstanceofWithoutClass.java 
Abc started on Fri Jul 30 10:02:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "instanceof used without a class" passed.


Running test errors/wildcard used for returns clause
Commandline: abc -d errors errors/WildcardForReturns.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "wildcard used for returns clause" passed.


Running test errors/no return statement in around advice
Commandline: abc -d errors errors/NoReturnStatement.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "no return statement in around advice" passed.


Running test errors/inner aspects must be static (no longer matches PR#286)
Commandline: abc -d errors errors/AbstractAspectOf.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "inner aspects must be static (no longer matches PR#286)" passed.


Running test errors/Casting class declarations as interfaces
Commandline: abc -d errors errors/InterfaceCast.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Casting class declarations as interfaces" passed.


Running test errors/omits a variable name and crashes with a null pointer
Commandline: abc -d errors errors/BindingNullPointer.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "omits a variable name and crashes with a null pointer" passed.


Running test errors/Not generating an error for using new as a method name
Commandline: abc -d errors errors/New.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Not generating an error for using new as a method name" passed.


Running test errors/ClassCastException on the int literal
Commandline: abc -d errors errors/IntLiteral.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "ClassCastException on the int literal" passed.


Running test new/Wrong strictfp keyword usage in interface function prototype [TODO: move to errors]
Commandline: abc -d new new/StrictFpCErr1.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "Wrong strictfp keyword usage in interface function prototype [TODO: move to errors]" passed.


Running test new/Wrong strictfp keyword usage in field declaration [TODO: move to errors]
Commandline: abc -d new new/StrictFpCErr2.java 
Abc started on Fri Jul 30 10:02:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Wrong strictfp keyword usage in field declaration [TODO: move to errors]" passed.


Running test new/Wrong strictfp keyword usage in constructor declaration [TODO: move to errors]
Commandline: abc -d new new/StrictFpCErr3.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Wrong strictfp keyword usage in constructor declaration [TODO: move to errors]" passed.


Running test errors/Incorrect static casts to primitively foldable arguments should not crash the compiler.
Commandline: abc -d errors errors/BadStaticCast.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Incorrect static casts to primitively foldable arguments should not crash the compiler." passed.


Running test errors/Dominates with commas should signal an error.
Commandline: abc -d errors errors/DominatesWithCommas.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Dominates with commas should signal an error." passed.


Running test errors/Accessing instance fields and instance methods statically.
Commandline: abc -d errors errors/AccessingInstanceFieldsStatically.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 7 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Accessing instance fields and instance methods statically." passed.


Running test errors/stack overflow with recursive crosscut specifier
Commandline: abc -d errors errors/RecursiveCCutSpecifier.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "stack overflow with recursive crosscut specifier" passed.


Running test errors/Throwing a NullPointerException when formals can't be bound in named pointcut
Commandline: abc -d errors errors/BadFormalsToCalls.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Throwing a NullPointerException when formals can't be bound in named pointcut" passed.


Running test errors/disallow defining more than one pointcut with the same name
Commandline: abc -d errors errors/OverloadedPointcuts.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "disallow defining more than one pointcut with the same name" passed.


Running test errors/pre 0.7 introduction form outside aspect body causes an EmptyStackException
Commandline: abc -d errors errors/BadIntroduction.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "pre 0.7 introduction form outside aspect body causes an EmptyStackException" passed.


Running test errors/a class can't extend an aspect
Commandline: abc -d errors errors/ClassExtendingAspect.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "a class can't extend an aspect" passed.


Running test errors/a before() clause at the class-level causes an EmptyStackException
Commandline: abc -d errors errors/TopLevelBefore.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "a before() clause at the class-level causes an EmptyStackException" passed.


Running test errors/an after() clause at the class-level causes an EmptyStackException
Commandline: abc -d errors errors/TopLevelAfter.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "an after() clause at the class-level causes an EmptyStackException" passed.


Running test errors/an around() clause at the class-level causes an EmptyStackException
Commandline: abc -d errors errors/TopLevelAround.java 
Abc started on Fri Jul 30 10:03:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "an around() clause at the class-level causes an EmptyStackException" passed.


Running test errors/Crashes when a cast is within another cast
Commandline: abc -d errors errors/CastInCast.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when a cast is within another cast" passed.


Running test errors/Crashes when a cast of the form )int) appears
Commandline: abc -d errors errors/BadCast.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when a cast of the form )int) appears" passed.


Running test errors/Crashes when the closing brace is reversed
Commandline: abc -d errors errors/ClosingBrace.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Unable to recover from previous errors.
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when the closing brace is reversed" passed.


Running test errors/Crashes when a method name is missing in a call -- e.g. 'System.out.();'
Commandline: abc -d errors errors/NoMethodName.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when a method name is missing in a call -- e.g. 'System.out.();'" passed.


Running test errors/Crashes when a bad r-value appears.
Commandline: abc -d errors errors/BadValue.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when a bad r-value appears." passed.


Running test errors/Two underscores as a variables causes a crash
Commandline: abc -d errors errors/BadVar.java 
Abc started on Fri Jul 30 10:03:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Two underscores as a variables causes a crash" passed.


Running test errors/Crashes when assigning to a final static in an intializer and declaration
Commandline: abc -d errors errors/FinalStatic.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when assigning to a final static in an intializer and declaration" passed.


Running test errors/Crashes when two dots appear instead of one
Commandline: abc -d errors errors/TwoDots.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when two dots appear instead of one" passed.


Running test errors/Crashes when there're stray dots
Commandline: abc -d errors errors/StrayDot.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 7 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Crashes when there're stray dots" passed.


Running test errors/Stray characters cause a crash
Commandline: abc -d errors errors/StraySlash.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Stray characters cause a crash" passed.


Running test errors/Colon instead of a semi-colon causes a crash
Commandline: abc -d errors errors/Colon.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Colon instead of a semi-colon causes a crash" passed.


Running test errors/type error in initializer caught by ajc, not javac
Commandline: abc -d errors errors/ArrayInitializerType.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "type error in initializer caught by ajc, not javac" passed.


Running test errors/Circular inheritance with classes causes a stack overflow.
Commandline: abc -d errors errors/CircularExtends.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Circular inheritance with classes causes a stack overflow." passed.


Running test errors/Doesn't detect cyclic inheritance of aspects.
Commandline: abc -d errors errors/CircularExtendsAspect.java 
Abc started on Fri Jul 30 10:03:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Doesn't detect cyclic inheritance of aspects." passed.


Running test errors/Binds the pointcut formals to member variables instead of pointcut formals.
Commandline: abc -d errors -Xlint:warning errors/PointcutFormals.java 
*** Option -Xlint:warning ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Binds the pointcut formals to member variables instead of pointcut formals." passed.


Running test errors/ambiguous formal in formals pattern
Commandline: abc -d errors errors/AmbiguousFormal.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "ambiguous formal in formals pattern" passed.


Running test errors/Missing ;
Commandline: abc -d errors errors/PR405.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Unable to recover from previous errors.
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Missing ;" passed.


Running test errors/cast expressions should not allow casts between ifaces and array types
Commandline: abc -d errors errors/InterfaceArrayCast.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "cast expressions should not allow casts between ifaces and array types" passed.


Running test errors/parsing errors for various bad forms of NewArrayExprs.
Commandline: abc -d errors errors/BadNewArrayExprs.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "parsing errors for various bad forms of NewArrayExprs." passed.


Running test errors/good error for field name instead of type name
Commandline: abc -d errors errors/BadTypeName.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "good error for field name instead of type name" passed.


Running test errors/good error for bad field and inner class references
Commandline: abc -d errors errors/BadReferences.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at errors/BadReferences.java:5,16-23: Member type "Inner" is ambiguous; it is defined in both I1 and I2.
FAIL: Test "errors/good error for bad field and inner class references" failed


Running test errors/errors in aspect inheritance - 1
Commandline: abc -d errors errors/AspectInheritance1.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "errors in aspect inheritance - 1" passed.


Running test errors/errors in aspect inheritance - 2
Commandline: abc -d errors errors/AspectInheritance2.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 6 errors, which were matched and verified against the expected errors.
PASS: errors: Test "errors in aspect inheritance - 2" passed.


Running test errors/errors in aspect inheritance - 3
Commandline: abc -d errors errors/AspectInheritance3.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "errors in aspect inheritance - 3" passed.


Running test errors/errors in aspect inheritance - 4
Commandline: abc -d errors errors/AspectInheritance4.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "errors in aspect inheritance - 4" passed.


Running test errors/Implementing a non-interface used to crash the compiler.
Commandline: abc -d errors errors/PR333.java 
Abc started on Fri Jul 30 10:03:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Implementing a non-interface used to crash the compiler." passed.


Running test errors/circular dominates leading to irresolvable advice precedence
Commandline: abc -d errors errors/CircularDominates.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 3
Actual errors found: 
Semantic Error at null: Precedence conflict
FAIL: Test "errors/circular dominates leading to irresolvable advice precedence" failed


Running test errors/Should issue an error for using 'class' instead of 'aspect'
Commandline: abc -d errors errors/NoAspect.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Should issue an error for using 'class' instead of 'aspect'" passed.


Running test errors/Should signal an error when we need an exposed value but don't provide it
Commandline: abc -d errors errors/MissingExposure.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Should signal an error when we need an exposed value but don't provide it" passed.


Running test errors/StackOverFlowException with circular +implements's.
Commandline: abc -d errors errors/CircularPlusImplementsIntros.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "StackOverFlowException with circular +implements's." passed.


Running test errors/Introducing protected methods is causing a crash
Commandline: abc -d errors errors/ProtectedIntro.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Introducing protected methods is causing a crash" passed.


Running test errors/Introducing protected fields is causing a crash
Commandline: abc -d errors errors/ProtectedFieldIntro.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Introducing protected fields is causing a crash" passed.


Running test errors/two classes with the same fully-qualified names [eachjvm]
Commandline: abc -d errors errors/DuplicatedNames.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Abc finished on Fri Jul 30 10:03:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 65 millisec.)
------------------------------------------------
[ 87.692% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 01.538% ] Create polyglot compiler:  1
[ 10.769% ] Polyglot phases:  7
[ 00.000% ] Resolve class names:  0
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "errors/two classes with the same fully-qualified names [eachjvm]" failed


Running test errors/Undefined pointcuts were throwing exceptions in 07b11 [callsto]
Commandline: abc -d errors errors/UndefinedPointCut_PR396.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Undefined pointcuts were throwing exceptions in 07b11 [callsto]" passed.


Running test errors/advice on abstract pointcuts
Commandline: abc -d errors errors/StaticAdviceOnAbstract.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "advice on abstract pointcuts" passed.


Running test errors/Whoops, I forgot to put a class in the field access PCD.
Commandline: abc -d errors errors/BadGetPCD.java 
Abc started on Fri Jul 30 10:03:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Whoops, I forgot to put a class in the field access PCD." passed.


Running test errors/the arounds return something but there is no returns statement
Commandline: abc -d errors errors/MissingReturns.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "the arounds return something but there is no returns statement" passed.


Running test pureJava/simple tests of throws and for stmt typing
Commandline: abc -d pureJava pureJava/SimpleSpec.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "simple tests of throws and for stmt typing" passed.


Running test errors/checking the contra-variant errors for typing of proceed
Commandline: abc -d errors errors/BadAround.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming BadAround... 
Abc finished on Fri Jul 30 10:03:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 222 millisec.)
------------------------------------------------
[ 25.225% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 19.369% ] Polyglot phases:  43
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.450% ] Intertype Adjuster:  1
[ 02.703% ] Retrieving bodies:  6
[ 05.856% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.802% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.450% ] Add aspect code:  1
[ 00.450% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 32.883% ] Soot Packs:  73
[ 10.811% ] Soot Writing Output:  24
================================================
PASS: errors: Test "checking the contra-variant errors for typing of proceed" passed.


Running test errors/error of no return statement detected not by ajc but by javac (line 4)
Commandline: abc -d errors errors/NoReturnStatementSimple.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "error of no return statement detected not by ajc but by javac (line 4)" passed.


Running test errors/class and interface extension
Commandline: abc -d errors errors/BadExtension.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 7, should be 9
Actual errors found: 
Semantic Error at errors/BadExtension.java:9,20-43: An abstract method cannot have a body.
Semantic Error at errors/BadExtension.java:16,0-22:1: Sub should be declared abstract; it does not define abstractWithBody(), which is declared in Super
Semantic Error at errors/BadExtension.java:17,11-29: finalPublic() in Sub cannot override finalPublic() in Super; overridden method is final
Semantic Error at errors/BadExtension.java:18,4-21: justPublic() in Sub cannot override justPublic() in Super; attempting to assign weaker access privileges
Semantic Error at errors/BadExtension.java:19,11-27: intPublic() in Sub cannot override intPublic() in Super; attempting to use incompatible return type
found: void
required: int
Semantic Error at errors/BadExtension.java:21,18-42: staticFinalPublic() in Sub cannot override staticFinalPublic() in Super; overridden method is final
Semantic Error at errors/BadExtension.java:35,11-19: m() in C12 cannot override m() in I2; attempting to use incompatible return type
found: void
required: int
FAIL: Test "errors/class and interface extension" failed


Running test abctests/errors/multiple conflicting introductions 1
Commandline: abc -d abctests/errors abctests/errors/MultipleIntros1.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/errors: Test "multiple conflicting introductions 1" passed.


Running test abctests/errors/multiple conflicting introductions 2
Commandline: abc -d abctests/errors abctests/errors/MultipleIntros2.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/errors: Test "multiple conflicting introductions 2" passed.


Running test abctests/errors/multiple conflicting introductions 3
Commandline: abc -d abctests/errors abctests/errors/MultipleIntros3.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/errors: Test "multiple conflicting introductions 3" passed.


Running test abctests/errors/multiple conflicting introductions 4
Commandline: abc -d abctests/errors abctests/errors/MultipleIntros4.java 
Abc started on Fri Jul 30 10:03:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/errors: Test "multiple conflicting introductions 4" passed.


Running test abctests/errors/multiple conflicting introductions 5
Commandline: abc -d abctests/errors abctests/errors/MultipleIntros5.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming AO... 
Transforming AO$AI2... 
Transforming MultipleIntros5... 
Transforming AO$AI1... 
Abc finished on Fri Jul 30 10:03:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 265 millisec.)
------------------------------------------------
[ 20.377% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.887% ] Polyglot phases:  58
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.377% ] Intertype Adjuster:  1
[ 03.396% ] Retrieving bodies:  9
[ 04.906% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.509% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.377% ] Add aspect code:  1
[ 00.377% ] Weaving advice:  1
[ 00.377% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 27.547% ] Soot Packs:  73
[ 18.868% ] Soot Writing Output:  50
================================================
PASS: abctests/errors: Test "multiple conflicting introductions 5" passed.


Running test errors/types in throws clauses
Commandline: abc -d errors errors/ThrowsClause.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "types in throws clauses" passed.


Running test errors/referencing non-static pointcuts in outer aspects
Commandline: abc -d errors errors/StaticPointcutRefs.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "referencing non-static pointcuts in outer aspects" passed.


Running test errors/bad switch syntax
Commandline: abc -d errors errors/Switch.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "bad switch syntax" passed.


Running test new/javac correct compiler error if there is no return in around returning result
Commandline: abc -d new new/NoReturnInProceed.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "javac correct compiler error if there is no return in around returning result" passed.


Running test errors/should give an error for introducing two members with the same name
Commandline: abc -d errors errors/TwoIntros.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "should give an error for introducing two members with the same name" passed.


Running test errors/wimpy test for undeclared and uncaught exceptions
Commandline: abc -d errors errors/UndeclaredThrows.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "wimpy test for undeclared and uncaught exceptions" passed.


Running test pureJava/test for not folding circular constants
Commandline: abc -d pureJava pureJava/CircularFolding.java 
Abc started on Fri Jul 30 10:03:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "test for not folding circular constants" passed.


Running test pureJava/continue targets must be continuable
Commandline: abc -d pureJava pureJava/BadContinueTarget.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "continue targets must be continuable" passed.


Running test pureJava/qualified this to non-inner should be caught
Commandline: abc -d pureJava pureJava/BadQualifiedNew.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "qualified this to non-inner should be caught" passed.


Running test pureJava/Referencing various things from static contexts
Commandline: abc -d pureJava pureJava/StaticContexts.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 8 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "Referencing various things from static contexts" passed.


Running test new/Given non-matching TypePattern, CE flags use of non-introduced method rather than failure to introduce
Commandline: abc -d new new/typepatternmatch/pack1/IntroErrorLocation.java new/typepatternmatch/pack2/TargetClass.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Given non-matching TypePattern, CE flags use of non-introduced method rather than failure to introduce" passed.


Running test new/Compiler should suggest using aspect when advice, pointcuts, or introduction is in a class
Commandline: abc -d new new/RecognizeAspectCE.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Compiler should suggest using aspect when advice, pointcuts, or introduction is in a class" passed.


Running test errors/Some expressions are illegal expression statements
Commandline: abc -d errors errors/BadExpressionStatement.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "Some expressions are illegal expression statements" passed.


Running test pureJava/illegal forward reference
Commandline: abc -d pureJava pureJava/IllegalForwardReference.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "illegal forward reference" passed.


Running test errors/declare error working with pointcut and-not (amp,amp,bang)
Commandline: abc -d errors errors/DeclareError.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: errors: Test "declare error working with pointcut and-not (amp,amp,bang)" passed.


Running test errors/protected accessibility
Commandline: abc -d errors errors/protectedAccess/Main.java errors/protectedAccess/p1/C1.java 
Abc started on Fri Jul 30 10:03:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 9
Actual errors found: 
Semantic Error at errors/protectedAccess/Main.java:37,30-33: No valid method call found for m() in protectedAccess.SubC1.SubI1.
FAIL: Test "errors/protected accessibility" failed


Running test errors/parse-time illegal modifiers
Commandline: abc -d errors errors/Modifiers1.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected position-less error: Unable to recover from previous errors.
Errors found during this compilation:
Syntax Error at null: Unable to recover from previous errors.
Syntax Error at null: Couldn't repair and continue parse
Syntax Error at errors/Modifiers1.java:2,12-19: Syntax error.
FAIL: Test "errors/parse-time illegal modifiers" failed


Running test errors/check-time illegal modifiers
Commandline: abc -d errors errors/Modifiers.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 8 errors, which were matched and verified against the expected errors.
PASS: errors: Test "check-time illegal modifiers" passed.


Running test errors/illegal synchronized stmts
Commandline: abc -d errors errors/BadSynchronized.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Unable to recover from previous errors.
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: errors: Test "illegal synchronized stmts" passed.


Running test pureJava/modifiers on interface members
Commandline: abc -d pureJava pureJava/InterfaceMembers.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 8 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "modifiers on interface members" passed.


Running test new/aspect as member of interface (private and protected)
Commandline: abc -d new new/AspectInInterfaceCF.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "aspect as member of interface (private and protected)" passed.


Running test errors/good errors (and not too many) for missing members
Commandline: abc -d errors errors/NotFound.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 7
Actual errors found: 
Semantic Error at errors/NotFound.java: Class "foo.bar.Bax" not found.
FAIL: Test "errors/good errors (and not too many) for missing members" failed


Running test new/expecting compile failures with subclass narrowing scope of superclass methods or accessing private superclass variables
Commandline: abc -d new new/RestrictingVisibilityCF.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 8 errors, which were matched and verified against the expected errors.
PASS: new: Test "expecting compile failures with subclass narrowing scope of superclass methods or accessing private superclass variables" passed.


Running test new/introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public
Commandline: abc -d new -Xlint:ignore new/IntroduceInnerInterfaceCF.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 8, should be 9
Actual errors found: 
Semantic Error at new/IntroduceInnerInterfaceCF.java:16,0-21:1: TargetClass should be declared abstract; it does not define defaultMethod(), which is declared in Aspect.Inner
Semantic Error at new/IntroduceInnerInterfaceCF.java:23,0-20: AnotherClass should be declared abstract; it does not define defaultMethod(), which is declared in Aspect.Inner
Semantic Error at new/IntroduceInnerInterfaceCF.java:24,49-61: Cannot access class "Aspect.Inner" from the body of "null".
Semantic Error at new/IntroduceInnerInterfaceCF.java:42,26-38: Cannot access class "Aspect.Inner" from the body of "PeekingAspect".
Semantic Error at new/IntroduceInnerInterfaceCF.java:45,12-24: Cannot access class "Aspect.Inner" from the body of "PeekingAspect".
Semantic Error at new/IntroduceInnerInterfaceCF.java:48,10-22: Cannot access class "Aspect.Inner" from the body of "PeekingAspect".
Semantic Error at new/IntroduceInnerInterfaceCF.java:50,46-58: Cannot access class "Aspect.Inner" from the body of "PeekingAspect".
Semantic Error at new/IntroduceInnerInterfaceCF.java:58,46-53: Cannot access class "AbstractAspect.Private" from the body of "HideFromChild".
FAIL: Test "new/introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public" failed


Running test errors/aspects may not implement Serializable or Cloneable
Commandline: abc -d errors errors/AspectInterfaces.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "aspects may not implement Serializable or Cloneable" passed.


Running test errors/inner classes may not have static non-constant members
Commandline: abc -d errors errors/InnerMembers.java 
Abc started on Fri Jul 30 10:03:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 6
Actual errors found: 
Semantic Error at errors/InnerMembers.java:8,21-62: Inner classes cannot declare static fields, unless they are compile-time constant fields.
Semantic Error at errors/InnerMembers.java:9,15-21: Inner classes cannot declare static fields, unless they are compile-time constant fields.
Semantic Error at errors/InnerMembers.java:10,15-27: Inner classes cannot declare static methods.
Semantic Error at errors/InnerMembers.java:11,8-22: Inner classes cannot declare member interfaces.
FAIL: Test "errors/inner classes may not have static non-constant members" failed


Running test errors/explicit constructor calls can throw exceptions
Commandline: abc -d errors errors/ExplicitConstructorThrows.java 
Abc started on Fri Jul 30 10:03:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "explicit constructor calls can throw exceptions" passed.


Running test pureJava/flow analysis with local types
Commandline: abc -d pureJava pureJava/InnerFlow.java 
Abc started on Fri Jul 30 10:03:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "flow analysis with local types" passed.


Running test errors/bad proceed args good error messages
Commandline: abc -d errors errors/ProceedArgsCE.java 
Abc started on Fri Jul 30 10:03:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "bad proceed args good error messages" passed.


Running test design/intro/initial tests for new introduction style
Commandline: abc -d design/intro design/intro/Simple.java 
Abc started on Fri Jul 30 10:03:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming Simple... 
Transforming C... 
Transforming B... 
Abc finished on Fri Jul 30 10:03:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 515 millisec.)
------------------------------------------------
[ 10.485% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.194% ] Create polyglot compiler:  1
[ 25.631% ] Polyglot phases:  132
[ 00.000% ] Resolve class names:  0
[ 00.194% ] Declare Parents:  1
[ 00.388% ] Intertype Adjuster:  2
[ 03.495% ] Retrieving bodies:  18
[ 11.650% ] Update pattern matcher:  60
[ 00.583% ] Weave Initializers:  3
[ 00.000% ] Load shadow types:  0
[ 02.718% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.194% ] Add aspect code:  1
[ 00.194% ] Weaving advice:  1
[ 00.194% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 27.767% ] Soot Packs:  143
[ 16.311% ] Soot Writing Output:  84
================================================
PASS: design/intro: Test "initial tests for new introduction style" passed.


Running test design/intro/overriding of introduced methods and accessibility
Commandline: abc -d design/intro design/intro/Overriding.java 
Abc started on Fri Jul 30 10:03:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming C... 
Transforming A4... 
Transforming A1... 
Transforming A3... 
Transforming A3$Inner... 
Transforming A4$Inner... 
Transforming A3$I1... 
Transforming A4$I1... 
Transforming A4$I2... 
Transforming Overriding... 
Transforming A2... 
Transforming A3$I2... 
Transforming SuperC... 
Abc finished on Fri Jul 30 10:03:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 625 millisec.)
------------------------------------------------
[ 14.400% ] Init. of Soot:  90
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.080% ] Polyglot phases:  138
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.480% ] Intertype Adjuster:  3
[ 03.200% ] Retrieving bodies:  20
[ 03.680% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.440% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.320% ] Add aspect code:  2
[ 00.480% ] Weaving advice:  3
[ 00.160% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 35.360% ] Soot Packs:  221
[ 18.400% ] Soot Writing Output:  115
================================================
PASS: design/intro: Test "overriding of introduced methods and accessibility" passed.


Running test design/intro/within and introductions behaves correctly
Commandline: abc -d design/intro design/intro/Within.java 
Abc started on Fri Jul 30 10:03:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming Within... 
Transforming A1... 
Transforming Test... 
Transforming A2... 
Transforming I... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 555 millisec.)
------------------------------------------------
[ 09.730% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.532% ] Polyglot phases:  175
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.180% ] Intertype Adjuster:  1
[ 03.063% ] Retrieving bodies:  17
[ 04.685% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.685% ] Compute advice lists:  26
[ 00.000% ] Intertype weave:  0
[ 00.180% ] Add aspect code:  1
[ 04.865% ] Weaving advice:  27
[ 00.180% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.640% ] Soot Packs:  109
[ 21.261% ] Soot Writing Output:  118
================================================
PASS: design/intro: Test "within and introductions behaves correctly" passed.


Running test design/intro/introduction of static methods and fields on classes and interfaces
Commandline: abc -d design/intro design/intro/Statics.java 
Abc started on Fri Jul 30 10:03:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: design/intro: Test "introduction of static methods and fields on classes and interfaces" passed.


Running test design/intro/correct inheritance of multiple concrete methods
Commandline: abc -d design/intro design/intro/MultiInheritCP.java 
Abc started on Fri Jul 30 10:03:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I1... 
Transforming IRoot... 
Transforming A... 
Transforming MultiInheritCP... 
Transforming C... 
Transforming I2... 
Transforming Root... 
Abc finished on Fri Jul 30 10:03:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 385 millisec.)
------------------------------------------------
[ 14.026% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.571% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.519% ] Intertype Adjuster:  2
[ 02.078% ] Retrieving bodies:  8
[ 05.974% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 18.442% ] Compute advice lists:  71
[ 00.000% ] Intertype weave:  0
[ 00.260% ] Add aspect code:  1
[ 00.260% ] Weaving advice:  1
[ 00.260% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.403% ] Soot Packs:  67
[ 12.208% ] Soot Writing Output:  47
================================================
PASS: design/intro: Test "correct inheritance of multiple concrete methods" passed.


Running test abctests/design/intro/errors in inheritance of multiple concrete methods 1
Commandline: abc -d abctests/design/intro abctests/design/intro/MultiInheritCF1.java 
Abc started on Fri Jul 30 10:03:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 42, but is on line 46.
Errors found during this compilation:
Semantic Error at abctests/design/intro/MultiInheritCF1.java:42,20-37: toString() in I2 cannot override toString() in java.lang.Object; attempting to use incompatible return type
found: int
required: java.lang.String
Semantic Error at abctests/design/intro/MultiInheritCF1.java:42,20-37: toString() in A cannot override toString() in java.lang.Object; attempting to use incompatible return type
found: int
required: java.lang.String
Semantic Error at abctests/design/intro/MultiInheritCF1.java:46,11-33: Duplicate method "fromIRoot1()" introduced by aspects "A" and "A" into class "C".
FAIL: Test "abctests/design/intro/errors in inheritance of multiple concrete methods 1" failed


Running test abctests/design/intro/errors in inheritance of multiple concrete methods 2
Commandline: abc -d abctests/design/intro abctests/design/intro/MultiInheritCF2.java 
Abc started on Fri Jul 30 10:03:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/design/intro: Test "errors in inheritance of multiple concrete methods 2" passed.


Running test abctests/design/intro/errors in inheritance of multiple concrete methods 3
Commandline: abc -d abctests/design/intro abctests/design/intro/MultiInheritCF3.java 
Abc started on Fri Jul 30 10:03:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/design/intro: Test "errors in inheritance of multiple concrete methods 3" passed.


Running test abctests/design/intro/errors in inheritance of multiple concrete methods 4
Commandline: abc -d abctests/design/intro abctests/design/intro/MultiInheritCF4.java 
Abc started on Fri Jul 30 10:03:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 21, but is on line 41.
Errors found during this compilation:
Semantic Error at abctests/design/intro/MultiInheritCF4.java:21,0-22:1: C should be declared abstract; it does not define fromI2(), which is declared in Root
FAIL: Test "abctests/design/intro/errors in inheritance of multiple concrete methods 4" failed


Running test abctests/design/intro/declared exceptions are checked correctly on intros (errors) 1
Commandline: abc -d abctests/design/intro abctests/design/intro/ExceptionsCF1.java 
Abc started on Fri Jul 30 10:03:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/design/intro: Test "declared exceptions are checked correctly on intros (errors) 1" passed.


Running test abctests/design/intro/declared exceptions are checked correctly on intros (errors) 2
Commandline: abc -d abctests/design/intro abctests/design/intro/ExceptionsCF2.java 
Abc started on Fri Jul 30 10:03:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: abctests/design/intro: Test "declared exceptions are checked correctly on intros (errors) 2" passed.


Running test design/intro/declared exceptions are checked correctly on intros
Commandline: abc -d design/intro design/intro/ExceptionsCP.java 
Abc started on Fri Jul 30 10:03:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ExceptionsCP... 
Transforming Root... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 193 millisec.)
------------------------------------------------
[ 27.979% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 25.389% ] Polyglot phases:  49
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.736% ] Retrieving bodies:  13
[ 07.772% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.554% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.518% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.617% ] Soot Packs:  34
[ 12.435% ] Soot Writing Output:  24
================================================
PASS: design/intro: Test "declared exceptions are checked correctly on intros" passed.


Running test design/reflect/Joinpoint is not created for foo(String) when before() advice is present.
Commandline: abc -d design/reflect design/reflect/SimpleAround1.java 
Abc started on Fri Jul 30 10:03:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming A... 
Transforming SimpleAround1... 
Transforming Abc$access$A$around$529... 
Abc finished on Fri Jul 30 10:03:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 584 millisec.)
------------------------------------------------
[ 13.870% ] Init. of Soot:  81
[ 00.000% ] Loading Jars:  0
[ 00.171% ] Create polyglot compiler:  1
[ 41.096% ] Polyglot phases:  240
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.712% ] Retrieving bodies:  10
[ 04.281% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.397% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.171% ] Add aspect code:  1
[ 05.651% ] Weaving advice:  33
[ 00.171% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 22.774% ] Soot Packs:  133
[ 07.705% ] Soot Writing Output:  45
================================================
PASS: design/reflect: Test "Joinpoint is not created for foo(String) when before() advice is present." passed.


Running test design/eachobject/more tests of eachobject with some difficult typing issues
Commandline: abc -d design/eachobject design/eachobject/Tricky3.java 
Abc started on Fri Jul 30 10:03:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming Tricky3... 
Transforming A3... 
Transforming A1... 
Transforming A2... 
Transforming C... 
Transforming A1$abc$PerTarget... 
Transforming A2$abc$PerTarget... 
Transforming A3$abc$PerTarget... 
Abc finished on Fri Jul 30 10:03:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 475 millisec.)
------------------------------------------------
[ 11.368% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.579% ] Polyglot phases:  74
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.526% ] Retrieving bodies:  12
[ 02.737% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.895% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.421% ] Add aspect code:  2
[ 00.842% ] Weaving advice:  4
[ 00.211% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 46.105% ] Soot Packs:  219
[ 18.316% ] Soot Writing Output:  87
================================================
PASS: design/eachobject: Test "more tests of eachobject with some difficult typing issues" passed.


Running test design/eachobject/eachobject: eachobject(receptions(...)) [eachobject]
Commandline: abc -d design/eachobject design/eachobject/Tricky1.java 
Abc started on Fri Jul 30 10:03:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ReceptionAspect... 
Transforming C... 
Transforming SubReceptionAspect1... 
Transforming Tricky1... 
Transforming SubC... 
Transforming SubReceptionAspect2... 
Transforming SubReceptionAspect1$abc$PerThis... 
Transforming SubReceptionAspect2$abc$PerThis... 
Abc finished on Fri Jul 30 10:03:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 549 millisec.)
------------------------------------------------
[ 09.836% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.182% ] Create polyglot compiler:  1
[ 27.505% ] Polyglot phases:  151
[ 00.182% ] Resolve class names:  1
[ 00.182% ] Declare Parents:  1
[ 00.000% ] Intertype Adjuster:  0
[ 03.279% ] Retrieving bodies:  18
[ 04.372% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.279% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 00.729% ] Add aspect code:  4
[ 00.729% ] Weaving advice:  4
[ 00.182% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.865% ] Soot Packs:  142
[ 23.679% ] Soot Writing Output:  130
================================================
PASS: design/eachobject: Test "eachobject: eachobject(receptions(...)) [eachobject]" passed.


Running test design/reflect/Checking new joinpoints
Commandline: abc -d design/reflect design/reflect/Coverage.java 
Abc started on Fri Jul 30 10:03:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming C... 
Transforming Helper... 
Transforming JoinPoints... 
Transforming Args... 
Transforming Coverage... 
Abc finished on Fri Jul 30 10:03:15 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1312 millisec.)
------------------------------------------------
[ 04.116% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.787% ] Polyglot phases:  522
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.165% ] Retrieving bodies:  94
[ 03.506% ] Update pattern matcher:  46
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 10.213% ] Compute advice lists:  134
[ 00.000% ] Intertype weave:  0
[ 00.076% ] Add aspect code:  1
[ 02.058% ] Weaving advice:  27
[ 00.152% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 21.723% ] Soot Packs:  285
[ 11.204% ] Soot Writing Output:  147
================================================
PASS: design/reflect: Test "Checking new joinpoints" passed.


Running test design/eachobject/eachobject: simple test [eachobject] (still)
Commandline: abc -d design/eachobject design/eachobject/Simple.java 
Abc started on Fri Jul 30 10:03:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubA2... 
Transforming C... 
Transforming A... 
Transforming Simple... 
Transforming SubA1... 
Transforming SubC2... 
Transforming SubC1... 
Transforming SubA1$abc$PerTarget... 
Transforming SubA2$abc$PerTarget... 
Abc finished on Fri Jul 30 10:03:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 637 millisec.)
------------------------------------------------
[ 08.477% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.157% ] Create polyglot compiler:  1
[ 28.885% ] Polyglot phases:  184
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.925% ] Retrieving bodies:  25
[ 04.082% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.669% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 00.314% ] Add aspect code:  2
[ 01.570% ] Weaving advice:  10
[ 00.157% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.531% ] Soot Packs:  169
[ 23.234% ] Soot Writing Output:  148
================================================
PASS: design/eachobject: Test "eachobject: simple test [eachobject] (still)" passed.


Running test design/intro/scope issues with introduction (needs more work)
Commandline: abc -d design/intro design/intro/p1/ScopeIssues.java design/intro/p1/C1.java 
Abc started on Fri Jul 30 10:03:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.ScopeIssues... 
Transforming p1.Helper... 
Transforming p1.C1... 
Abc finished on Fri Jul 30 10:03:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 501 millisec.)
------------------------------------------------
[ 10.778% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 67.265% ] Polyglot phases:  337
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.200% ] Intertype Adjuster:  1
[ 00.998% ] Retrieving bodies:  5
[ 07.385% ] Update pattern matcher:  37
[ 00.200% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.599% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.200% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.385% ] Soot Packs:  37
[ 04.990% ] Soot Writing Output:  25
================================================
PASS: design/intro: Test "scope issues with introduction (needs more work)" passed.


Running test new/properly make choice between cast and parenthesis in parser
Commandline: abc -d new new/JoinPointFields.java 
Abc started on Fri Jul 30 10:03:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming JoinPointFields... 
Transforming Abc$access$A$around$558... 
Abc finished on Fri Jul 30 10:03:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 431 millisec.)
------------------------------------------------
[ 12.529% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.875% ] Polyglot phases:  146
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 21.810% ] Retrieving bodies:  94
[ 06.729% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.160% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.232% ] Add aspect code:  1
[ 05.568% ] Weaving advice:  24
[ 00.232% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.209% ] Soot Packs:  44
[ 07.657% ] Soot Writing Output:  33
================================================
PASS: new: Test "properly make choice between cast and parenthesis in parser" passed.


Running test new/field from implemented interface not found in advice
Commandline: abc -d new new/FieldFromImplementsNotFound.java 
Abc started on Fri Jul 30 10:03:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalFile... 
Transforming FieldFromImplementsNotFound... 
Transforming HttpConstants... 
Abc finished on Fri Jul 30 10:03:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 417 millisec.)
------------------------------------------------
[ 30.695% ] Init. of Soot:  128
[ 00.000% ] Loading Jars:  0
[ 00.240% ] Create polyglot compiler:  1
[ 35.492% ] Polyglot phases:  148
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.439% ] Retrieving bodies:  6
[ 16.307% ] Update pattern matcher:  68
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.959% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.240% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.873% ] Soot Packs:  37
[ 05.755% ] Soot Writing Output:  24
================================================
PASS: new: Test "field from implemented interface not found in advice" passed.


Running test new/make sure advice affects introduced methods and constructors
Commandline: abc -d new new/AdviceOnIntroduced.java 
Abc started on Fri Jul 30 10:03:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AdviceOnIntroduced... 
Transforming Foo... 
Transforming Abc$access$AdviceOnIntroduced$around$563... 
Abc finished on Fri Jul 30 10:03:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 318 millisec.)
------------------------------------------------
[ 17.296% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.390% ] Polyglot phases:  103
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.314% ] Intertype Adjuster:  1
[ 01.887% ] Retrieving bodies:  6
[ 07.547% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.572% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.943% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.560% ] Soot Packs:  94
[ 08.491% ] Soot Writing Output:  27
================================================
PASS: new: Test "make sure advice affects introduced methods and constructors" passed.


Running test new/new around construct
Commandline: abc -d new new/AroundAdvice.java 
Abc started on Fri Jul 30 10:03:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming AroundAdvice... 
Transforming Abc$access$AroundAdvice$around$571... 
Transforming Abc$access$AroundAdvice$around$572... 
Abc finished on Fri Jul 30 10:03:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 368 millisec.)
------------------------------------------------
[ 14.674% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.804% ] Polyglot phases:  106
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.446% ] Retrieving bodies:  9
[ 06.250% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.630% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.359% ] Weaving advice:  5
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 35.598% ] Soot Packs:  131
[ 09.239% ] Soot Writing Output:  34
================================================
PASS: new: Test "new around construct" passed.


Running test new/aspect redefines a parameter
Commandline: abc -d new new/AspectRedefinesParam.java 
Abc started on Fri Jul 30 10:03:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectRedefinesParam... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 240 millisec.)
------------------------------------------------
[ 22.917% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.417% ] Create polyglot compiler:  1
[ 39.167% ] Polyglot phases:  94
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.417% ] Intertype Adjuster:  1
[ 02.083% ] Retrieving bodies:  5
[ 10.000% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.500% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.417% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.750% ] Soot Packs:  33
[ 08.333% ] Soot Writing Output:  20
================================================
PASS: new: Test "aspect redefines a parameter" passed.


Running test new/introducing extends and implements
Commandline: abc -d new new/HierarchyIntroductions.java 
Abc started on Fri Jul 30 10:03:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at new/HierarchyIntroductions.java:12,9-11: The type of the variable initializer "C2" does not match that of the declaration "I4".
Syntax Error at new/HierarchyIntroductions.java:36,34-35: Syntax error.
FAIL: Test "new/introducing extends and implements" failed


Running test new/(related) aspect on interface
Commandline: abc -d new new/AspectOnInterface.java 
Abc started on Fri Jul 30 10:03:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I1... 
Transforming ConcreteC1... 
Transforming AspectOnInterface... 
Abc finished on Fri Jul 30 10:03:19 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 259 millisec.)
------------------------------------------------
[ 21.236% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.386% ] Create polyglot compiler:  1
[ 37.452% ] Polyglot phases:  97
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.386% ] Intertype Adjuster:  1
[ 02.703% ] Retrieving bodies:  7
[ 08.880% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.931% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.386% ] Add aspect code:  1
[ 00.386% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.444% ] Soot Packs:  40
[ 10.811% ] Soot Writing Output:  28
================================================
PASS: new: Test "(related) aspect on interface" passed.


Running test new/advice and package visibility 1
Commandline: abc -d new -Xlint:ignore new/packagevisibility/PackagesAndAdvice.java new/packagevisibility/testPackage/Class1.java new/packagevisibility/testPackage/Class2.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming packagevisibility.testPackage.Class2... 
Transforming packagevisibility.testPackage.Class2$1... 
Transforming packagevisibility.PackagesAndAdvice... 
Transforming packagevisibility.A1... 
Transforming packagevisibility.testPackage.Class1... 
Transforming packagevisibility.A... 
Transforming Abc$access$packagevisibility_d_A$around$577... 
Abc finished on Fri Jul 30 10:03:19 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 447 millisec.)
------------------------------------------------
[ 12.304% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.224% ] Create polyglot compiler:  1
[ 31.096% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.579% ] Retrieving bodies:  16
[ 05.369% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.237% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.224% ] Add aspect code:  1
[ 01.790% ] Weaving advice:  8
[ 00.224% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 29.530% ] Soot Packs:  132
[ 13.423% ] Soot Writing Output:  60
================================================
running
PASS: new: Test "advice and package visibility 1" passed.


Running test new/advice and package visibility 2
Commandline: abc -d new -Xlint:error new/packagevisibility/PackagesAndAdviceCf.java new/packagevisibility/testPackage/Class1.java new/packagevisibility/testPackage/Class2.java 
*** Option -Xlint:error ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "advice and package visibility 2" passed.


Running test new/advice on implied empty constructor
Commandline: abc -d new new/AdviceOnEmptyConstructor.java 
Abc started on Fri Jul 30 10:03:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming C1... 
Transforming AdviceOnEmptyConstructor... 
Abc finished on Fri Jul 30 10:03:20 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 325 millisec.)
------------------------------------------------
[ 16.615% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.538% ] Polyglot phases:  161
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.462% ] Retrieving bodies:  8
[ 07.385% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.231% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.308% ] Weaving advice:  1
[ 00.308% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.923% ] Soot Packs:  42
[ 09.231% ] Soot Writing Output:  30
================================================
PASS: new: Test "advice on implied empty constructor" passed.


Running test new/advice on * *(..) not mapping to initializers
Commandline: abc -d new new/InitializerAdvice.java 
Abc started on Fri Jul 30 10:03:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InitializerAdvice... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:20 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 312 millisec.)
------------------------------------------------
[ 17.628% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.615% ] Polyglot phases:  108
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.321% ] Intertype Adjuster:  1
[ 01.923% ] Retrieving bodies:  6
[ 20.513% ] Update pattern matcher:  64
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.244% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.321% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.321% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.064% ] Soot Packs:  47
[ 07.051% ] Soot Writing Output:  22
================================================
PASS: new: Test "advice on * *(..) not mapping to initializers" passed.


Running test new/three type declarations in the scope of an advice
Commandline: abc -d new new/TypeDeclInAdvice.java 
Abc started on Fri Jul 30 10:03:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TypeDeclInAdvice... 
Transforming A... 
Transforming A$1Internal... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 335 millisec.)
------------------------------------------------
[ 17.313% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.836% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.388% ] Retrieving bodies:  8
[ 07.164% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.493% ] Compute advice lists:  5
[ 02.388% ] Intertype weave:  8
[ 00.000% ] Add aspect code:  0
[ 00.597% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 27.164% ] Soot Packs:  91
[ 08.657% ] Soot Writing Output:  29
================================================
PASS: new: Test "three type declarations in the scope of an advice" passed.


Running test new/introduction fails on class with an inner class that extends or implements something
Commandline: abc -d new new/IntroductionFailsWithInnerClass.java 
Abc started on Fri Jul 30 10:03:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IntroductionFailsWithInnerClass... 
Transforming M... 
Transforming M$LabeledPairLayout... 
Abc finished on Fri Jul 30 10:03:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 255 millisec.)
------------------------------------------------
[ 20.784% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.392% ] Create polyglot compiler:  1
[ 38.039% ] Polyglot phases:  97
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.529% ] Retrieving bodies:  9
[ 09.020% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.569% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.961% ] Weaving advice:  5
[ 00.392% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.902% ] Soot Packs:  38
[ 09.412% ] Soot Writing Output:  24
================================================
PASS: new: Test "introduction fails on class with an inner class that extends or implements something" passed.


Running test new/checks that methods are introduced on the topmost class implemented
Commandline: abc -d new new/TopmostImplements.java 
Abc started on Fri Jul 30 10:03:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BC1... 
Transforming B... 
Transforming Introducer... 
Transforming TopmostImplements... 
Transforming A... 
Transforming BC2... 
Abc finished on Fri Jul 30 10:03:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 454 millisec.)
------------------------------------------------
[ 24.890% ] Init. of Soot:  113
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.176% ] Polyglot phases:  137
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.405% ] Retrieving bodies:  20
[ 06.167% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.101% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.220% ] Weaving advice:  1
[ 00.220% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.674% ] Soot Packs:  53
[ 21.145% ] Soot Writing Output:  96
================================================
PASS: new: Test "checks that methods are introduced on the topmost class implemented" passed.


Running test new/arndAdvRet/a couple different returns from around advice
Commandline: abc -d new/arndAdvRet new/arndAdvRet/Driver.java 
Abc started on Fri Jul 30 10:03:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming BarAspect... 
Transforming Bar... 
Transforming Driver... 
Transforming FooAspect... 
Transforming Abc$access$FooAspect$around$590... 
Transforming Abc$access$BarAspect$around$591... 
Abc finished on Fri Jul 30 10:03:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 463 millisec.)
------------------------------------------------
[ 11.879% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.078% ] Polyglot phases:  130
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.808% ] Retrieving bodies:  13
[ 05.616% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.944% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.648% ] Add aspect code:  3
[ 01.296% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 36.285% ] Soot Packs:  168
[ 11.447% ] Soot Writing Output:  53
================================================
PASS: new/arndAdvRet: Test "a couple different returns from around advice" passed.


Running test new/member finally advice paired with signature advice
Commandline: abc -d new new/TryErrors.java 
Abc started on Fri Jul 30 10:03:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Foo... 
Transforming TryErrors... 
Abc finished on Fri Jul 30 10:03:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 344 millisec.)
------------------------------------------------
[ 16.279% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.488% ] Polyglot phases:  98
[ 00.291% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.744% ] Retrieving bodies:  6
[ 07.267% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.453% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.291% ] Add aspect code:  1
[ 00.291% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 36.047% ] Soot Packs:  124
[ 07.849% ] Soot Writing Output:  27
================================================
PASS: new: Test "member finally advice paired with signature advice" passed.


Running test new/aspect of eachobject(instanceof(Interface))
Commandline: abc -d new new/AspectOfInterface.java 
Abc started on Fri Jul 30 10:03:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectOfInterface... 
Transforming A... 
Transforming I... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 272 millisec.)
------------------------------------------------
[ 20.956% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.279% ] Polyglot phases:  115
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.838% ] Retrieving bodies:  5
[ 08.824% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.103% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.368% ] Add aspect code:  1
[ 00.368% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.706% ] Soot Packs:  40
[ 09.559% ] Soot Writing Output:  26
================================================
PASS: new: Test "aspect of eachobject(instanceof(Interface))" passed.


Running test new/finalMemInit/final member initialization broken with JDK before 1.1.8
Commandline: abc -d new/finalMemInit new/finalMemInit/Driver.java 
Abc started on Fri Jul 30 10:03:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming Driver... 
Abc finished on Fri Jul 30 10:03:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 301 millisec.)
------------------------------------------------
[ 37.874% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.884% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.329% ] Retrieving bodies:  4
[ 07.973% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.997% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.332% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.963% ] Soot Packs:  33
[ 05.648% ] Soot Writing Output:  17
================================================
PASS: new/finalMemInit: Test "final member initialization broken with JDK before 1.1.8" passed.


Running test new/packageNameClash/same package and var name clash in preprocessed code when aspectOf is used
Commandline: abc -d new/packageNameClash new/packageNameClash/otherpkg/Driver.java new/packageNameClash/pkg/Aspect1.java new/packageNameClash/pkg/Class1.java 
Abc started on Fri Jul 30 10:03:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pkg.Aspect1... 
Transforming otherpkg.Driver... 
Transforming pkg.Class1... 
Abc finished on Fri Jul 30 10:03:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 271 millisec.)
------------------------------------------------
[ 19.926% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.369% ] Create polyglot compiler:  1
[ 39.852% ] Polyglot phases:  108
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.273% ] Retrieving bodies:  17
[ 06.642% ] Update pattern matcher:  18
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.476% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.369% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.369% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.022% ] Soot Packs:  38
[ 10.701% ] Soot Writing Output:  29
================================================
PASS: new/packageNameClash: Test "same package and var name clash in preprocessed code when aspectOf is used" passed.


Running test new/adviceOnStaticMeth/and PR#201 advice on static methods fails javac compile with this
Commandline: abc -d new/adviceOnStaticMeth new/adviceOnStaticMeth/Driver.java 
Abc started on Fri Jul 30 10:03:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Transforming Outer... 
Abc finished on Fri Jul 30 10:03:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 284 millisec.)
------------------------------------------------
[ 19.366% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.507% ] Polyglot phases:  98
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.761% ] Retrieving bodies:  5
[ 08.451% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 16.549% ] Compute advice lists:  47
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.352% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.972% ] Soot Packs:  34
[ 07.042% ] Soot Writing Output:  20
================================================
PASS: new/adviceOnStaticMeth: Test "and PR#201 advice on static methods fails javac compile with this" passed.


Running test new/non-static advice on inner class defined inside of method body
Commandline: abc -d new new/MethodInner.java 
Abc started on Fri Jul 30 10:03:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $i0 = this.<C$1Inner: int val$N>
Transforming A... 
Transforming C... 
Transforming C$1Inner... 
Transforming MethodInner... 
Abc finished on Fri Jul 30 10:03:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 409 millisec.)
------------------------------------------------
[ 13.447% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.384% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.445% ] Retrieving bodies:  10
[ 06.112% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.467% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.244% ] Add aspect code:  1
[ 06.601% ] Weaving advice:  27
[ 00.244% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 32.274% ] Soot Packs:  132
[ 09.780% ] Soot Writing Output:  40
================================================
before: execution(int C.foo())
Failed to define or resolve class C$1Inner from new
java.lang.ClassFormatError: C$1Inner (Repetitive field name/signature)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:537)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:448)
	at abc.testing.TestCase$FileClassLoader.findClass(TestCase.java:759)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at C.foo(MethodInner.java:21)
	at MethodInner.test(MethodInner.java:7)
	at MethodInner.main(MethodInner.java:4)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
InvocationTargetException while trying to run compiled class: java.lang.NoClassDefFoundError: C$1Inner
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NoClassDefFoundError: C$1Inner
	at C.foo(MethodInner.java:21)
	at MethodInner.test(MethodInner.java:7)
	at MethodInner.main(MethodInner.java:4)
	... 7 more
FAIL: Test "new/non-static advice on inner class defined inside of method body" failed


Running test new/simple single-threaded eachcflow test (includes aspectOf)
Commandline: abc -d new new/Client.java 
Abc started on Fri Jul 30 10:03:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Client... 
Transforming ServiceWorker3... 
Transforming ServiceWorker4... 
Transforming ClientFlow... 
Transforming Server... 
Transforming ServiceWorker1... 
Transforming ServiceWorker2... 
Transforming Abc$access$ClientFlow$around$601... 
Abc finished on Fri Jul 30 10:03:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 593 millisec.)
------------------------------------------------
[ 09.106% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.440% ] Polyglot phases:  139
[ 00.337% ] Resolve class names:  2
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.710% ] Retrieving bodies:  22
[ 04.047% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 20.067% ] Compute advice lists:  119
[ 00.000% ] Intertype weave:  0
[ 02.192% ] Add aspect code:  13
[ 02.361% ] Weaving advice:  14
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.742% ] Soot Packs:  123
[ 13.997% ] Soot Writing Output:  83
================================================
PASS: new: Test "simple single-threaded eachcflow test (includes aspectOf)" passed.


Running test new/scopeTypingBug/bad type resolution when var reassigned in same scope
Commandline: abc -d new/scopeTypingBug new/scopeTypingBug/Driver.java 
Abc started on Fri Jul 30 10:03:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Abc finished on Fri Jul 30 10:03:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 272 millisec.)
------------------------------------------------
[ 19.853% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.368% ] Create polyglot compiler:  1
[ 60.662% ] Polyglot phases:  165
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.471% ] Retrieving bodies:  4
[ 10.294% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.368% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.368% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.676% ] Soot Packs:  10
[ 02.941% ] Soot Writing Output:  8
================================================
PASS: new/scopeTypingBug: Test "bad type resolution when var reassigned in same scope" passed.


Running test new/generating the right throws clause for call-site advice (and around)
Commandline: abc -d new new/ComputedThrows.java 
Abc started on Fri Jul 30 10:03:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at ComputedThrows.java:6,29-34: The exception java.lang.Exception must be either caught or declared to be thrown
FAIL: Test "new/generating the right throws clause for call-site advice (and around)" failed


Running test new/advice on calls to static methods using several syntax
Commandline: abc -d new new/StaticCalls.java 
Abc started on Fri Jul 30 10:03:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at StaticCalls.java:26,14-15: The exception java.lang.ClassNotFoundException must be either caught or declared to be thrown
FAIL: Test "new/advice on calls to static methods using several syntax" failed


Running test new/, PR#249, PR#250 advice on constructor sites
Commandline: abc -d new new/NewSiteAdvice.java 
Abc started on Fri Jul 30 10:03:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at NewSiteAdvice.java:14,26-45: The exception java.rmi.RemoteException must be either caught or declared to be thrown
FAIL: Test "new/, PR#249, PR#250 advice on constructor sites" failed


Running test new/test after throwing advice in several ways
Commandline: abc -d new new/AfterThrowing.java 
Abc started on Fri Jul 30 10:03:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at AfterThrowing.java:9,8-28: The exception java.lang.Exception must be either caught or declared to be thrown
Semantic Error at AfterThrowing.java:20,8-30: The exception AfterThrowing$MyException must be either caught or declared to be thrown
FAIL: Test "new/test after throwing advice in several ways" failed


Running test new/fancy name patterns for method names
Commandline: abc -d new new/WildNames.java 
Abc started on Fri Jul 30 10:03:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C... 
Transforming WildNames... 
Abc finished on Fri Jul 30 10:03:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 361 millisec.)
------------------------------------------------
[ 14.958% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.277% ] Create polyglot compiler:  1
[ 36.288% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.047% ] Retrieving bodies:  11
[ 06.648% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.493% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.277% ] Add aspect code:  1
[ 07.202% ] Weaving advice:  26
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.452% ] Soot Packs:  63
[ 11.357% ] Soot Writing Output:  41
================================================
PASS: new: Test "fancy name patterns for method names" passed.


Running test design/calls/calls: calls(...)
Commandline: abc -d design/calls -Xlint:ignore design/calls/Simple.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming C... 
Transforming A... 
Transforming Simple... 
Abc finished on Fri Jul 30 10:03:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 813 millisec.)
------------------------------------------------
[ 06.642% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.123% ] Create polyglot compiler:  1
[ 30.504% ] Polyglot phases:  248
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.166% ] Retrieving bodies:  42
[ 03.567% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 15.375% ] Compute advice lists:  125
[ 00.000% ] Intertype weave:  0
[ 00.123% ] Add aspect code:  1
[ 00.861% ] Weaving advice:  7
[ 00.123% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 24.231% ] Soot Packs:  197
[ 13.284% ] Soot Writing Output:  108
================================================
PASS: design/calls: Test "calls: calls(...)" passed.


Running test new/extraThrows/throws Exception clause is unnecessarily added to Driver.main method
Commandline: abc -d new/extraThrows new/extraThrows/Driver.java 
Abc started on Fri Jul 30 10:03:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at Driver.java:18,22-28: The exception java.lang.Exception must be either caught or declared to be thrown
FAIL: Test "new/extraThrows/throws Exception clause is unnecessarily added to Driver.main method" failed


Running test new/thisUsedInMain/javac fails when this is referenced in the static main method
Commandline: abc -d new/thisUsedInMain new/thisUsedInMain/Driver.java 
Abc started on Fri Jul 30 10:03:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CallsFrom... 
Transforming CallsTo... 
Transforming Driver... 
Abc finished on Fri Jul 30 10:03:28 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 316 millisec.)
------------------------------------------------
[ 17.089% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.316% ] Create polyglot compiler:  1
[ 38.608% ] Polyglot phases:  122
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.899% ] Retrieving bodies:  6
[ 20.886% ] Update pattern matcher:  66
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.949% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.316% ] Add aspect code:  1
[ 00.316% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.658% ] Soot Packs:  40
[ 06.962% ] Soot Writing Output:  22
================================================
PASS: new/thisUsedInMain: Test "javac fails when this is referenced in the static main method" passed.


Running test new/badCast/and 276 cast error generated by ajc when type not in signature
Commandline: abc -d new/badCast new/badCast/Driver.java 
Abc started on Fri Jul 30 10:03:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SourcePane... 
Transforming Location... 
Transforming Driver... 
Transforming DriverAspect... 
Transforming Abc$access$DriverAspect$around$633... 
Abc finished on Fri Jul 30 10:03:28 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 348 millisec.)
------------------------------------------------
[ 15.805% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.322% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.287% ] Intertype Adjuster:  1
[ 06.034% ] Retrieving bodies:  21
[ 06.897% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.149% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.287% ] Add aspect code:  1
[ 00.575% ] Weaving advice:  2
[ 00.287% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 27.874% ] Soot Packs:  97
[ 09.483% ] Soot Writing Output:  33
================================================
PASS: new/badCast: Test "and 276 cast error generated by ajc when type not in signature" passed.


Running test new/calls to methods to which we don't have source
Commandline: abc -d new new/ExternalCalls.java 
Abc started on Fri Jul 30 10:03:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Test... 
Transforming ExternalCalls... 
Transforming Abc$access$A$around$635... 
Abc finished on Fri Jul 30 10:03:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 383 millisec.)
------------------------------------------------
[ 14.099% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.261% ] Create polyglot compiler:  1
[ 27.937% ] Polyglot phases:  107
[ 00.261% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.305% ] Retrieving bodies:  5
[ 06.527% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.089% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 02.611% ] Add aspect code:  10
[ 01.305% ] Weaving advice:  5
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.360% ] Soot Packs:  55
[ 29.243% ] Soot Writing Output:  112
================================================
PASS: new: Test "calls to methods to which we don't have source" passed.


Running test new/beforeNotRun/more aspect inheritance
Commandline: abc -d new/beforeNotRun new/beforeNotRun/Driver.java 
Abc started on Fri Jul 30 10:03:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BeforeAspectA... 
Transforming AbstractAspect... 
Transforming Driver... 
Abc finished on Fri Jul 30 10:03:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 283 millisec.)
------------------------------------------------
[ 19.435% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 38.163% ] Polyglot phases:  108
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.180% ] Retrieving bodies:  9
[ 08.127% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.473% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.353% ] Add aspect code:  1
[ 00.353% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.254% ] Soot Packs:  46
[ 11.661% ] Soot Writing Output:  33
================================================
PASS: new/beforeNotRun: Test "more aspect inheritance" passed.


Running test new/around and calls with both calling and called this params
Commandline: abc -d new new/AroundAndCalls.java 
Abc started on Fri Jul 30 10:03:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CL... 
Transforming AroundAndCalls... 
Transforming MustAspect... 
Transforming CP... 
Transforming Abc$access$MustAspect$around$639... 
Abc finished on Fri Jul 30 10:03:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 358 millisec.)
------------------------------------------------
[ 32.402% ] Init. of Soot:  116
[ 00.000% ] Loading Jars:  0
[ 00.279% ] Create polyglot compiler:  1
[ 31.285% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.235% ] Retrieving bodies:  8
[ 06.704% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.676% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.838% ] Weaving advice:  3
[ 00.279% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.246% ] Soot Packs:  51
[ 10.056% ] Soot Writing Output:  36
================================================
PASS: new: Test "around and calls with both calling and called this params" passed.


Running test new/pointcutParameter/compiler crashes with eachobject and named pointcuts with parameters
Commandline: abc -d new/pointcutParameter new/pointcutParameter/Driver.java 
Abc started on Fri Jul 30 10:03:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Driver... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 295 millisec.)
------------------------------------------------
[ 30.508% ] Init. of Soot:  90
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.576% ] Polyglot phases:  102
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.373% ] Retrieving bodies:  7
[ 07.797% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.695% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.339% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.559% ] Soot Packs:  40
[ 09.153% ] Soot Writing Output:  27
================================================
PASS: new/pointcutParameter: Test "compiler crashes with eachobject and named pointcuts with parameters" passed.


Running test new/unqualifiedPointcutName/lookup rules for unqualified pointcut names
Commandline: abc -d new/unqualifiedPointcutName new/unqualifiedPointcutName/Driver.java 
Abc started on Fri Jul 30 10:03:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MyPointCuts... 
Transforming MyAspect... 
Transforming Driver... 
Transforming MyObject... 
Abc finished on Fri Jul 30 10:03:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 394 millisec.)
------------------------------------------------
[ 13.959% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.254% ] Create polyglot compiler:  1
[ 52.284% ] Polyglot phases:  206
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.538% ] Retrieving bodies:  10
[ 06.091% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.792% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.254% ] Weaving advice:  1
[ 00.254% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.690% ] Soot Packs:  50
[ 08.883% ] Soot Writing Output:  35
================================================
PASS: new/unqualifiedPointcutName: Test "lookup rules for unqualified pointcut names" passed.


Running test new/eachcflow only instantiated if the aspect has some advice in it
Commandline: abc -d new new/CFlowNoAdvice.java 
Abc started on Fri Jul 30 10:03:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CFlowNoAdvice... 
Transforming CFlowAspect... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 279 millisec.)
------------------------------------------------
[ 19.355% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.717% ] Create polyglot compiler:  2
[ 41.577% ] Polyglot phases:  116
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.358% ] Intertype Adjuster:  1
[ 01.434% ] Retrieving bodies:  4
[ 08.602% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.434% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 03.943% ] Add aspect code:  11
[ 00.717% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.620% ] Soot Packs:  38
[ 08.244% ] Soot Writing Output:  23
================================================
PASS: new: Test "eachcflow only instantiated if the aspect has some advice in it" passed.


Running test new/(DESIGN QUESTION) aspect of eachJVM advising its own initializer
Commandline: abc -d new new/EachJVMOnSelf.java 
Abc started on Fri Jul 30 10:03:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming EachJVMOnSelf... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 343 millisec.)
------------------------------------------------
[ 16.035% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.653% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.292% ] Intertype Adjuster:  1
[ 01.458% ] Retrieving bodies:  5
[ 20.408% ] Update pattern matcher:  70
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.166% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.292% ] Add aspect code:  1
[ 07.289% ] Weaving advice:  25
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.953% ] Soot Packs:  41
[ 08.455% ] Soot Writing Output:  29
================================================
PASS: new: Test "(DESIGN QUESTION) aspect of eachJVM advising its own initializer" passed.


Running test new/after returning advice on calls to constructors
Commandline: abc -d new new/AfterConstructorCalls.java 
Abc started on Fri Jul 30 10:03:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AfterConstructorCalls... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 301 millisec.)
------------------------------------------------
[ 17.608% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.332% ] Create polyglot compiler:  1
[ 33.223% ] Polyglot phases:  100
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.326% ] Retrieving bodies:  7
[ 07.973% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.329% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.332% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.332% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 28.571% ] Soot Packs:  86
[ 07.973% ] Soot Writing Output:  24
================================================
PASS: new: Test "after returning advice on calls to constructors" passed.


Running test new/Does annotating 'new' with a type work as desired?
Commandline: abc -d new new/ConstructorSignatures.java 
Abc started on Fri Jul 30 10:03:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A0... 
Transforming ConstructorSignatures... 
Transforming B... 
Transforming A... 
Transforming A1... 
Abc finished on Fri Jul 30 10:03:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 375 millisec.)
------------------------------------------------
[ 14.667% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.067% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.400% ] Retrieving bodies:  9
[ 06.400% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.333% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.267% ] Add aspect code:  1
[ 00.267% ] Weaving advice:  1
[ 00.267% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 32.800% ] Soot Packs:  123
[ 12.533% ] Soot Writing Output:  47
================================================
PASS: new: Test "Does annotating 'new' with a type work as desired?" passed.


Running test new/Referring to inner classes as {super}.{inner} confused ajc.
Commandline: abc -d new new/InnerClassNaming.java 
Abc started on Fri Jul 30 10:03:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MyAspect... 
Transforming InnerClassNaming... 
Transforming InnerClassNaming$MyListener... 
Abc finished on Fri Jul 30 10:03:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 705 millisec.)
------------------------------------------------
[ 07.801% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.142% ] Create polyglot compiler:  1
[ 60.709% ] Polyglot phases:  428
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.142% ] Intertype Adjuster:  1
[ 00.993% ] Retrieving bodies:  7
[ 05.390% ] Update pattern matcher:  38
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.709% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 03.546% ] Weaving advice:  25
[ 00.142% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.241% ] Soot Packs:  44
[ 14.184% ] Soot Writing Output:  100
================================================
PASS: new: Test "Referring to inner classes as {super}.{inner} confused ajc." passed.


Running test new/Advice on advice
Commandline: abc -d new new/AdviceOnAdvice.java 
Abc started on Fri Jul 30 10:03:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Class1... 
Transforming AdviceOnAdvice... 
Transforming Aspect1... 
Transforming Aspect2b... 
Transforming Abc$access$Aspect1$around$650... 
Abc finished on Fri Jul 30 10:03:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 381 millisec.)
------------------------------------------------
[ 14.173% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 25.984% ] Polyglot phases:  99
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.362% ] Retrieving bodies:  9
[ 06.299% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.837% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.050% ] Weaving advice:  4
[ 00.262% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.273% ] Soot Packs:  62
[ 31.759% ] Soot Writing Output:  121
================================================
PASS: new: Test "Advice on advice" passed.


Running test new/Introductions on other introductions
Commandline: abc -d new new/IntroOnIntro.java 
Abc started on Fri Jul 30 10:03:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IntroOnIntro... 
Transforming Aspect1... 
Transforming AComposer... 
Transforming AComposer$HasManager... 
Transforming Class1... 
Abc finished on Fri Jul 30 10:03:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 451 millisec.)
------------------------------------------------
[ 12.639% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.938% ] Polyglot phases:  126
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.222% ] Intertype Adjuster:  1
[ 03.991% ] Retrieving bodies:  18
[ 05.765% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.217% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.222% ] Add aspect code:  1
[ 00.222% ] Weaving advice:  1
[ 00.222% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 34.590% ] Soot Packs:  156
[ 11.973% ] Soot Writing Output:  54
================================================
PASS: new: Test "Introductions on other introductions" passed.


Running test new/Putting advice on array constructors.
Commandline: abc -d new new/Orleans.java 
Abc started on Fri Jul 30 10:03:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ResourceAccounting... 
Transforming Orleans... 
Abc finished on Fri Jul 30 10:03:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 237 millisec.)
------------------------------------------------
[ 22.785% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.928% ] Polyglot phases:  97
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.110% ] Retrieving bodies:  5
[ 10.549% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.844% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.422% ] Add aspect code:  1
[ 00.422% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.080% ] Soot Packs:  31
[ 08.861% ] Soot Writing Output:  21
================================================
PASS: new: Test "Putting advice on array constructors." passed.


Running test new/call points within block inner classes are doubled
Commandline: abc -d new new/DoubledCalls.java 
Abc started on Fri Jul 30 10:03:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming DoubledCalls... 
Transforming DoubledCalls$1... 
Abc finished on Fri Jul 30 10:03:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 310 millisec.)
------------------------------------------------
[ 36.452% ] Init. of Soot:  113
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.258% ] Polyglot phases:  100
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.935% ] Retrieving bodies:  6
[ 07.742% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.290% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.323% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.935% ] Soot Packs:  37
[ 08.065% ] Soot Writing Output:  25
================================================
PASS: new: Test "call points within block inner classes are doubled" passed.


Running test new/Gets and sets with other advice
Commandline: abc -d new new/Counting3.java 
Abc started on Fri Jul 30 10:03:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming JoinPointCounting... 
Transforming Counting3... 
Transforming Testing... 
Abc finished on Fri Jul 30 10:03:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 348 millisec.)
------------------------------------------------
[ 15.805% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.092% ] Polyglot phases:  143
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.586% ] Retrieving bodies:  9
[ 06.897% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.736% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.287% ] Add aspect code:  1
[ 00.575% ] Weaving advice:  2
[ 00.287% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.816% ] Soot Packs:  62
[ 10.920% ] Soot Writing Output:  38
================================================
PASS: new: Test "Gets and sets with other advice" passed.


Running test new/Compiler can compile correct strictfp modifiers
Commandline: abc -d new new/StrictFpCompile.java 
Abc started on Fri Jul 30 10:03:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/StrictFpCompile.java:18,9-24:1: Cannot declare a strictfp interface.
FAIL: Test "new/Compiler can compile correct strictfp modifiers" failed


Running test new/basic test of callsto pointcuts
Commandline: abc -d new new/CallsTo.java 
Abc started on Fri Jul 30 10:03:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming CallsTo... 
Transforming C... 
Transforming OnSubC... 
Transforming A... 
Abc finished on Fri Jul 30 10:03:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 477 millisec.)
------------------------------------------------
[ 11.950% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.210% ] Create polyglot compiler:  1
[ 27.463% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.210% ] Intertype Adjuster:  1
[ 02.725% ] Retrieving bodies:  13
[ 05.031% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.403% ] Compute advice lists:  21
[ 00.000% ] Intertype weave:  0
[ 00.210% ] Add aspect code:  1
[ 01.258% ] Weaving advice:  6
[ 00.210% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 33.333% ] Soot Packs:  159
[ 12.998% ] Soot Writing Output:  62
================================================
PASS: new: Test "basic test of callsto pointcuts" passed.


Running test new/package wildcards in packages
Commandline: abc -d new new/pack/PackageWildcards.java 
Abc started on Fri Jul 30 10:03:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pack.PackageWildcards... 
Transforming pack.Foo... 
Transforming Abc$access$pack_d_PackageWildcards$around$688... 
Transforming Abc$access$pack_d_PackageWildcards$around$687... 
Abc finished on Fri Jul 30 10:03:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 375 millisec.)
------------------------------------------------
[ 14.667% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.533% ] Polyglot phases:  107
[ 00.267% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.867% ] Retrieving bodies:  7
[ 25.067% ] Update pattern matcher:  94
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.067% ] Compute advice lists:  19
[ 00.000% ] Intertype weave:  0
[ 00.267% ] Add aspect code:  1
[ 01.067% ] Weaving advice:  4
[ 00.267% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.133% ] Soot Packs:  53
[ 08.800% ] Soot Writing Output:  33
================================================
PASS: new: Test "package wildcards in packages" passed.


Running test new/around advice on calls and receptions with lots of context
Commandline: abc -d new new/AroundCalls.java 
Abc started on Fri Jul 30 10:03:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming A... 
Transforming AroundCalls... 
Transforming C... 
Transforming Abc$access$A$around$692... 
Transforming Abc$access$A$around$691... 
Abc finished on Fri Jul 30 10:03:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 389 millisec.)
------------------------------------------------
[ 14.139% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.257% ] Create polyglot compiler:  1
[ 27.506% ] Polyglot phases:  107
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.085% ] Retrieving bodies:  12
[ 06.170% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 14.653% ] Compute advice lists:  57
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 02.057% ] Weaving advice:  8
[ 00.257% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.252% ] Soot Packs:  71
[ 13.625% ] Soot Writing Output:  53
================================================
PASS: new: Test "around advice on calls and receptions with lots of context" passed.


Running test new/! modifier and char in pointcut (no longer an error)
Commandline: abc -d new new/NotCharInPointcut.java 
Abc started on Fri Jul 30 10:03:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NotCharInPointcut... 
Transforming C... 
Transforming A... 
Abc finished on Fri Jul 30 10:03:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 481 millisec.)
------------------------------------------------
[ 11.850% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.659% ] Polyglot phases:  210
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.208% ] Intertype Adjuster:  1
[ 03.742% ] Retrieving bodies:  18
[ 06.029% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 06.653% ] Compute advice lists:  32
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.208% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.424% ] Soot Packs:  79
[ 11.227% ] Soot Writing Output:  54
================================================
PASS: new: Test "! modifier and char in pointcut (no longer an error)" passed.


Running test new/right number of aspect instances per cflow
Commandline: abc -d new new/CFlowObjects.java 
Abc started on Fri Jul 30 10:03:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Test... 
Transforming CFlowObjects... 
Abc finished on Fri Jul 30 10:03:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 301 millisec.)
------------------------------------------------
[ 18.272% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.535% ] Polyglot phases:  119
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.326% ] Retrieving bodies:  7
[ 08.306% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.661% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 03.987% ] Add aspect code:  12
[ 00.332% ] Weaving advice:  1
[ 00.332% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.615% ] Soot Packs:  47
[ 09.635% ] Soot Writing Output:  29
================================================
PASS: new: Test "right number of aspect instances per cflow" passed.


Running test new/many this's into around advice on calls
Commandline: abc -d new new/AroundCallsArgs.java 
Abc started on Fri Jul 30 10:03:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AroundCallsArgs... 
Transforming CP... 
Transforming CL... 
Transforming A... 
Transforming Abc$access$A$around$699... 
Abc finished on Fri Jul 30 10:03:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 321 millisec.)
------------------------------------------------
[ 17.134% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.810% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.804% ] Retrieving bodies:  9
[ 07.477% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.869% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.935% ] Weaving advice:  3
[ 00.312% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.199% ] Soot Packs:  52
[ 12.461% ] Soot Writing Output:  40
================================================
PASS: new: Test "many this's into around advice on calls" passed.


Running test new/Ensures introduction methods can have advice placed on them
Commandline: abc -d new new/Dominates.java 
Abc started on Fri Jul 30 10:03:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectExtends2... 
Transforming Dominates... 
Transforming Aspect00... 
Transforming ExtendsA... 
Transforming AspectExtends00... 
Transforming Aspect1... 
Transforming AspectExtends1... 
Transforming AspectExtends0... 
Transforming Aspect3... 
Transforming Aspect0... 
Transforming ExtendsFlags... 
Transforming ExtendsRunnable... 
Transforming Aspect2... 
Transforming AspectExtends3... 
Transforming A... 
Transforming Flags... 
Abc finished on Fri Jul 30 10:03:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 730 millisec.)
------------------------------------------------
[ 07.671% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.795% ] Polyglot phases:  181
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.137% ] Intertype Adjuster:  1
[ 03.562% ] Retrieving bodies:  26
[ 03.562% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.247% ] Compute advice lists:  31
[ 00.000% ] Intertype weave:  0
[ 00.274% ] Add aspect code:  2
[ 00.685% ] Weaving advice:  5
[ 00.137% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 34.110% ] Soot Packs:  249
[ 20.822% ] Soot Writing Output:  152
================================================
PASS: new: Test "Ensures introduction methods can have advice placed on them" passed.


Running test new/No boolean appearing in the 'if' clause for around advice with eachJVM()
Commandline: abc -d new new/PR355.java 
Abc started on Fri Jul 30 10:03:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR355... 
Transforming NonStaticAspect... 
Transforming StaticAspect... 
Transforming Cuts... 
Transforming InstanceOfAspect... 
Transforming C... 
Transforming InstanceOfAspect$abc$PerThis... 
Transforming Abc$access$StaticAspect$around$714... 
Transforming Abc$access$NonStaticAspect$around$717... 
Transforming Abc$access$InstanceOfAspect$around$720... 
Abc finished on Fri Jul 30 10:03:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 668 millisec.)
------------------------------------------------
[ 08.084% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.587% ] Polyglot phases:  211
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.994% ] Retrieving bodies:  20
[ 04.042% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.144% ] Compute advice lists:  21
[ 00.000% ] Intertype weave:  0
[ 00.150% ] Add aspect code:  1
[ 01.796% ] Weaving advice:  12
[ 00.150% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 32.635% ] Soot Packs:  218
[ 15.419% ] Soot Writing Output:  103
================================================
PASS: new: Test "No boolean appearing in the 'if' clause for around advice with eachJVM()" passed.


Running test new/Order of super introductions.
Commandline: abc -d new new/OrderOfExtendsPlusAndImplementsPlus.java 
Abc started on Fri Jul 30 10:03:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming S... 
Transforming OrderOfExtendsPlusAndImplementsPlus... 
Transforming B... 
Transforming C... 
Transforming I... 
Transforming D... 
Transforming A... 
Abc finished on Fri Jul 30 10:03:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 415 millisec.)
------------------------------------------------
[ 12.771% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.241% ] Create polyglot compiler:  1
[ 42.169% ] Polyglot phases:  175
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.241% ] Intertype Adjuster:  1
[ 05.060% ] Retrieving bodies:  21
[ 06.506% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.928% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.241% ] Add aspect code:  1
[ 00.241% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.386% ] Soot Packs:  68
[ 14.217% ] Soot Writing Output:  59
================================================
PASS: new: Test "Order of super introductions." passed.


Running test new/Ensuring backdoor methods are produced.
Commandline: abc -d new new/BackdoorMethods.java 
Abc started on Fri Jul 30 10:03:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/BackdoorMethods.java:55,48-53: No valid method call found for g() in _D.
FAIL: Test "new/Ensuring backdoor methods are produced." failed


Running test new/no duplicate advice methods in abstract aspects
Commandline: abc -d new new/GeneratingDuplicateNamedAdviceMethodsInAbstractAspects.java 
Abc started on Fri Jul 30 10:03:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming GeneratingDuplicateNamedAdviceMethodsInAbstractAspects... 
Transforming C... 
Transforming A... 
Transforming A$Inner... 
Abc finished on Fri Jul 30 10:03:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 422 millisec.)
------------------------------------------------
[ 12.796% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.237% ] Create polyglot compiler:  1
[ 36.493% ] Polyglot phases:  154
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.555% ] Retrieving bodies:  15
[ 05.687% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.081% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.237% ] Weaving advice:  1
[ 00.237% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.777% ] Soot Packs:  113
[ 10.900% ] Soot Writing Output:  46
================================================
PASS: new: Test "no duplicate advice methods in abstract aspects" passed.


Running test new/no duplicate advice methods in abstract aspects extended
Commandline: abc -d new new/GeneratingDuplicateNamedAdviceMethodsInAbstractAspectsWithExtendedAspect.java 
Abc started on Fri Jul 30 10:03:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming GeneratingDuplicateNamedAdviceMethodsInAbstractAspectsWithExtendedAspect... 
Transforming A... 
Transforming C... 
Transforming A$Inner... 
Transforming Abc$access$A$around$745... 
Transforming Abc$access$A$around$744... 
Abc finished on Fri Jul 30 10:03:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 500 millisec.)
------------------------------------------------
[ 10.800% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.400% ] Polyglot phases:  147
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.800% ] Retrieving bodies:  19
[ 04.800% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 20.200% ] Compute advice lists:  101
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.200% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.800% ] Soot Packs:  84
[ 13.000% ] Soot Writing Output:  65
================================================
PASS: new: Test "no duplicate advice methods in abstract aspects extended" passed.


Running test new/Putting after-constructor advice on the wrong types implementing the same interface.
Commandline: abc -d new new/AfterAdviceOnConstructorsOnTheWrongType.java 
Abc started on Fri Jul 30 10:03:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming I... 
Transforming A... 
Transforming C... 
Transforming AfterAdviceOnConstructorsOnTheWrongType... 
Abc finished on Fri Jul 30 10:03:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 360 millisec.)
------------------------------------------------
[ 15.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.278% ] Create polyglot compiler:  1
[ 47.500% ] Polyglot phases:  171
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.278% ] Intertype Adjuster:  1
[ 01.944% ] Retrieving bodies:  7
[ 06.667% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.222% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.278% ] Add aspect code:  1
[ 00.278% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.722% ] Soot Packs:  53
[ 10.833% ] Soot Writing Output:  39
================================================
PASS: new: Test "Putting after-constructor advice on the wrong types implementing the same interface." passed.


Running test new/Instantiating non-static inner classes in advice.
Commandline: abc -d new new/NonstaticInnerClassesInAspects.java 
Abc started on Fri Jul 30 10:03:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming A$Inner... 
Transforming A$Inner$InnerInner... 
Transforming C... 
Transforming NonstaticInnerClassesInAspects... 
Transforming A$Inner$InnerInner$InnerInnerInner... 
Transforming Abc$access$A$around$756... 
Transforming Abc$access$A$around$757... 
Transforming Abc$access$A$around$758... 
Abc finished on Fri Jul 30 10:03:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 583 millisec.)
------------------------------------------------
[ 09.434% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.172% ] Create polyglot compiler:  1
[ 30.017% ] Polyglot phases:  175
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.172% ] Intertype Adjuster:  1
[ 04.117% ] Retrieving bodies:  24
[ 04.288% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.460% ] Compute advice lists:  26
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.372% ] Weaving advice:  8
[ 00.172% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 21.441% ] Soot Packs:  125
[ 24.357% ] Soot Writing Output:  142
================================================
PASS: new: Test "Instantiating non-static inner classes in advice." passed.


Running test new/Referring to pointcut in of clauses
Commandline: abc -d new new/ReferringToPointcutsInAspect_PR316.java 
Abc started on Fri Jul 30 10:03:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ReferringToPointcutsInAspect_PR316... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 243 millisec.)
------------------------------------------------
[ 22.222% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.412% ] Create polyglot compiler:  1
[ 37.860% ] Polyglot phases:  92
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.412% ] Intertype Adjuster:  1
[ 02.058% ] Retrieving bodies:  5
[ 09.877% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.235% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.412% ] Add aspect code:  1
[ 00.412% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.638% ] Soot Packs:  38
[ 09.465% ] Soot Writing Output:  23
================================================
PASS: new: Test "Referring to pointcut in of clauses" passed.


Running test new/Confused referring to instance variables and locals
Commandline: abc -d new new/ScopesAndFields_PR191.java 
Abc started on Fri Jul 30 10:03:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ScopesAndFields_PR191... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 296 millisec.)
------------------------------------------------
[ 37.838% ] Init. of Soot:  112
[ 00.338% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 34.122% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.703% ] Retrieving bodies:  8
[ 07.770% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.351% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.446% ] Soot Packs:  25
[ 07.432% ] Soot Writing Output:  22
================================================
PASS: new: Test "Confused referring to instance variables and locals" passed.


Running test new/Parsing C+ expressions without parens in super introductions.
Commandline: abc -d new new/ParsingSubtypesIntroductions.java 
Abc started on Fri Jul 30 10:03:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming U... 
Transforming E... 
Transforming A... 
Transforming ParsingSubtypesIntroductions... 
Transforming C... 
Transforming D... 
Abc finished on Fri Jul 30 10:03:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 398 millisec.)
------------------------------------------------
[ 13.568% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.181% ] Polyglot phases:  144
[ 00.000% ] Resolve class names:  0
[ 00.251% ] Declare Parents:  1
[ 00.000% ] Intertype Adjuster:  0
[ 04.523% ] Retrieving bodies:  18
[ 06.030% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.020% ] Compute advice lists:  16
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.251% ] Weaving advice:  1
[ 00.251% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.593% ] Soot Packs:  74
[ 16.332% ] Soot Writing Output:  65
================================================
PASS: new: Test "Parsing C+ expressions without parens in super introductions." passed.


Running test new/Introducing methods on classes that implements inner-interfaces with +implements.
Commandline: abc -d new -Xlint:ignore new/IntroducingMethodsOnPlusImplementedInterfaces.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:03:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming A... 
Transforming IntroducingMethodsOnPlusImplementedInterfaces... 
Transforming A$I... 
Abc finished on Fri Jul 30 10:03:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 260 millisec.)
------------------------------------------------
[ 20.769% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.385% ] Create polyglot compiler:  1
[ 40.000% ] Polyglot phases:  104
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.385% ] Intertype Adjuster:  1
[ 02.308% ] Retrieving bodies:  6
[ 08.846% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.769% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.385% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.000% ] Soot Packs:  39
[ 11.154% ] Soot Writing Output:  29
================================================
PASS: new: Test "Introducing methods on classes that implements inner-interfaces with +implements." passed.


Running test new/Methods with the same name are generated when abstract aspects extend another abstract aspect.
Commandline: abc -d new new/AbstractAspectsExtendingAbstractAspectsGeneratesMethodsWithTheSameName_PR464.java 
Abc started on Fri Jul 30 10:03:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectC... 
Transforming AbstractAspectsExtendingAbstractAspectsGeneratesMethodsWithTheSameName_PR464... 
Transforming C... 
Transforming AspectA... 
Transforming AspectB... 
Abc finished on Fri Jul 30 10:03:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 309 millisec.)
------------------------------------------------
[ 31.068% ] Init. of Soot:  96
[ 00.000% ] Loading Jars:  0
[ 00.324% ] Create polyglot compiler:  1
[ 32.686% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.913% ] Retrieving bodies:  9
[ 07.767% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.294% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.324% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.269% ] Soot Packs:  41
[ 10.356% ] Soot Writing Output:  32
================================================
PASS: new: Test "Methods with the same name are generated when abstract aspects extend another abstract aspect." passed.


Running test new/Making sure final variables stay final.
Commandline: abc -d new new/RemovingFinals.java 
Abc started on Fri Jul 30 10:03:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming RemovingFinals... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 474 millisec.)
------------------------------------------------
[ 11.603% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.211% ] Create polyglot compiler:  1
[ 50.633% ] Polyglot phases:  240
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.211% ] Intertype Adjuster:  1
[ 03.376% ] Retrieving bodies:  16
[ 06.540% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.266% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.211% ] Add aspect code:  1
[ 05.485% ] Weaving advice:  26
[ 00.422% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 11.603% ] Soot Packs:  55
[ 08.439% ] Soot Writing Output:  40
================================================
PASS: new: Test "Making sure final variables stay final." passed.


Running test new/Problem resolving meta-joinpoint names with around advice on methods called from around advice.
Commandline: abc -d new new/AroundAdviceOnMethodsCalledInAroundAdvice.java 
Abc started on Fri Jul 30 10:03:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming AroundAdviceOnMethodsCalledInAroundAdvice... 
Transforming C... 
Transforming Expect... 
Transforming A... 
Transforming Abc$access$A$around$775... 
Transforming Abc$access$A$around$776... 
Abc finished on Fri Jul 30 10:03:44 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1159 millisec.)
------------------------------------------------
[ 08.714% ] Init. of Soot:  101
[ 00.000% ] Loading Jars:  0
[ 00.086% ] Create polyglot compiler:  1
[ 18.723% ] Polyglot phases:  217
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.847% ] Retrieving bodies:  33
[ 02.071% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.157% ] Compute advice lists:  25
[ 00.000% ] Intertype weave:  0
[ 00.086% ] Add aspect code:  1
[ 17.084% ] Weaving advice:  198
[ 00.173% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 32.269% ] Soot Packs:  374
[ 15.789% ] Soot Writing Output:  183
================================================
PASS: new: Test "Problem resolving meta-joinpoint names with around advice on methods called from around advice." passed.


Running test new/Make sure that names of lifted local classes are right when referenced in call-site advice
Commandline: abc -d new new/CallsAndLocalClasses.java 
Abc started on Fri Jul 30 10:03:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Outer... 
Transforming Foo... 
Transforming Outer$1... 
Transforming CallsAndLocalClasses... 
Abc finished on Fri Jul 30 10:03:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 346 millisec.)
------------------------------------------------
[ 19.653% ] Init. of Soot:  68
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.994% ] Polyglot phases:  128
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.468% ] Retrieving bodies:  12
[ 07.225% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.312% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.289% ] Add aspect code:  1
[ 00.578% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.341% ] Soot Packs:  60
[ 12.139% ] Soot Writing Output:  42
================================================
before toString
before toString
PASS: new: Test "Make sure that names of lifted local classes are right when referenced in call-site advice" passed.


Running test new/matching for throws clause
Commandline: abc -d new new/ThrowsMatching.java 
Abc started on Fri Jul 30 10:03:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming E1... 
Transforming ThrowsMatching... 
Transforming C... 
Abc finished on Fri Jul 30 10:03:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 327 millisec.)
------------------------------------------------
[ 33.639% ] Init. of Soot:  110
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.416% ] Polyglot phases:  106
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.141% ] Retrieving bodies:  7
[ 07.339% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.223% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.306% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.456% ] Soot Packs:  44
[ 09.480% ] Soot Writing Output:  31
================================================
PASS: new: Test "matching for throws clause" passed.


Running test new/holding onto proceed calls in a closure-like way
Commandline: abc -d new new/HoldProceed.java 
Abc started on Fri Jul 30 10:03:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at HoldProceed.java:17,12-18: The exception java.lang.Exception must be either caught or declared to be thrown
FAIL: Test "new/holding onto proceed calls in a closure-like way" failed


Running test new/basic test of declare soft
Commandline: abc -d new new/DeclareSoft.java 
Abc started on Fri Jul 30 10:03:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at DeclareSoft.java:62,8-37: The exception java.io.FileNotFoundException must be either caught or declared to be thrown
Semantic Error at DeclareSoft.java:63,26-44: The exception java.io.IOException must be either caught or declared to be thrown
FAIL: Test "new/basic test of declare soft" failed


Running test new/advice on calls to constructors of anonymous inners and access to context
Commandline: abc -d new new/NewAnonymous.java 
Abc started on Fri Jul 30 10:03:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming C$1... 
Transforming NewAnonymous... 
Abc finished on Fri Jul 30 10:03:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 225 millisec.)
------------------------------------------------
[ 24.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.444% ] Create polyglot compiler:  1
[ 28.000% ] Polyglot phases:  63
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.444% ] Intertype Adjuster:  1
[ 03.556% ] Retrieving bodies:  8
[ 05.778% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.778% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.444% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.444% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.000% ] Soot Packs:  45
[ 15.111% ] Soot Writing Output:  34
================================================
PASS: new: Test "advice on calls to constructors of anonymous inners and access to context" passed.


Running test new/Cannot bind a name.
Commandline: abc -d new new/CannotReferenceSuper.java 
Abc started on Fri Jul 30 10:03:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "Cannot bind a name." passed.


Running test new/innerAspectAccess/inner aspects can't access outer pointcuts
Commandline: abc -d new/innerAspectAccess new/innerAspectAccess/Driver.java 
Abc started on Fri Jul 30 10:03:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Driver... 
Transforming Outer... 
Transforming Outer$Inner... 
Abc finished on Fri Jul 30 10:03:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 304 millisec.)
------------------------------------------------
[ 18.092% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.329% ] Create polyglot compiler:  1
[ 39.474% ] Polyglot phases:  120
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.961% ] Retrieving bodies:  9
[ 07.566% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.645% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.329% ] Add aspect code:  1
[ 00.329% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.105% ] Soot Packs:  52
[ 12.171% ] Soot Writing Output:  37
================================================
PASS: new/innerAspectAccess: Test "inner aspects can't access outer pointcuts" passed.


Running test new/implements and extends are introduced before methods and fields
Commandline: abc -d new new/IntroOrder.java 
Abc started on Fri Jul 30 10:03:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IntroOrder... 
Transforming A2... 
Transforming Persistor... 
Transforming Persist... 
Transforming Class2... 
Transforming A1... 
Transforming Persist$HasPersistor... 
Transforming Class1... 
Abc finished on Fri Jul 30 10:03:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 428 millisec.)
------------------------------------------------
[ 20.093% ] Init. of Soot:  86
[ 00.000% ] Loading Jars:  0
[ 00.234% ] Create polyglot compiler:  1
[ 26.168% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.234% ] Intertype Adjuster:  1
[ 01.869% ] Retrieving bodies:  8
[ 06.075% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.168% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.467% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.458% ] Soot Packs:  79
[ 25.234% ] Soot Writing Output:  108
================================================
PASS: new: Test "implements and extends are introduced before methods and fields" passed.


Running test new/a static/inner aspect of a inner class of an aspect is pulled to the top level as static
Commandline: abc -d new new/StaticInnerAspect.java 
Abc started on Fri Jul 30 10:03:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming StaticInnerAspect... 
Transforming Aspect$InnerClass... 
Transforming Aspect$InnerClass$InnerAspect... 
Abc finished on Fri Jul 30 10:03:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 257 millisec.)
------------------------------------------------
[ 20.623% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.354% ] Polyglot phases:  96
[ 00.389% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.556% ] Retrieving bodies:  4
[ 09.339% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.778% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.389% ] Add aspect code:  1
[ 00.389% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.342% ] Soot Packs:  42
[ 12.840% ] Soot Writing Output:  33
================================================
PASS: new: Test "a static/inner aspect of a inner class of an aspect is pulled to the top level as static" passed.


Running test new/Crashes with privileged aspect.
Commandline: abc -d new new/Privileged.java 
Abc started on Fri Jul 30 10:03:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PrivilegedAspect... 
Transforming Privileged... 
Transforming OtherClass... 
Abc finished on Fri Jul 30 10:03:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 311 millisec.)
------------------------------------------------
[ 39.228% ] Init. of Soot:  122
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.582% ] Polyglot phases:  92
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.322% ] Intertype Adjuster:  1
[ 01.608% ] Retrieving bodies:  5
[ 07.717% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.643% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.322% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.322% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.219% ] Soot Packs:  38
[ 08.039% ] Soot Writing Output:  25
================================================
PASS: new: Test "Crashes with privileged aspect." passed.


Running test new/join points exist in the execution of field initializers
Commandline: abc -d new new/FieldInitializerJoinPoints.java 
Abc started on Fri Jul 30 10:03:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming FieldInitializerJoinPoints... 
Abc finished on Fri Jul 30 10:03:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 429 millisec.)
------------------------------------------------
[ 12.821% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.233% ] Create polyglot compiler:  1
[ 38.228% ] Polyglot phases:  164
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.429% ] Retrieving bodies:  19
[ 05.828% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.196% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.466% ] Weaving advice:  2
[ 00.233% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.814% ] Soot Packs:  85
[ 13.753% ] Soot Writing Output:  59
================================================
Test failed, compiled class behaved incorrectly
Message: fail jcount: 1 > 0
org.aspectj.bridge.AbortException: jcount: 1 > 0
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:462)
	at FieldInitializerJoinPoints.main(FieldInitializerJoinPoints.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/join points exist in the execution of field initializers" failed


Running test new/privilegedAspects/privileged aspects
Commandline: abc -d new/privilegedAspects new/privilegedAspects/main/Main.java new/privilegedAspects/fish/PrivateClass.java new/privilegedAspects/fish/B.java new/privilegedAspects/fowl/C.java new/privilegedAspects/fowl/D.java 
Abc started on Fri Jul 30 10:03:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 8, should be 0
Actual errors found: 
Semantic Error at new/privilegedAspects/fowl/D.java:6,8-9: Could not find field or local variable "d".
Semantic Error at new/privilegedAspects/fowl/D.java:7,34-35: Could not find field or local variable "d".
Semantic Error at new/privilegedAspects/fowl/C.java:7,8-9: Could not find field or local variable "c".
Semantic Error at new/privilegedAspects/fish/B.java:8,8-9: Could not find field or local variable "b".
Semantic Error at new/privilegedAspects/fowl/C.java:8,34-35: Could not find field or local variable "c".
Semantic Error at new/privilegedAspects/fish/B.java:9,34-35: Could not find field or local variable "b".
Semantic Error at new/privilegedAspects/fish/PrivateClass.java:19,8-9: Could not find field or local variable "a".
Semantic Error at new/privilegedAspects/fish/PrivateClass.java:20,34-35: Could not find field or local variable "a".
FAIL: Test "new/privilegedAspects/privileged aspects" failed


Running test new/advice on field gets in privileged aspects
Commandline: abc -d new new/AdviceOnPrivileged.java 
Abc started on Fri Jul 30 10:03:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/AdviceOnPrivileged.java:32,41-44: Cannot access x in C from ExposeC.
FAIL: Test "new/advice on field gets in privileged aspects" failed


Running test new/Two anonymous classes in the same scope
Commandline: abc -d new new/TwoAnonymous.java 
Abc started on Fri Jul 30 10:03:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming TwoAnonymous... 
Transforming TwoAnonymous$1... 
Transforming TwoAnonymous$2... 
Transforming TwoAnonymous$3... 
Transforming TwoAnonymous$4... 
Abc finished on Fri Jul 30 10:03:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 363 millisec.)
------------------------------------------------
[ 15.702% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.427% ] Polyglot phases:  56
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.275% ] Intertype Adjuster:  1
[ 04.132% ] Retrieving bodies:  15
[ 15.978% ] Update pattern matcher:  58
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.306% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.275% ] Add aspect code:  1
[ 07.163% ] Weaving advice:  26
[ 00.275% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.110% ] Soot Packs:  73
[ 17.355% ] Soot Writing Output:  63
================================================
setting x
calling run: TwoAnonymous$1@9856db, [Ljava.lang.Object;@16e5bc3, TwoAnonymous$1@9856db
k
setting x
PASS: new: Test "Two anonymous classes in the same scope" passed.


Running test new/basic tests for initializer and staticinitializer PCDs
Commandline: abc -d new new/InitializerTest.java 
Abc started on Fri Jul 30 10:03:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming C... 
Transforming A... 
Transforming InitializerTest... 
Transforming I... 
Abc finished on Fri Jul 30 10:03:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 465 millisec.)
------------------------------------------------
[ 11.828% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.054% ] Polyglot phases:  163
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.215% ] Intertype Adjuster:  1
[ 03.441% ] Retrieving bodies:  16
[ 05.376% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.376% ] Compute advice lists:  25
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.806% ] Weaving advice:  27
[ 00.215% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.785% ] Soot Packs:  92
[ 12.903% ] Soot Writing Output:  60
================================================
Test failed, compiled class behaved incorrectly
Message: fail expected note "initialized I"
org.aspectj.bridge.AbortException: expected note "initialized I"
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.check(Tester.java:145)
	at org.aspectj.testing.Tester.check(Tester.java:133)
	at InitializerTest.main(InitializerTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/basic tests for initializer and staticinitializer PCDs" failed


Running test new/introduction of an initializer into a class
Commandline: abc -d new new/IntroductionOfInitializer.java 
Abc started on Fri Jul 30 10:03:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Foo... 
Transforming IntroductionOfInitializer... 
Abc finished on Fri Jul 30 10:03:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 358 millisec.)
------------------------------------------------
[ 25.419% ] Init. of Soot:  91
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.620% ] Polyglot phases:  149
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.235% ] Retrieving bodies:  8
[ 06.704% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.117% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.279% ] Add aspect code:  1
[ 00.279% ] Weaving advice:  1
[ 00.279% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.849% ] Soot Packs:  46
[ 09.218% ] Soot Writing Output:  33
================================================
PASS: new: Test "introduction of an initializer into a class" passed.


Running test new/access/some method accessibility tests, particularly package-protected and inheritance
Commandline: abc -d new/access new/access/Test1.java new/access/pc/C.java new/access/psub/SubC.java new/access/psub/A.java 
Abc started on Fri Jul 30 10:03:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming psub.SubC... 
Transforming pc.C... 
Transforming psub.A... 
Transforming psub.A$Marker... 
Transforming Test1... 
Abc finished on Fri Jul 30 10:03:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 526 millisec.)
------------------------------------------------
[ 19.202% ] Init. of Soot:  101
[ 00.000% ] Loading Jars:  0
[ 00.190% ] Create polyglot compiler:  1
[ 31.559% ] Polyglot phases:  166
[ 00.190% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.091% ] Retrieving bodies:  11
[ 04.753% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.901% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.943% ] Weaving advice:  26
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.217% ] Soot Packs:  59
[ 23.954% ] Soot Writing Output:  126
================================================
PASS: new/access: Test "some method accessibility tests, particularly package-protected and inheritance" passed.


Running test new/fairly monotonous (and non-covering) tests for expanded dot patterns
Commandline: abc -d new new/ExpandedDotDotPattern.java 
Abc started on Fri Jul 30 10:03:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming D... 
Transforming A... 
Transforming ExpandedDotDotPattern... 
Transforming Aspect... 
Transforming B... 
Transforming E... 
Transforming F... 
Transforming C... 
Transforming I... 
Abc finished on Fri Jul 30 10:03:52 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1253 millisec.)
------------------------------------------------
[ 04.310% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.361% ] Polyglot phases:  205
[ 00.080% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.512% ] Retrieving bodies:  44
[ 01.995% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 22.346% ] Compute advice lists:  280
[ 00.000% ] Intertype weave:  0
[ 00.080% ] Add aspect code:  1
[ 04.709% ] Weaving advice:  59
[ 00.160% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 31.205% ] Soot Packs:  391
[ 15.243% ] Soot Writing Output:  191
================================================
execution(void A.foo())
(.., ..)execution(void A.foo())
(int)execution(void B.foo(int))
(.., ..)execution(void B.foo(int))
(.., int)execution(void B.foo(int))
(.., ..)execution(void C.foo(int, int))
(.., int)execution(void C.foo(int, int))
(.., ..)execution(void D.foo(int, int, int))
(.., int)execution(void D.foo(int, int, int))
(.., ..)execution(void E.foo(int, int, int, int))
(.., int)execution(void E.foo(int, int, int, int))
(.., ..)execution(void F.foo(int, int, int, int, int))
(.., int)execution(void F.foo(int, int, int, int, int))
PASS: new: Test "fairly monotonous (and non-covering) tests for expanded dot patterns" passed.


Running test new/field patterns and subtyping
Commandline: abc -d new new/FieldPatterns.java 
Abc started on Fri Jul 30 10:03:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming A... 
Transforming C... 
Transforming FieldPatterns... 
Transforming SuperC... 
Abc finished on Fri Jul 30 10:03:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 350 millisec.)
------------------------------------------------
[ 15.714% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.286% ] Create polyglot compiler:  1
[ 44.000% ] Polyglot phases:  154
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.857% ] Retrieving bodies:  10
[ 06.857% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.000% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.571% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.000% ] Soot Packs:  56
[ 11.714% ] Soot Writing Output:  41
================================================
PASS: new: Test "field patterns and subtyping" passed.


Running test new/Checking formal matching as in Roeder's bug in 0.7b10
Commandline: abc -d new new/FormalMatching.java 
Abc started on Fri Jul 30 10:03:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming FormalMatching... 
Abc finished on Fri Jul 30 10:03:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 485 millisec.)
------------------------------------------------
[ 11.340% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.237% ] Polyglot phases:  200
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.299% ] Retrieving bodies:  16
[ 05.155% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.474% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.979% ] Weaving advice:  29
[ 00.206% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.557% ] Soot Packs:  90
[ 11.753% ] Soot Writing Output:  57
================================================
PASS: new: Test "Checking formal matching as in Roeder's bug in 0.7b10" passed.


Running test new/Introducing synchronized methods on interfaces.
Commandline: abc -d new new/SynchronizedMethodsOnInterfaces.java 
Abc started on Fri Jul 30 10:03:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectC... 
Transforming D... 
Transforming AspectI... 
Transforming C... 
Transforming I... 
Transforming SynchronizedMethodsOnInterfaces... 
Abc finished on Fri Jul 30 10:03:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 506 millisec.)
------------------------------------------------
[ 18.972% ] Init. of Soot:  96
[ 00.000% ] Loading Jars:  0
[ 00.198% ] Create polyglot compiler:  1
[ 35.375% ] Polyglot phases:  179
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.198% ] Intertype Adjuster:  1
[ 03.755% ] Retrieving bodies:  19
[ 05.731% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.988% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.198% ] Add aspect code:  1
[ 00.198% ] Weaving advice:  1
[ 00.198% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.858% ] Soot Packs:  60
[ 22.332% ] Soot Writing Output:  113
================================================
PASS: new: Test "Introducing synchronized methods on interfaces." passed.


Running test new/The pointcut params (..,int..) is not recognizing (Object,int,Object).
Commandline: abc -d new new/Params.java 
Abc started on Fri Jul 30 10:03:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming Params... 
Transforming B... 
Transforming C... 
Transforming A... 
Transforming ParamsAspect... 
Abc finished on Fri Jul 30 10:03:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 899 millisec.)
------------------------------------------------
[ 06.007% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.805% ] Polyglot phases:  223
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.783% ] Retrieving bodies:  43
[ 11.235% ] Update pattern matcher:  101
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.003% ] Compute advice lists:  27
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.001% ] Weaving advice:  9
[ 00.111% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 34.705% ] Soot Packs:  312
[ 14.349% ] Soot Writing Output:  129
================================================
PASS: new: Test "The pointcut params (..,int..) is not recognizing (Object,int,Object)." passed.


Running test new/calls advice on array objects causes error in code generation
Commandline: abc -d new new/CallsToArray.java 
Abc started on Fri Jul 30 10:03:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at CallsToArray.java:6,20-29: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
FAIL: Test "new/calls advice on array objects causes error in code generation" failed


Running test new/join points in field initializers aren't showing up.
Commandline: abc -d new new/NonexistentFieldInitializers.java 
Abc started on Fri Jul 30 10:03:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NonexistentFieldInitializers... 
Transforming A... 
Abc finished on Fri Jul 30 10:03:55 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 242 millisec.)
------------------------------------------------
[ 21.901% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.413% ] Create polyglot compiler:  1
[ 42.149% ] Polyglot phases:  102
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.066% ] Retrieving bodies:  5
[ 09.917% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.240% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.413% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.223% ] Soot Packs:  32
[ 08.678% ] Soot Writing Output:  21
================================================
PASS: new: Test "join points in field initializers aren't showing up." passed.


Running test new/Handlers problem
Commandline: abc -d new new/PR318.java 
Abc started on Fri Jul 30 10:03:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming PR318... 
Transforming Bar... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:03:55 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 340 millisec.)
------------------------------------------------
[ 40.000% ] Init. of Soot:  136
[ 00.000% ] Loading Jars:  0
[ 00.294% ] Create polyglot compiler:  1
[ 22.647% ] Polyglot phases:  77
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.412% ] Retrieving bodies:  15
[ 07.941% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.176% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.294% ] Add aspect code:  1
[ 00.294% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.471% ] Soot Packs:  39
[ 11.471% ] Soot Writing Output:  39
================================================
PASS: new: Test "Handlers problem" passed.


Running test new/work nicely with inner class method look-up rules and call-site advice
Commandline: abc -d new new/InnerMethods.java 
Abc started on Fri Jul 30 10:03:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming Sub... 
Transforming A... 
Transforming Super... 
Transforming InnerMethods... 
Transforming Sub$SubInner... 
Abc finished on Fri Jul 30 10:03:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 311 millisec.)
------------------------------------------------
[ 17.363% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.193% ] Polyglot phases:  125
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.894% ] Retrieving bodies:  9
[ 07.717% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.608% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.322% ] Weaving advice:  1
[ 00.322% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.077% ] Soot Packs:  50
[ 13.505% ] Soot Writing Output:  42
================================================
PASS: new: Test "work nicely with inner class method look-up rules and call-site advice" passed.


Running test new/strictfp modifier allowed on advice
Commandline: abc -d new new/StrictFPAdvice.java 
Abc started on Fri Jul 30 10:03:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming StrictFPAdvice... 
Transforming Abc$access$A$around$892... 
Abc finished on Fri Jul 30 10:03:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 216 millisec.)
------------------------------------------------
[ 24.537% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.463% ] Create polyglot compiler:  1
[ 23.148% ] Polyglot phases:  50
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 12.037% ] Retrieving bodies:  26
[ 06.019% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.389% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.389% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.519% ] Soot Packs:  40
[ 12.500% ] Soot Writing Output:  27
================================================
PASS: new: Test "strictfp modifier allowed on advice" passed.


Running test new/No argthis was being created for calls advice.
Commandline: abc -d new new/PR415.java 
Abc started on Fri Jul 30 10:03:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ASTObject... 
Transforming Loses... 
Transforming PR415... 
Transforming Abc$access$Loses$around$894... 
Transforming Abc$access$Loses$around$895... 
Transforming Abc$access$Loses$around$896... 
Transforming Abc$access$Loses$around$897... 
Transforming Abc$access$Loses$around$898... 
Transforming Abc$access$Loses$around$899... 
Abc finished on Fri Jul 30 10:03:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 549 millisec.)
------------------------------------------------
[ 09.836% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.182% ] Create polyglot compiler:  1
[ 23.862% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.461% ] Retrieving bodies:  19
[ 12.750% ] Update pattern matcher:  70
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 07.104% ] Compute advice lists:  39
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 03.097% ] Weaving advice:  17
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 24.408% ] Soot Packs:  134
[ 15.301% ] Soot Writing Output:  84
================================================
PASS: new: Test "No argthis was being created for calls advice." passed.


Running test new/Ensuring no advice with instanceof(..) is run on static methods.
Commandline: abc -d new new/StaticMethodsShouldNotReceiveInstanceofAdvice.java 
Abc started on Fri Jul 30 10:03:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PutsAdviceOnStaticMethods... 
Transforming StaticMethodsShouldNotReceiveInstanceofAdvice... 
Transforming ClassWithStaticMethods... 
Abc finished on Fri Jul 30 10:03:57 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 471 millisec.)
------------------------------------------------
[ 18.896% ] Init. of Soot:  89
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.244% ] Polyglot phases:  166
[ 00.212% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.972% ] Retrieving bodies:  14
[ 05.308% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.185% ] Compute advice lists:  15
[ 00.000% ] Intertype weave:  0
[ 00.212% ] Add aspect code:  1
[ 00.212% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.163% ] Soot Packs:  62
[ 20.594% ] Soot Writing Output:  97
================================================
PASS: new: Test "Ensuring no advice with instanceof(..) is run on static methods." passed.


Running test new/Null pointer on gets advice showing the case causing the error
Commandline: abc -d new new/NullPointerOnGetsSimple.java 
Abc started on Fri Jul 30 10:03:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NullPointerOnGetsSimple... 
Transforming Aspect... 
Transforming PrintService... 
Transforming Abc$access$Aspect$around$913... 
Abc finished on Fri Jul 30 10:03:57 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 442 millisec.)
------------------------------------------------
[ 12.217% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.226% ] Create polyglot compiler:  1
[ 21.041% ] Polyglot phases:  93
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.357% ] Retrieving bodies:  6
[ 05.656% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.905% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.679% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 39.593% ] Soot Packs:  175
[ 18.326% ] Soot Writing Output:  81
================================================
around
PASS: new: Test "Null pointer on gets advice showing the case causing the error" passed.


Running test new/try to make sure that dynamic JoinPoint objects aren't generated when used inside of if (false) { ... }
Commandline: abc -d new new/IfdefsAndAdvice.java 
Abc started on Fri Jul 30 10:03:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $i0 = i1 + i2
Getting position for a untagged source line $i0 = i1 + i2
Getting position for a untagged source line $i0 = i1 + i2
Getting position for a untagged source line $i0 = i1 + i2
Transforming IfdefsAndAdvice... 
Transforming A... 
Abc finished on Fri Jul 30 10:03:58 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 564 millisec.)
------------------------------------------------
[ 24.645% ] Init. of Soot:  139
[ 00.000% ] Loading Jars:  0
[ 00.177% ] Create polyglot compiler:  1
[ 18.617% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.078% ] Retrieving bodies:  23
[ 02.305% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.482% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.177% ] Add aspect code:  1
[ 06.738% ] Weaving advice:  38
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.255% ] Soot Packs:  165
[ 11.525% ] Soot Writing Output:  65
================================================
PASS: new: Test "try to make sure that dynamic JoinPoint objects aren't generated when used inside of if (false) { ... }" passed.


Running test new/within and withincode (doesn't all work due to local class name issues)
Commandline: abc -d new new/WithinInners.java 
Abc started on Fri Jul 30 10:03:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming WithinInners... 
Transforming C... 
Transforming C$1... 
Transforming A... 
Transforming C$1Inner... 
Transforming Abc$access$A$around$920... 
Transforming Abc$access$A$around$923... 
Abc finished on Fri Jul 30 10:03:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 474 millisec.)
------------------------------------------------
[ 11.603% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.211% ] Create polyglot compiler:  1
[ 40.717% ] Polyglot phases:  193
[ 00.211% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.376% ] Retrieving bodies:  16
[ 05.274% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.485% ] Compute advice lists:  26
[ 00.000% ] Intertype weave:  0
[ 00.211% ] Add aspect code:  1
[ 01.266% ] Weaving advice:  6
[ 00.633% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 17.300% ] Soot Packs:  82
[ 13.713% ] Soot Writing Output:  65
================================================
TEXT
write( String )
text
Test failed, compiled class behaved incorrectly
Message: fail compare: around-in:run:around-out: !equals before-within:around-in:run:around-out:
org.aspectj.bridge.AbortException: compare: around-in:run:around-out: !equals before-within:around-in:run:around-out:
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:770)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:754)
	at WithinInners.main(WithinInners.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/within and withincode (doesn't all work due to local class name issues)" failed


Running test new/around advice on calls within inner classes (including protected method calls)
Commandline: abc -d new -1.3 new/AroundInnerCalls13.java 
*** Option -1.3 ignored: abc should be able to handle both 1.3 and 1.4.
Abc started on Fri Jul 30 10:03:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line uniqueArgLocal9 = "X.toString()"
Transforming AroundInnerCalls13... 
Transforming Outer... 
Transforming Outer$Inner... 
Transforming A... 
Transforming Outer$InnerRandom... 
Transforming Outer$1... 
Transforming Abc$access$A$around$926... 
Abc finished on Fri Jul 30 10:04:00 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1071 millisec.)
------------------------------------------------
[ 10.551% ] Init. of Soot:  113
[ 00.000% ] Loading Jars:  0
[ 00.093% ] Create polyglot compiler:  1
[ 17.087% ] Polyglot phases:  183
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.093% ] Intertype Adjuster:  1
[ 01.587% ] Retrieving bodies:  17
[ 03.175% ] Update pattern matcher:  34
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.148% ] Compute advice lists:  23
[ 00.000% ] Intertype weave:  0
[ 00.093% ] Add aspect code:  1
[ 13.632% ] Weaving advice:  146
[ 00.093% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 39.122% ] Soot Packs:  419
[ 12.325% ] Soot Writing Output:  132
================================================
Outer.foo() calls Outer.Inner.mi()
Outer@1b5b3df.foo calls Outer$Inner@33f866.mi
Outer.Inner.mi() calls PrintStream.println(..)
Outer$Inner@33f866.mi calls java.io.PrintStream@1f91fd4.println
.
Outer.foo() calls Outer.InnerRandom.nextHook(..)
Outer@1b5b3df.foo calls Outer$InnerRandom@1875f92.nextHook
Outer.InnerRandom.nextHook(..) calls Random.next(..)
Outer$InnerRandom@1875f92.nextHook calls Outer$InnerRandom@1875f92.next
Outer.foo() calls Random.nextInt(..)
Outer@1b5b3df.foo calls X.nextInt
PASS: new: Test "around advice on calls within inner classes (including protected method calls)" passed.


Running test new/around advice on calls within inner classes (including protected method calls)
Commandline: abc -d new -1.4 new/AroundInnerCalls.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
Abc started on Fri Jul 30 10:04:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line uniqueArgLocal9 = "X.toString()"
Transforming AroundInnerCalls... 
Transforming Outer... 
Transforming Outer$Inner... 
Transforming Outer$1... 
Transforming Outer$InnerRandom... 
Transforming A... 
Transforming Abc$access$A$around$929... 
Abc finished on Fri Jul 30 10:04:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 815 millisec.)
------------------------------------------------
[ 07.362% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.123% ] Create polyglot compiler:  1
[ 29.448% ] Polyglot phases:  240
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.209% ] Retrieving bodies:  18
[ 04.417% ] Update pattern matcher:  36
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.086% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 00.123% ] Add aspect code:  1
[ 07.239% ] Weaving advice:  59
[ 00.123% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 31.166% ] Soot Packs:  254
[ 15.706% ] Soot Writing Output:  128
================================================
Outer.foo() calls Outer.Inner.mi()
Outer@17c378c.foo calls Outer$Inner@22e1b5.mi
Outer.Inner.mi() calls PrintStream.println(..)
Outer$Inner@22e1b5.mi calls java.io.PrintStream@105c33.println
.
Outer.foo() calls Outer.InnerRandom.nextHook(..)
Outer@17c378c.foo calls Outer$InnerRandom@1551bf.nextHook
Outer.InnerRandom.nextHook(..) calls Random.next(..)
Outer$InnerRandom@1551bf.nextHook calls Outer$InnerRandom@1551bf.next
Outer.foo() calls Random.nextInt(..)
Outer@17c378c.foo calls X.nextInt
Test failed, compiled class behaved incorrectly
Message: fail expected note "Outer.InnerRandom.nextHook(..) calls Outer.InnerRandom.next(..)"
org.aspectj.bridge.AbortException: expected note "Outer.InnerRandom.nextHook(..) calls Outer.InnerRandom.next(..)"
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.check(Tester.java:145)
	at org.aspectj.testing.Tester.check(Tester.java:133)
	at AroundInnerCalls.abc$static$proceed$A$around$929(AroundInnerCalls.java:9)
	at A.around$929(AroundInnerCalls.java:41)
	at AroundInnerCalls.main(AroundInnerCalls.java:5)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/around advice on calls within inner classes (including protected method calls)" failed


Running test new/Arguments to runNext should be final when needed
Commandline: abc -d new new/Finals.java 
Abc started on Fri Jul 30 10:04:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming Finals... 
Transforming Aspect... 
Transforming Aspect$1... 
Transforming Aspect$2... 
Transforming Abc$access$Aspect$around$933... 
Transforming Abc$access$Aspect$around$932... 
Abc finished on Fri Jul 30 10:04:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 443 millisec.)
------------------------------------------------
[ 12.867% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.309% ] Polyglot phases:  183
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.226% ] Intertype Adjuster:  1
[ 02.257% ] Retrieving bodies:  10
[ 06.095% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.032% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.226% ] Add aspect code:  1
[ 01.580% ] Weaving advice:  7
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.639% ] Soot Packs:  87
[ 13.770% ] Soot Writing Output:  61
================================================
PASS: new: Test "Arguments to runNext should be final when needed" passed.


Running test new/Method introductions
Commandline: abc -d new new/MethodIntroductions.java 
Abc started on Fri Jul 30 10:04:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ExtendsAbstractSuper... 
Transforming ExtendsExtendsSuper... 
Transforming I... 
Transforming AbstractSuper... 
Transforming ExtendsSuper... 
Transforming AbstractSuperNoIntro... 
Transforming ExtendsAbstractSuperNoIntro... 
Transforming MethodIntroductions... 
Transforming MethodIntroductions$1... 
Transforming Super... 
Transforming MethodIntroductions$2... 
Transforming Introducer... 
Transforming ExtendsExtendsAbstractSuperNoIntro... 
Transforming MethodIntroductions$3... 
Transforming ExtendsExtendsAbstractSuper... 
Abc finished on Fri Jul 30 10:04:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 681 millisec.)
------------------------------------------------
[ 16.740% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 25.257% ] Polyglot phases:  172
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.294% ] Intertype Adjuster:  2
[ 03.524% ] Retrieving bodies:  24
[ 04.112% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.909% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.294% ] Weaving advice:  2
[ 00.147% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 31.571% ] Soot Packs:  215
[ 16.153% ] Soot Writing Output:  110
================================================
InvocationTargetException while trying to run compiled class: java.lang.IncompatibleClassChangeError
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.IncompatibleClassChangeError
	at MethodIntroductions.realMain(MethodIntroductions.java:35)
	at MethodIntroductions.main(MethodIntroductions.java:4)
	... 7 more
FAIL: Test "new/Method introductions" failed


Running test new/Putting an introduced method on each interface
Commandline: abc -d new new/IntroducedMethodsOnEachInterface.java 
Abc started on Fri Jul 30 10:04:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming IntroducedMethodsOnEachInterface... 
Transforming IntroducedMethodsOnEachInterface$1... 
Transforming C... 
Transforming B... 
Transforming J... 
Transforming A... 
Transforming IntroducedMethodsOnEachInterface$2... 
Transforming IntroducedMethodsOnEachInterface$3... 
Transforming H... 
Abc finished on Fri Jul 30 10:04:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 469 millisec.)
------------------------------------------------
[ 12.154% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.213% ] Create polyglot compiler:  1
[ 43.284% ] Polyglot phases:  203
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.426% ] Intertype Adjuster:  2
[ 02.985% ] Retrieving bodies:  14
[ 05.330% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.493% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.213% ] Add aspect code:  1
[ 00.213% ] Weaving advice:  1
[ 00.213% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.977% ] Soot Packs:  89
[ 14.499% ] Soot Writing Output:  68
================================================
PASS: new: Test "Putting an introduced method on each interface" passed.


Running test new/Extending interfaces
Commandline: abc -d new new/BindingInterfaces.java 
Abc started on Fri Jul 30 10:04:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming BindingInterfaces... 
Transforming BindingInterfaces$1... 
Transforming J... 
Transforming BindingInterfaces$2... 
Transforming BindingInterfaces$3... 
Transforming BindingInterfaces$4... 
Transforming Aspect... 
Transforming BindingInterfaces$5... 
Transforming K... 
Transforming BindingInterfaces$6... 
Abc finished on Fri Jul 30 10:04:03 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 819 millisec.)
------------------------------------------------
[ 23.321% ] Init. of Soot:  191
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 44.689% ] Polyglot phases:  366
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.076% ] Retrieving bodies:  17
[ 02.930% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.855% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.122% ] Add aspect code:  1
[ 00.122% ] Weaving advice:  1
[ 00.122% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 09.646% ] Soot Packs:  79
[ 16.117% ] Soot Writing Output:  132
================================================
PASS: new: Test "Extending interfaces" passed.


Running test new/Introducing private methods on interfaces
Commandline: abc -d new new/IntroducingPrivateMethodsOnInterfaces.java 
Abc started on Fri Jul 30 10:04:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming IntroducingPrivateMethodsOnInterfaces... 
Transforming AA... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 561 millisec.)
------------------------------------------------
[ 09.982% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.877% ] Polyglot phases:  162
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.535% ] Intertype Adjuster:  3
[ 02.674% ] Retrieving bodies:  15
[ 04.456% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.604% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.178% ] Add aspect code:  1
[ 00.178% ] Weaving advice:  1
[ 00.178% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 37.790% ] Soot Packs:  212
[ 13.547% ] Soot Writing Output:  76
================================================
PASS: new: Test "Introducing private methods on interfaces" passed.


Running test new/Issuing errors for assigning variables thisJoinPoint -- not assigning thisJoinPoint.
Commandline: abc -d new new/ThisJoinPointAssignments.java 
Abc started on Fri Jul 30 10:04:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ThisJoinPointAssignments... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 368 millisec.)
------------------------------------------------
[ 15.489% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 25.272% ] Polyglot phases:  93
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.174% ] Retrieving bodies:  8
[ 27.446% ] Update pattern matcher:  101
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.087% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.272% ] Add aspect code:  1
[ 07.880% ] Weaving advice:  29
[ 00.272% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.957% ] Soot Packs:  44
[ 08.152% ] Soot Writing Output:  30
================================================
PASS: new: Test "Issuing errors for assigning variables thisJoinPoint -- not assigning thisJoinPoint." passed.


Running test new/Static references inside of introduced bodies get bound correctly.
Commandline: abc -d new new/StaticIntroducedReferences.java 
Abc started on Fri Jul 30 10:04:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SuperA... 
Transforming A... 
Transforming StaticIntroducedReferences... 
Abc finished on Fri Jul 30 10:04:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 160 millisec.)
------------------------------------------------
[ 35.625% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.625% ] Create polyglot compiler:  1
[ 10.625% ] Polyglot phases:  17
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.625% ] Intertype Adjuster:  1
[ 03.125% ] Retrieving bodies:  5
[ 08.125% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.250% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.625% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.625% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 23.750% ] Soot Packs:  38
[ 15.000% ] Soot Writing Output:  24
================================================
PASS: new: Test "Static references inside of introduced bodies get bound correctly." passed.


Running test new/cflowObjectCreations/cflow and object creations [of eachcflow]
Commandline: abc -d new/cflowObjectCreations new/cflowObjectCreations/Driver.java 
Abc started on Fri Jul 30 10:04:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FTPConnection... 
Transforming FooBuilding... 
Transforming FTPServer... 
Transforming Driver... 
Abc finished on Fri Jul 30 10:04:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 619 millisec.)
------------------------------------------------
[ 25.687% ] Init. of Soot:  159
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 51.535% ] Polyglot phases:  319
[ 00.162% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.292% ] Retrieving bodies:  8
[ 04.039% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.969% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 01.939% ] Add aspect code:  12
[ 00.323% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.239% ] Soot Packs:  51
[ 05.816% ] Soot Writing Output:  36
================================================
PASS: new/cflowObjectCreations: Test "cflow and object creations [of eachcflow]" passed.


Running test new/twofiles/Doesn't import MightHaveAspect when compiling with more than 1 file. [eachobject]
Commandline: abc -d new/twofiles new/twofiles/TheObject.java new/twofiles/TheAspect.java 
Abc started on Fri Jul 30 10:04:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TheAspect... 
Transforming TheObject... 
Transforming TheAspect$abc$PerTarget... 
Abc finished on Fri Jul 30 10:04:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 318 millisec.)
------------------------------------------------
[ 32.704% ] Init. of Soot:  104
[ 00.000% ] Loading Jars:  0
[ 00.314% ] Create polyglot compiler:  1
[ 36.478% ] Polyglot phases:  116
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.314% ] Intertype Adjuster:  1
[ 00.943% ] Retrieving bodies:  3
[ 08.491% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.629% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.314% ] Add aspect code:  1
[ 00.314% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.264% ] Soot Packs:  39
[ 07.233% ] Soot Writing Output:  23
================================================
PASS: new/twofiles: Test "Doesn't import MightHaveAspect when compiling with more than 1 file. [eachobject]" passed.


Running test new/test binding to formals in calls to constructors (binding to null) (eachobject !!! now misnamed)
Commandline: abc -d new new/BindingThisInsteadOfFormal.java 
Abc started on Fri Jul 30 10:04:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BindingThisInsteadOfFormal... 
Transforming C... 
Transforming Aspect... 
Transforming Caller... 
Transforming Aspect$abc$PerThis... 
Abc finished on Fri Jul 30 10:04:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 416 millisec.)
------------------------------------------------
[ 14.183% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.625% ] Polyglot phases:  169
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.404% ] Retrieving bodies:  10
[ 06.490% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.923% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.481% ] Add aspect code:  2
[ 00.721% ] Weaving advice:  3
[ 00.240% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.952% ] Soot Packs:  83
[ 12.981% ] Soot Writing Output:  54
================================================
PASS: new: Test "test binding to formals in calls to constructors (binding to null) (eachobject !!! now misnamed)" passed.


Running test new/After advice isn't being woven into after throwing advice
Commandline: abc -d new new/AfterThrowingNotWoven.java 
Abc started on Fri Jul 30 10:04:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming DisabledException... 
Transforming FaultHandler... 
Transforming AfterThrowingNotWoven... 
Transforming FaultException... 
Transforming Server... 
Abc finished on Fri Jul 30 10:04:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 369 millisec.)
------------------------------------------------
[ 15.447% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.547% ] Polyglot phases:  157
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.878% ] Retrieving bodies:  18
[ 07.588% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.168% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.271% ] Add aspect code:  1
[ 00.271% ] Weaving advice:  1
[ 00.271% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.447% ] Soot Packs:  57
[ 11.111% ] Soot Writing Output:  41
================================================
Doing something.
PASS: new: Test "After advice isn't being woven into after throwing advice" passed.


Running test new/Throwing an EmptyStackException.
Commandline: abc -d new new/EmptyStack.java 
Abc started on Fri Jul 30 10:04:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming EmptyStack... 
Transforming EmptyStackAspect... 
Transforming EmptyStackAspect$InnerEmptyStackAspect... 
Transforming MyEmptyStackAspect... 
Transforming EmptyStack$1PW... 
Abc finished on Fri Jul 30 10:04:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 479 millisec.)
------------------------------------------------
[ 11.691% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 53.862% ] Polyglot phases:  258
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.549% ] Retrieving bodies:  17
[ 06.054% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.253% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 02.505% ] Add aspect code:  12
[ 00.209% ] Weaving advice:  1
[ 00.209% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.273% ] Soot Packs:  54
[ 09.395% ] Soot Writing Output:  45
================================================
PASS: new: Test "Throwing an EmptyStackException." passed.


Running test new/perThis/check that MightHaveAspect interface is created correctly for an aspect in deep package
Commandline: abc -d new/perThis new/perThis/p/EachObjectTarget.java new/perThis/the/deep/pkg/EachObjectInDeepPackage.java 
Abc started on Fri Jul 30 10:04:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming the.deep.pkg.Aspect... 
Transforming p.EachObjectTarget... 
Transforming the.deep.pkg.Aspect$abc$PerTarget... 
Abc finished on Fri Jul 30 10:04:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 364 millisec.)
------------------------------------------------
[ 27.198% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.275% ] Create polyglot compiler:  1
[ 40.110% ] Polyglot phases:  146
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.275% ] Intertype Adjuster:  1
[ 01.099% ] Retrieving bodies:  4
[ 07.418% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.824% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.275% ] Add aspect code:  1
[ 00.549% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.462% ] Soot Packs:  49
[ 08.516% ] Soot Writing Output:  31
================================================
PASS: new/perThis: Test "check that MightHaveAspect interface is created correctly for an aspect in deep package" passed.


Running test new/Defines clfow$ajc0 more once. [eachcflow]
Commandline: abc -d new new/Binkley.java 
Abc started on Fri Jul 30 10:04:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Binkley... 
Abc finished on Fri Jul 30 10:04:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 449 millisec.)
------------------------------------------------
[ 13.140% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.521% ] Polyglot phases:  155
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.223% ] Intertype Adjuster:  1
[ 00.891% ] Retrieving bodies:  4
[ 05.568% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.009% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 03.118% ] Add aspect code:  14
[ 03.118% ] Weaving advice:  14
[ 00.223% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.612% ] Soot Packs:  115
[ 09.577% ] Soot Writing Output:  43
================================================
PASS: new: Test "Defines clfow$ajc0 more once. [eachcflow]" passed.


Running test new/Various calls, receptions, and callsto tests [callsto]
Commandline: abc -d new new/CallsReceptionsCallsto.java 
Abc started on Fri Jul 30 10:04:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming J... 
Transforming CallsReceptionsCallsto... 
Transforming A... 
Transforming Q... 
Transforming D... 
Transforming G... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 771 millisec.)
------------------------------------------------
[ 13.230% ] Init. of Soot:  102
[ 00.000% ] Loading Jars:  0
[ 00.130% ] Create polyglot compiler:  1
[ 41.245% ] Polyglot phases:  318
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.075% ] Retrieving bodies:  16
[ 08.431% ] Update pattern matcher:  65
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.297% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.259% ] Weaving advice:  2
[ 00.130% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.230% ] Soot Packs:  102
[ 19.974% ] Soot Writing Output:  154
================================================
PASS: new: Test "Various calls, receptions, and callsto tests [callsto]" passed.


Running test new/Was throwing exception, now just an error. [eachobject]
Commandline: abc -d new new/PR320.java 
Abc started on Fri Jul 30 10:04:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Product1... 
Transforming Product1Aspect... 
Transforming PR320... 
Transforming Product1Aspect$abc$PerTarget... 
Abc finished on Fri Jul 30 10:04:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 273 millisec.)
------------------------------------------------
[ 21.978% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.333% ] Polyglot phases:  91
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.366% ] Intertype Adjuster:  1
[ 01.465% ] Retrieving bodies:  4
[ 09.158% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.733% ] Compute advice lists:  2
[ 00.366% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 01.099% ] Weaving advice:  3
[ 00.366% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.048% ] Soot Packs:  52
[ 12.088% ] Soot Writing Output:  33
================================================
PASS: new: Test "Was throwing exception, now just an error. [eachobject]" passed.


Running test new/different version of aspect inheritance, particularly empty pointcuts and abstract cflows [eachcflow]
Commandline: abc -d new new/AspectInheritance.java 
Abc started on Fri Jul 30 10:04:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/AspectInheritance.java:24,21-26: Formal "i" may be unbound in pointcut.
FAIL: Test "new/different version of aspect inheritance, particularly empty pointcuts and abstract cflows [eachcflow]" failed


Running test new/set advice on member initing throwing exception [eachobject]
Commandline: abc -d new new/PR339.java 
Abc started on Fri Jul 30 10:04:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Setter... 
Transforming MemberInitSet... 
Transforming PR339... 
Transforming Setter$abc$PerTarget... 
Abc finished on Fri Jul 30 10:04:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 335 millisec.)
------------------------------------------------
[ 17.313% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.299% ] Create polyglot compiler:  1
[ 22.090% ] Polyglot phases:  74
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.791% ] Retrieving bodies:  6
[ 08.358% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.194% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.299% ] Add aspect code:  1
[ 00.597% ] Weaving advice:  2
[ 00.299% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 37.612% ] Soot Packs:  126
[ 10.149% ] Soot Writing Output:  34
================================================
PASS: new: Test "set advice on member initing throwing exception [eachobject]" passed.


Running test new/Testing class names with same name's with difference case as package. [eachobject]
Commandline: abc -d new new/test/TraceAspect.java new/test/Test.java 
Abc started on Fri Jul 30 10:04:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming test.Trace... 
Transforming test.Test... 
Transforming test.Trace$abc$PerTarget... 
Abc finished on Fri Jul 30 10:04:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 400 millisec.)
------------------------------------------------
[ 13.750% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.750% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.250% ] Intertype Adjuster:  1
[ 01.250% ] Retrieving bodies:  5
[ 06.500% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.000% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.250% ] Add aspect code:  1
[ 00.500% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 35.250% ] Soot Packs:  141
[ 07.500% ] Soot Writing Output:  30
================================================
PASS: new: Test "Testing class names with same name's with difference case as package. [eachobject]" passed.


Running test new/Null pointer on gets advice with coverage [painful]
Commandline: abc -d new new/NullPointerOnGets.java 
Abc started on Fri Jul 30 10:04:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Ints... 
Transforming IntAspect... 
Transforming Strings... 
Transforming StringAspect... 
Transforming NullPointerOnGets... 
Transforming C... 
Transforming Abc$access$StringAspect$around$1081... 
Transforming Abc$access$StringAspect$around$1077... 
Transforming Abc$access$StringAspect$around$1061... 
Transforming Abc$access$StringAspect$around$1057... 
Transforming Abc$access$StringAspect$around$1093... 
Transforming Abc$access$StringAspect$around$1089... 
Transforming Abc$access$StringAspect$around$1085... 
Transforming Abc$access$StringAspect$around$1073... 
Transforming Abc$access$StringAspect$around$1069... 
Transforming Abc$access$StringAspect$around$1065... 
Transforming Abc$access$StringAspect$around$1082... 
Transforming Abc$access$StringAspect$around$1078... 
Transforming Abc$access$StringAspect$around$1062... 
Transforming Abc$access$StringAspect$around$1058... 
Transforming Abc$access$StringAspect$around$1094... 
Transforming Abc$access$StringAspect$around$1090... 
Transforming Abc$access$StringAspect$around$1086... 
Transforming Abc$access$StringAspect$around$1074... 
Transforming Abc$access$StringAspect$around$1070... 
Transforming Abc$access$StringAspect$around$1066... 
Transforming Abc$access$StringAspect$around$1083... 
Transforming Abc$access$StringAspect$around$1079... 
Transforming Abc$access$StringAspect$around$1063... 
Transforming Abc$access$StringAspect$around$1059... 
Transforming Abc$access$StringAspect$around$1095... 
Transforming Abc$access$StringAspect$around$1091... 
Transforming Abc$access$StringAspect$around$1087... 
Transforming Abc$access$StringAspect$around$1075... 
Transforming Abc$access$StringAspect$around$1071... 
Transforming Abc$access$StringAspect$around$1067... 
Transforming Abc$access$StringAspect$around$1084... 
Transforming Abc$access$StringAspect$around$1080... 
Transforming Abc$access$StringAspect$around$1064... 
Transforming Abc$access$StringAspect$around$1060... 
Transforming Abc$access$StringAspect$around$1096... 
Transforming Abc$access$StringAspect$around$1092... 
Transforming Abc$access$StringAspect$around$1088... 
Transforming Abc$access$StringAspect$around$1076... 
Transforming Abc$access$StringAspect$around$1072... 
Transforming Abc$access$StringAspect$around$1068... 
Transforming Abc$access$IntAspect$around$1201... 
Transforming Abc$access$IntAspect$around$1197... 
Transforming Abc$access$IntAspect$around$1181... 
Transforming Abc$access$IntAspect$around$1177... 
Transforming Abc$access$IntAspect$around$1213... 
Transforming Abc$access$IntAspect$around$1209... 
Transforming Abc$access$IntAspect$around$1205... 
Transforming Abc$access$IntAspect$around$1193... 
Transforming Abc$access$IntAspect$around$1189... 
Transforming Abc$access$IntAspect$around$1185... 
Transforming Abc$access$IntAspect$around$1202... 
Transforming Abc$access$IntAspect$around$1198... 
Transforming Abc$access$IntAspect$around$1182... 
Transforming Abc$access$IntAspect$around$1178... 
Transforming Abc$access$IntAspect$around$1214... 
Transforming Abc$access$IntAspect$around$1210... 
Transforming Abc$access$IntAspect$around$1206... 
Transforming Abc$access$IntAspect$around$1194... 
Transforming Abc$access$IntAspect$around$1190... 
Transforming Abc$access$IntAspect$around$1186... 
Transforming Abc$access$IntAspect$around$1203... 
Transforming Abc$access$IntAspect$around$1199... 
Transforming Abc$access$IntAspect$around$1183... 
Transforming Abc$access$IntAspect$around$1179... 
Transforming Abc$access$IntAspect$around$1215... 
Transforming Abc$access$IntAspect$around$1211... 
Transforming Abc$access$IntAspect$around$1207... 
Transforming Abc$access$IntAspect$around$1195... 
Transforming Abc$access$IntAspect$around$1191... 
Transforming Abc$access$IntAspect$around$1187... 
Transforming Abc$access$IntAspect$around$1204... 
Transforming Abc$access$IntAspect$around$1200... 
Transforming Abc$access$IntAspect$around$1184... 
Transforming Abc$access$IntAspect$around$1180... 
Transforming Abc$access$IntAspect$around$1216... 
Transforming Abc$access$IntAspect$around$1212... 
Transforming Abc$access$IntAspect$around$1208... 
Transforming Abc$access$IntAspect$around$1196... 
Transforming Abc$access$IntAspect$around$1192... 
Transforming Abc$access$IntAspect$around$1188... 
Abc finished on Fri Jul 30 10:04:25 BST 2004. ( 0 min. 14 sec. )
================================================
Breakdown of abc phases  (total: 14692 millisec.)
------------------------------------------------
[ 01.361% ] Init. of Soot:  200
[ 00.000% ] Loading Jars:  0
[ 00.007% ] Create polyglot compiler:  1
[ 07.399% ] Polyglot phases:  1087
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.300% ] Retrieving bodies:  191
[ 00.735% ] Update pattern matcher:  108
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.335% ] Compute advice lists:  343
[ 00.000% ] Intertype weave:  0
[ 00.007% ] Add aspect code:  1
[ 58.025% ] Weaving advice:  8525
[ 00.068% ] Exceptions check:  10
[ 00.000% ] Validate jimple:  0
[ 21.066% ] Soot Packs:  3095
[ 07.698% ] Soot Writing Output:  1131
================================================
PASS: new: Test "Null pointer on gets advice with coverage [painful]" passed.


Running test new/Basic test for cflow pointcuts [eachcflow]
Commandline: abc -d new new/CFlowPoints.java 
Abc started on Fri Jul 30 10:04:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CFlowPoints... 
Transforming Each... 
Transforming Test... 
Transforming A... 
Abc finished on Fri Jul 30 10:04:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 454 millisec.)
------------------------------------------------
[ 11.894% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.819% ] Polyglot phases:  149
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.405% ] Retrieving bodies:  20
[ 05.727% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.744% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 02.643% ] Add aspect code:  12
[ 02.423% ] Weaving advice:  11
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 22.026% ] Soot Packs:  100
[ 14.317% ] Soot Writing Output:  65
================================================
PASS: new: Test "Basic test for cflow pointcuts [eachcflow]" passed.


Running test new/Crashing when looking up the type of array members.
Commandline: abc -d new new/ArrayCasts.java 
Abc started on Fri Jul 30 10:04:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 6, should be 0
Actual errors found: 
Semantic Error at ArrayCasts.java:18,50-57: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
Semantic Error at ArrayCasts.java:19,51-58: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
Semantic Error at ArrayCasts.java:20,52-59: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
Semantic Error at ArrayCasts.java:22,62-69: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
Semantic Error at ArrayCasts.java:23,63-70: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
Semantic Error at ArrayCasts.java:24,64-71: The exception java.lang.CloneNotSupportedException must be either caught or declared to be thrown
FAIL: Test "new/Crashing when looking up the type of array members." failed


Running test new/PostfixExprs to various synthetic things are fixed correctly [eachobject]
Commandline: abc -d new new/Fixes.java 
Abc started on Fri Jul 30 10:04:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 13, should be 0
Actual errors found: 
Semantic Error at new/Fixes.java:29,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:34,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:35,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:36,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:41,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:42,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:43,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:48,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:49,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:50,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:55,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:56,11-32: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/Fixes.java:57,11-32: Cannot access private_int in TheObject from TheAspect.
FAIL: Test "new/PostfixExprs to various synthetic things are fixed correctly [eachobject]" failed


Running test new/Dave Binkley's problem with eachcflowroot. [eachcflow]
Commandline: abc -d new new/Binkley2.java 
Abc started on Fri Jul 30 10:04:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming C... 
Transforming Post... 
Transforming Ar... 
Transforming Art... 
Transforming Binkley2... 
Abc finished on Fri Jul 30 10:04:27 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1048 millisec.)
------------------------------------------------
[ 07.920% ] Init. of Soot:  83
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.336% ] Polyglot phases:  276
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.095% ] Intertype Adjuster:  1
[ 01.527% ] Retrieving bodies:  16
[ 03.053% ] Update pattern matcher:  32
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.954% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.763% ] Add aspect code:  8
[ 11.832% ] Weaving advice:  124
[ 00.095% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 35.878% ] Soot Packs:  376
[ 11.546% ] Soot Writing Output:  121
================================================
PASS: new: Test "Dave Binkley's problem with eachcflowroot. [eachcflow]" passed.


Running test new/advice on an inherited method
Commandline: abc -d new new/AdviceOnInheritedMethod.java 
Abc started on Fri Jul 30 10:04:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 0
Actual errors found: 
Syntax Error at new/AdviceOnInheritedMethod.java:22,35-48: Syntax error.
Semantic Error at new/AdviceOnInheritedMethod.java:30,36-64: Method getTargetName not found.
Semantic Error at new/AdviceOnInheritedMethod.java:36,29-57: Method getTargetName not found.
Semantic Error at new/AdviceOnInheritedMethod.java:42,30-58: Method getTargetName not found.
FAIL: Test "new/advice on an inherited method" failed


Running test new/, PR#115 checks the ordering of catch clauses
Commandline: abc -d new new/OrderOfCatches.java 
Abc started on Fri Jul 30 10:04:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FooException... 
Transforming A... 
Transforming AA... 
Transforming OrderOfCatches... 
Abc finished on Fri Jul 30 10:04:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 346 millisec.)
------------------------------------------------
[ 22.254% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 36.416% ] Polyglot phases:  126
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.289% ] Intertype Adjuster:  1
[ 05.202% ] Retrieving bodies:  18
[ 07.225% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.023% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.289% ] Add aspect code:  1
[ 00.289% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.162% ] Soot Packs:  49
[ 11.850% ] Soot Writing Output:  41
================================================
PASS: new: Test ", PR#115 checks the ordering of catch clauses" passed.


Running test new/various declared exception permutations
Commandline: abc -d new new/DeclaredExcs.java 
Abc started on Fri Jul 30 10:04:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at DeclaredExcs.java:40,5-15: The exception java.lang.Exception must be either caught or declared to be thrown
Semantic Error at DeclaredExcs.java:46,5-14: The exception java.lang.Exception must be either caught or declared to be thrown
FAIL: Test "new/various declared exception permutations" failed


Running test new/ordering of advice kinds as well as cflow and dominates
Commandline: abc -d new new/AdviceOrdering.java 
Abc started on Fri Jul 30 10:04:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming A3... 
Transforming A4... 
Transforming A1... 
Transforming A2... 
Transforming T... 
Transforming B1... 
Transforming FlowCheck... 
Transforming C4... 
Transforming C1... 
Transforming C3... 
Transforming C... 
Transforming AdviceOrdering... 
Transforming A... 
Transforming Abc$access$A$around$1354... 
Abc finished on Fri Jul 30 10:04:28 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 974 millisec.)
------------------------------------------------
[ 05.544% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.279% ] Polyglot phases:  217
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.388% ] Retrieving bodies:  33
[ 02.567% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.544% ] Compute advice lists:  54
[ 00.000% ] Intertype weave:  0
[ 00.308% ] Add aspect code:  3
[ 02.156% ] Weaving advice:  21
[ 00.205% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 34.805% ] Soot Packs:  339
[ 23.203% ] Soot Writing Output:  226
================================================
PASS: new: Test "ordering of advice kinds as well as cflow and dominates" passed.


Running test new/advice on default constructor for a class only referenced via reflection
Commandline: abc -d new new/OddConstructors.java 
Abc started on Fri Jul 30 10:04:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming C... 
Transforming OddConstructors... 
Transforming OddConstructors$B... 
Transforming A... 
Abc finished on Fri Jul 30 10:04:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 398 millisec.)
------------------------------------------------
[ 13.819% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.719% ] Polyglot phases:  174
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.251% ] Intertype Adjuster:  1
[ 02.010% ] Retrieving bodies:  8
[ 18.090% ] Update pattern matcher:  72
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.005% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.251% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.251% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.307% ] Soot Packs:  45
[ 09.296% ] Soot Writing Output:  37
================================================
Test failed, compiled class behaved incorrectly
Message: fail expected note "advised default constructor"
org.aspectj.bridge.AbortException: expected note "advised default constructor"
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.check(Tester.java:145)
	at org.aspectj.testing.Tester.check(Tester.java:133)
	at OddConstructors.test(OddConstructors.java:8)
	at OddConstructors.main(OddConstructors.java:5)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/advice on default constructor for a class only referenced via reflection" failed


Running test new/calling and called this params in calls points
Commandline: abc -d new new/CallsParams.java 
Abc started on Fri Jul 30 10:04:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SeqCut... 
Transforming CallsParams... 
Transforming Test... 
Abc finished on Fri Jul 30 10:04:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 479 millisec.)
------------------------------------------------
[ 11.273% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.209% ] Create polyglot compiler:  1
[ 48.017% ] Polyglot phases:  230
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.088% ] Retrieving bodies:  10
[ 06.054% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.296% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 02.714% ] Add aspect code:  13
[ 05.846% ] Weaving advice:  28
[ 00.209% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.900% ] Soot Packs:  57
[ 09.395% ] Soot Writing Output:  45
================================================

PASS: new: Test "calling and called this params in calls points" passed.


Running test new/primitive parameters coercable to Object just like return values are
Commandline: abc -d new new/ObjectForInt.java 
Abc started on Fri Jul 30 10:04:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ObjectForInt... 
Transforming Test... 
Transforming Abc$access$A$around$1375... 
Abc finished on Fri Jul 30 10:04:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 316 millisec.)
------------------------------------------------
[ 17.405% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.089% ] Polyglot phases:  133
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.532% ] Retrieving bodies:  8
[ 07.595% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.582% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.316% ] Add aspect code:  1
[ 00.633% ] Weaving advice:  2
[ 00.316% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.823% ] Soot Packs:  50
[ 11.709% ] Soot Writing Output:  37
================================================
Test failed, compiled class behaved incorrectly
Message: fail Test.a: 4 < 10
org.aspectj.bridge.AbortException: Test.a: 4 < 10
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:462)
	at ObjectForInt.main(ObjectForInt.java:6)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/primitive parameters coercable to Object just like return values are" failed


Running test new/Does the matrix coverage thing for the new method signatures
Commandline: abc -d new -1.4 -Xlint:ignore new/MethodSignatures.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming F... 
Transforming D1... 
Transforming A... 
Transforming MethodSignatures... 
Transforming C... 
Transforming E... 
Transforming D0... 
Abc finished on Fri Jul 30 10:04:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 915 millisec.)
------------------------------------------------
[ 05.902% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.317% ] Polyglot phases:  314
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.918% ] Retrieving bodies:  45
[ 03.388% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 14.645% ] Compute advice lists:  134
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.421% ] Weaving advice:  13
[ 00.109% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.814% ] Soot Packs:  163
[ 17.486% ] Soot Writing Output:  160
================================================
Test failed, compiled class behaved incorrectly
Message: fail d0.m0 does not contain before calls advice for d0.m0
org.aspectj.bridge.AbortException: d0.m0 does not contain before calls advice for d0.m0
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at E.check(MethodSignatures.java:36)
	at MethodSignatures.main(MethodSignatures.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/Does the matrix coverage thing for the new method signatures" failed


Running test new/join points in static/dynamic initializers aren't showing up.
Commandline: abc -d new new/NonexistentInitializers.java 
Abc started on Fri Jul 30 10:04:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming NonexistentInitializers... 
Abc finished on Fri Jul 30 10:04:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 264 millisec.)
------------------------------------------------
[ 20.455% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.773% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.409% ] Retrieving bodies:  9
[ 09.470% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.515% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.379% ] Add aspect code:  1
[ 00.379% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.152% ] Soot Packs:  40
[ 09.470% ] Soot Writing Output:  25
================================================
PASS: new: Test "join points in static/dynamic initializers aren't showing up." passed.


Running test new/Gets and sets on a number of variables (field access ???)
Commandline: abc -d new new/Gets.java 
Abc started on Fri Jul 30 10:04:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SetAspect2... 
Transforming GetAspect... 
Transforming Gets... 
Abc finished on Fri Jul 30 10:04:32 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1303 millisec.)
------------------------------------------------
[ 07.444% ] Init. of Soot:  97
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.368% ] Polyglot phases:  526
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.995% ] Retrieving bodies:  26
[ 01.995% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.612% ] Compute advice lists:  21
[ 00.000% ] Intertype weave:  0
[ 00.077% ] Add aspect code:  1
[ 01.535% ] Weaving advice:  20
[ 00.153% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 31.005% ] Soot Packs:  404
[ 13.814% ] Soot Writing Output:  180
================================================
PASS: new: Test "Gets and sets on a number of variables (field access ???)" passed.


Running test new/correct types of parameters at call-sites
Commandline: abc -d new -1.4 -Xlint:ignore new/CallTypes.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming C... 
Transforming CallTypes... 
Transforming A... 
Transforming C1... 
Abc finished on Fri Jul 30 10:04:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 708 millisec.)
------------------------------------------------
[ 07.627% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.497% ] Polyglot phases:  223
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 10.593% ] Retrieving bodies:  75
[ 04.379% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 06.638% ] Compute advice lists:  47
[ 00.000% ] Intertype weave:  0
[ 00.141% ] Add aspect code:  1
[ 00.706% ] Weaving advice:  5
[ 00.141% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.938% ] Soot Packs:  127
[ 20.339% ] Soot Writing Output:  144
================================================
Test failed, compiled class behaved incorrectly
Message: fail base: c1.foo(): [instanceof c, instanceof c1, static c] !equals [instanceof c, instanceof c1, static c, static c1]
org.aspectj.bridge.AbortException: base: c1.foo(): [instanceof c, instanceof c1, static c] !equals [instanceof c, instanceof c1, static c, static c1]
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:770)
	at CallTypes.test(CallTypes.java:46)
	at CallTypes.test(CallTypes.java:42)
	at CallTypes.main(CallTypes.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/correct types of parameters at call-sites" failed


Running test new/Joinpoints are showing up on intermediate call sites
Commandline: abc -d new new/Counting1.java 
Abc started on Fri Jul 30 10:04:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/Counting1.java:170,9-29: Cannot access enableMoves in Mobility from Foo.
FAIL: Test "new/Joinpoints are showing up on intermediate call sites" failed


Running test new/Reception based on strictfp modifier
Commandline: abc -d new new/StrictFpReceptions.java 
Abc started on Fri Jul 30 10:04:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming StrictClassAbstract... 
Transforming StrictClass... 
Transforming StrictFpReceptions... 
Transforming StrictFpWatcher... 
Abc finished on Fri Jul 30 10:04:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 428 millisec.)
------------------------------------------------
[ 12.850% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.888% ] Polyglot phases:  175
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.234% ] Intertype Adjuster:  1
[ 04.206% ] Retrieving bodies:  18
[ 05.841% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.271% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.234% ] Add aspect code:  1
[ 00.234% ] Weaving advice:  1
[ 00.234% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.523% ] Soot Packs:  75
[ 14.486% ] Soot Writing Output:  62
================================================
Test failed, compiled class behaved incorrectly
Message: fail test1 method call, counters=0,0
org.aspectj.bridge.AbortException: test1 method call, counters=0,0
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at StrictFpReceptions.main(StrictFpReceptions.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/Reception based on strictfp modifier" failed


Running test new/Subclasses that do not redefine a method are not being handled correctly
Commandline: abc -d new new/PR353b.java 
Abc started on Fri Jul 30 10:04:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming E2... 
Transforming A... 
Transforming E... 
Transforming F... 
Transforming PR353b... 
Transforming s... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 575 millisec.)
------------------------------------------------
[ 09.391% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 48.348% ] Polyglot phases:  278
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.304% ] Retrieving bodies:  19
[ 04.348% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.130% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.174% ] Weaving advice:  1
[ 00.174% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.478% ] Soot Packs:  66
[ 19.652% ] Soot Writing Output:  113
================================================
PASS: new: Test "Subclasses that do not redefine a method are not being handled correctly" passed.


Running test new/making sure that super calls are bound to the right methods
Commandline: abc -d new new/SupersAndInterfaces.java 
Abc started on Fri Jul 30 10:04:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming C... 
Transforming C1... 
Transforming SupersAndInterfaces... 
Transforming I... 
Transforming A... 
Abc finished on Fri Jul 30 10:04:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 400 millisec.)
------------------------------------------------
[ 14.000% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.250% ] Polyglot phases:  109
[ 00.250% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.000% ] Retrieving bodies:  16
[ 06.750% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.000% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.500% ] Weaving advice:  2
[ 00.250% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 33.500% ] Soot Packs:  134
[ 11.500% ] Soot Writing Output:  46
================================================
PASS: new: Test "making sure that super calls are bound to the right methods" passed.


Running test new/inheritance, around advice and abstract pointcuts [eachobject] (still)
Commandline: abc -d new new/OverridingPointcuts.java 
Abc started on Fri Jul 30 10:04:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OverridingPointcuts... 
Transforming A2... 
Transforming A1... 
Transforming A... 
Transforming C... 
Transforming A1$abc$PerTarget... 
Transforming A2$abc$PerTarget... 
Transforming Abc$access$A$around$1442... 
Abc finished on Fri Jul 30 10:04:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 537 millisec.)
------------------------------------------------
[ 10.056% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.186% ] Create polyglot compiler:  1
[ 21.415% ] Polyglot phases:  115
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.421% ] Retrieving bodies:  13
[ 04.469% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.048% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.186% ] Add aspect code:  1
[ 02.607% ] Weaving advice:  14
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 40.968% ] Soot Packs:  220
[ 15.642% ] Soot Writing Output:  84
================================================
PASS: new: Test "inheritance, around advice and abstract pointcuts [eachobject] (still)" passed.


Running test new/foemmel/Priviledged aspect methods are missing for privates. [eachobject]
Commandline: abc -d new/foemmel new/foemmel/TheAspect.java new/foemmel/TheObject.java 
Abc started on Fri Jul 30 10:04:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 34, should be 0
Actual errors found: 
Semantic Error at new/foemmel/TheAspect.java:33,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:37,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:44,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:48,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:55,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:59,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:66,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:70,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:77,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:81,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:88,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:92,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:99,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:103,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:110,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:114,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:121,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:125,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:132,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:136,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:143,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:147,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:154,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:158,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:165,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:169,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:176,12-33: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:180,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:187,12-33: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:191,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:198,9-30: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:202,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:209,27-48: Cannot access private_int in TheObject from TheAspect.
Semantic Error at new/foemmel/TheAspect.java:216,9-33: No valid method call found for private_call() in TheObject.
FAIL: Test "new/foemmel/Priviledged aspect methods are missing for privates. [eachobject]" failed


Running test new/exceptions thrown and caught in advice, particularly try+proceed
Commandline: abc -d new new/TryAndProceed.java 
Abc started on Fri Jul 30 10:04:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line castTmp9 = virtualinvoke theAspect6.<A: java.lang.Object around$1450(Abc$access$A$around$1450,int,int,int,java.lang.Object)>(null, 1, 1, bindMask4, $r10)
Getting position for a untagged source line castTmp3 = virtualinvoke theAspect2.<A: java.lang.Object around$1450(Abc$access$A$around$1450,int,int,int,java.lang.Object)>(null, 0, 1, bindMask1, $r4)
Compilation produced an unexpected number of errors: 4, should be 0
Actual errors found: 
Semantic Error at TryAndProceed.java: The exception CheckedExc must be either caught or declared to be thrown in method <TryAndProceed: java.lang.Object abc$static$proceed$A$around$1449(int,int,java.lang.Object)>
Semantic Error at TryAndProceed.java: The exception CheckedExc must be either caught or declared to be thrown in method <TryAndProceed: java.lang.Object abc$static$proceed$A$around$1449(int,int,java.lang.Object)>
Semantic Error at TryAndProceed.java:11,20-39: The exception CheckedExc must be either caught or declared to be thrown
Semantic Error at TryAndProceed.java:24,20-39: The exception CheckedExc must be either caught or declared to be thrown
FAIL: Test "new/exceptions thrown and caught in advice, particularly try+proceed" failed


Running test new/Not and And operators in pointcuts not working
Commandline: abc -d new new/NotAndPointcut.java 
Abc started on Fri Jul 30 10:04:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NotAndPointcut... 
Transforming BugInPCD... 
Abc finished on Fri Jul 30 10:04:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 304 millisec.)
------------------------------------------------
[ 33.224% ] Init. of Soot:  101
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.829% ] Polyglot phases:  115
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.329% ] Intertype Adjuster:  1
[ 01.645% ] Retrieving bodies:  5
[ 07.566% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.316% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.329% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.329% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.526% ] Soot Packs:  32
[ 06.908% ] Soot Writing Output:  21
================================================
PASS: new: Test "Not and And operators in pointcuts not working" passed.


Running test new/Member initializers should run before the current class constructor
Commandline: abc -d new new/MemberInitializationsAfterExplicitConstructorCalls.java 
Abc started on Fri Jul 30 10:04:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MemberInitializationsAfterExplicitConstructorCalls... 
Transforming MemberInitializationsAfterExplicitConstructorCalls$ThisCall... 
Abc finished on Fri Jul 30 10:04:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 290 millisec.)
------------------------------------------------
[ 18.966% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 52.759% ] Polyglot phases:  153
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.345% ] Intertype Adjuster:  1
[ 02.414% ] Retrieving bodies:  7
[ 08.276% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.379% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.345% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 07.931% ] Soot Packs:  23
[ 07.586% ] Soot Writing Output:  22
================================================
PASS: new: Test "Member initializers should run before the current class constructor" passed.


Running test new/Coverage tests for Member initializers should run before the current class constructor and after super
Commandline: abc -d new new/MemberInitializationsAfterExplicitConstructorCallsCoverage.java 
Abc started on Fri Jul 30 10:04:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ThisCallEnclosing... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallChild... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallTopSimple... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallTopBlock... 
Transforming ThisCallEnclosing$ThisCallEnclosed... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallBottomSimple... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallParent... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallMixed... 
Transforming MemberInitializationsAfterExplicitConstructorCallsCoverage$ThisCallBottomBlock... 
Abc finished on Fri Jul 30 10:04:38 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1180 millisec.)
------------------------------------------------
[ 04.746% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.068% ] Polyglot phases:  343
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.085% ] Intertype Adjuster:  1
[ 07.627% ] Retrieving bodies:  90
[ 01.949% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 09.322% ] Compute advice lists:  110
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.169% ] Weaving advice:  2
[ 00.085% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.424% ] Soot Packs:  300
[ 21.525% ] Soot Writing Output:  254
================================================
PASS: new: Test "Coverage tests for Member initializers should run before the current class constructor and after super" passed.


Running test new/thisJoinPoint{Static} not visible in if() pcd of named pointcut
Commandline: abc -d new new/IfPCDExprJoinPointVisibleCE.java 
Abc started on Fri Jul 30 10:04:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming IfPCDExprJoinPointVisibleCE... 
Transforming AspectForIfPCDExprJoinPointVisibleCE... 
Abc finished on Fri Jul 30 10:04:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 333 millisec.)
------------------------------------------------
[ 21.021% ] Init. of Soot:  70
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 14.715% ] Polyglot phases:  49
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.102% ] Retrieving bodies:  7
[ 04.204% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.502% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 09.910% ] Weaving advice:  33
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 27.327% ] Soot Packs:  91
[ 19.219% ] Soot Writing Output:  64
================================================
before thisJoinPoint
before thisJoinPointStaticPart
before thisJoinPoint
before thisJoinPointStaticPart
before thisJoinPoint
before thisJoinPointStaticPart
before thisJoinPoint
before thisJoinPointStaticPart
ok - main running after 
PASS: new: Test "thisJoinPoint{Static} not visible in if() pcd of named pointcut" passed.


Running test new/pcd if() expression visibility at compile-time  (minimal operation)
Commandline: abc -d new -Xlint:ignore new/IfPCDExprVisibility.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 6, should be 0
Actual errors found: 
Syntax Error at new/IfPCDExprVisibility.java:5,31-35: Syntax error.
Syntax Error at new/IfPCDExprVisibility.java:7,43-49: Syntax error.
Syntax Error at new/IfPCDExprVisibility.java:15,28-32: Syntax error.
Syntax Error at new/IfPCDExprVisibility.java:32,18-22: Syntax error.
Semantic Error at new/IfPCDExprVisibility.java:37,24-37: Could not find field or local variable "thisJoinPoint".
Syntax Error at new/IfPCDExprVisibility.java:39,21-22: Syntax error.
FAIL: Test "new/pcd if() expression visibility at compile-time  (minimal operation)" failed


Running test new/pcd if() NPE in compiler when unwinding assignment in pcd if(expr)
Commandline: abc -d new new/IfPCDExprAssignUnparseFailure.java 
Abc started on Fri Jul 30 10:04:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectFor... 
Transforming IfPCDExprAssignUnparseFailure... 
Abc finished on Fri Jul 30 10:04:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 217 millisec.)
------------------------------------------------
[ 24.885% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.014% ] Polyglot phases:  89
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.461% ] Intertype Adjuster:  1
[ 01.382% ] Retrieving bodies:  3
[ 11.060% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.461% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.461% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.903% ] Soot Packs:  28
[ 07.373% ] Soot Writing Output:  16
================================================
PASS: new: Test "pcd if() NPE in compiler when unwinding assignment in pcd if(expr)" passed.


Running test new/pcd if() dup methods produced when pointcut after advice etc (javac)
Commandline: abc -d new new/IfPCDDupMethod.java 
Abc started on Fri Jul 30 10:04:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IfPCDDupMethod... 
Transforming AlreadyDefined... 
Abc finished on Fri Jul 30 10:04:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 205 millisec.)
------------------------------------------------
[ 46.341% ] Init. of Soot:  95
[ 00.000% ] Loading Jars:  0
[ 00.488% ] Create polyglot compiler:  1
[ 09.268% ] Polyglot phases:  19
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.488% ] Intertype Adjuster:  1
[ 01.951% ] Retrieving bodies:  4
[ 05.854% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.463% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.488% ] Add aspect code:  1
[ 01.463% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.463% ] Soot Packs:  44
[ 10.732% ] Soot Writing Output:  22
================================================
PASS: new: Test "pcd if() dup methods produced when pointcut after advice etc (javac)" passed.


Running test new/pcd if() variants: [anonymous, named] x [execution, call, callTyped, get, set, initializations] x [before, after, around]
Commandline: abc -d new new/IfPCDAdviceMethods.java 
Abc started on Fri Jul 30 10:04:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BaseApp... 
Transforming TestContext... 
Transforming TestSignals... 
Transforming Aspect2... 
Transforming Aspect... 
Transforming IfPCDAdviceMethods... 
Transforming Abc$access$Aspect$around$1487... 
Transforming Abc$access$Aspect$around$1482... 
Transforming Abc$access$Aspect2$around$1510... 
Transforming Abc$access$Aspect$around$1486... 
Transforming Abc$access$Aspect$around$1481... 
Transforming Abc$access$Aspect2$around$1509... 
Transforming Abc$access$Aspect$around$1490... 
Transforming Abc$access$Aspect$around$1485... 
Transforming Abc$access$Aspect2$around$1513... 
Transforming Abc$access$Aspect$around$1489... 
Transforming Abc$access$Aspect$around$1488... 
Transforming Abc$access$Aspect$around$1484... 
Transforming Abc$access$Aspect$around$1483... 
Transforming Abc$access$Aspect2$around$1512... 
Transforming Abc$access$Aspect2$around$1511... 
Abc finished on Fri Jul 30 10:04:40 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1634 millisec.)
------------------------------------------------
[ 03.366% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 19.584% ] Polyglot phases:  320
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.100% ] Retrieving bodies:  67
[ 01.591% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 11.261% ] Compute advice lists:  184
[ 00.000% ] Intertype weave:  0
[ 00.061% ] Add aspect code:  1
[ 03.305% ] Weaving advice:  54
[ 00.122% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 36.597% ] Soot Packs:  598
[ 20.012% ] Soot Writing Output:  327
================================================
PASS: new: Test "pcd if() variants: [anonymous, named] x [execution, call, callTyped, get, set, initializations] x [before, after, around]" passed.


Running test new/initialization order with this
Commandline: abc -d new new/InitializationOrder.java 
Abc started on Fri Jul 30 10:04:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming S... 
Transforming InitializationOrder... 
Transforming C... 
Transforming Sub... 
Abc finished on Fri Jul 30 10:04:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 239 millisec.)
------------------------------------------------
[ 22.594% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.418% ] Create polyglot compiler:  1
[ 39.331% ] Polyglot phases:  94
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.418% ] Intertype Adjuster:  1
[ 02.929% ] Retrieving bodies:  7
[ 10.879% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.255% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.418% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.879% ] Soot Packs:  26
[ 10.879% ] Soot Writing Output:  26
================================================
PASS: new: Test "initialization order with this" passed.


Running test new/!within and !this handling for callee-side call points
Commandline: abc -d new new/NotThis.java 
Abc started on Fri Jul 30 10:04:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming NotThis... 
Transforming B... 
Transforming Q... 
Abc finished on Fri Jul 30 10:04:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 365 millisec.)
------------------------------------------------
[ 26.027% ] Init. of Soot:  95
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.685% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.562% ] Retrieving bodies:  13
[ 06.849% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.466% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.274% ] Add aspect code:  1
[ 00.274% ] Weaving advice:  1
[ 00.274% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.534% ] Soot Packs:  64
[ 12.055% ] Soot Writing Output:  44
================================================
PASS: new: Test "!within and !this handling for callee-side call points" passed.


Running test new/innerInterfaces/private inner interfaces and bytecode visibility
Commandline: abc -d new/innerInterfaces new/innerInterfaces/p/Driver.java new/innerInterfaces/p/InnerTest.java new/innerInterfaces/other/Test.java 
Abc started on Fri Jul 30 10:04:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p.Driver... 
Transforming p.InnerTest... 
Transforming other.Test... 
Transforming p.InnerTest$Inner... 
Abc finished on Fri Jul 30 10:04:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 309 millisec.)
------------------------------------------------
[ 17.476% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 42.071% ] Polyglot phases:  130
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.324% ] Intertype Adjuster:  1
[ 02.265% ] Retrieving bodies:  7
[ 07.767% ] Update pattern matcher:  24
[ 00.324% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.618% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.324% ] Weaving advice:  1
[ 00.324% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.181% ] Soot Packs:  50
[ 11.327% ] Soot Writing Output:  35
================================================
Test failed, compiled class behaved incorrectly
Message: fail compare: 0 < 1
org.aspectj.bridge.AbortException: compare: 0 < 1
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:462)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:434)
	at p.Driver.main(Driver.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/innerInterfaces/private inner interfaces and bytecode visibility" failed


Running test new/elaborated into testing of around on all join points
Commandline: abc -d new new/AroundAll.java 
Abc started on Fri Jul 30 10:04:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming A... 
Transforming AroundAll... 
Transforming SuperC... 
Transforming C... 
Transforming Abc$access$A$around$1574... 
Abc finished on Fri Jul 30 10:04:43 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1632 millisec.)
------------------------------------------------
[ 06.985% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 14.522% ] Polyglot phases:  237
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.900% ] Retrieving bodies:  31
[ 01.900% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.777% ] Compute advice lists:  29
[ 00.000% ] Intertype weave:  0
[ 00.061% ] Add aspect code:  1
[ 21.446% ] Weaving advice:  350
[ 00.123% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 33.211% ] Soot Packs:  542
[ 18.076% ] Soot Writing Output:  295
================================================
Test failed, compiled class behaved incorrectly
Message: fail steps expected array of length 114 got 132
org.aspectj.bridge.AbortException: steps expected array of length 114 got 132
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:228)
	at A.checkLog(AroundAll.java:176)
	at AroundAll.abc$static$proceed$A$around$1574(AroundAll.java:9)
	at A.around$1574(AroundAll.java:199)
	at AroundAll.main(AroundAll.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/elaborated into testing of around on all join points" failed


Running test new/type name hygiene when code comes from aspects in different packages
Commandline: abc -d new new/typeNameConflicts/Driver.java new/typeNameConflicts/p1/C.java new/typeNameConflicts/aspects/A.java 
Abc started on Fri Jul 30 10:04:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming typeNameConflicts.Driver... 
Transforming typeNameConflicts.Driver$Entry... 
Transforming typeNameConflicts.Driver$Integer... 
Transforming typeNameConflicts.Driver$1... 
Transforming typeNameConflicts.p1.C... 
Transforming typeNameConflicts.p1.C$Inner... 
Transforming typeNameConflicts.p1.C$1... 
Transforming typeNameConflicts.aspects.A... 
Abc finished on Fri Jul 30 10:04:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 340 millisec.)
------------------------------------------------
[ 16.176% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.235% ] Polyglot phases:  79
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.824% ] Retrieving bodies:  13
[ 17.647% ] Update pattern matcher:  60
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.059% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.294% ] Add aspect code:  1
[ 00.294% ] Weaving advice:  1
[ 00.294% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.412% ] Soot Packs:  66
[ 16.765% ] Soot Writing Output:  57
================================================
about to run
running
PASS: new: Test "type name hygiene when code comes from aspects in different packages" passed.


Running test new/cflowbelow dependencies (from Chris Dutchyn)
Commandline: abc -d new new/CflowBelowTest.java 
Abc started on Fri Jul 30 10:04:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CflowBelow01... 
Transforming CflowBelowTest... 
Transforming Num... 
Abc finished on Fri Jul 30 10:04:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 479 millisec.)
------------------------------------------------
[ 11.273% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 48.643% ] Polyglot phases:  233
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.088% ] Retrieving bodies:  10
[ 06.263% ] Update pattern matcher:  30
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.670% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 03.340% ] Weaving advice:  16
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.075% ] Soot Packs:  77
[ 10.647% ] Soot Writing Output:  51
================================================
PASS: new: Test "cflowbelow dependencies (from Chris Dutchyn)" passed.


Running test new/target type matching with messy interface hierarchies
Commandline: abc -d new -1.4 -Xlint:ignore new/CallTypesI.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C0... 
Transforming CallTypesI... 
Transforming A... 
Transforming C1a... 
Transforming I1b... 
Transforming C1b... 
Transforming I0... 
Transforming I1a... 
Abc finished on Fri Jul 30 10:04:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 941 millisec.)
------------------------------------------------
[ 05.845% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.543% ] Polyglot phases:  278
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.106% ] Intertype Adjuster:  1
[ 02.763% ] Retrieving bodies:  26
[ 03.294% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.251% ] Compute advice lists:  40
[ 00.000% ] Intertype weave:  0
[ 00.106% ] Add aspect code:  1
[ 02.976% ] Weaving advice:  28
[ 00.213% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 31.562% ] Soot Packs:  297
[ 19.341% ] Soot Writing Output:  182
================================================
Test failed, compiled class behaved incorrectly
Message: fail base: c1a.mI(): [instanceof c0, instanceof c1a, instanceof i0, instanceof i1a, static c1a, static i0] !equals [instanceof c0, instanceof c1a, instanceof i0, instanceof i1a, static c1a, static i0, static i1a]
org.aspectj.bridge.AbortException: base: c1a.mI(): [instanceof c0, instanceof c1a, instanceof i0, instanceof i1a, static c1a, static i0] !equals [instanceof c0, instanceof c1a, instanceof i0, instanceof i1a, static c1a, static i0, static i1a]
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:770)
	at CallTypesI.test(CallTypesI.java:34)
	at CallTypesI.test(CallTypesI.java:30)
	at CallTypesI.main(CallTypesI.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/target type matching with messy interface hierarchies" failed


Running test new/PR#458 Compiler was incorrectly flagging error in advice on initialization and static initialization
Commandline: abc -d new new/StaticInitCE.java 
Abc started on Fri Jul 30 10:04:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming StaticInitCE... 
Transforming C... 
Transforming Abc$access$A$around$1592... 
Abc finished on Fri Jul 30 10:04:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 175 millisec.)
------------------------------------------------
[ 32.000% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 11.429% ] Polyglot phases:  20
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.286% ] Retrieving bodies:  4
[ 08.571% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.143% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.571% ] Add aspect code:  1
[ 02.857% ] Weaving advice:  5
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 25.143% ] Soot Packs:  44
[ 16.000% ] Soot Writing Output:  28
================================================
PASS: new: Test "PR#458 Compiler was incorrectly flagging error in advice on initialization and static initialization" passed.


Running test new/Compiler incorrectly flagging *1 (non-alphabetic start to signature pattern)
Commandline: abc -d new new/NonAlphaSignaturePatternCE.java 
Abc started on Fri Jul 30 10:04:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C1... 
Transforming B... 
Transforming NonAlphaSignaturePatternCE... 
Abc finished on Fri Jul 30 10:04:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 703 millisec.)
------------------------------------------------
[ 08.250% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.760% ] Polyglot phases:  160
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.849% ] Retrieving bodies:  13
[ 03.414% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.991% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.142% ] Add aspect code:  1
[ 06.543% ] Weaving advice:  46
[ 00.142% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 38.834% ] Soot Packs:  273
[ 16.074% ] Soot Writing Output:  113
================================================
PASS: new: Test "Compiler incorrectly flagging *1 (non-alphabetic start to signature pattern)" passed.


Running test new/Unable to bind privately-introduced field name from introduced method in the same aspect
Commandline: abc -d new new/IntroducedFieldsNotBinding.java 
Abc started on Fri Jul 30 10:04:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass2... 
Transforming A... 
Transforming A$1... 
Transforming IntroducedFieldsNotBinding... 
Transforming TargetClass... 
Abc finished on Fri Jul 30 10:04:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 401 millisec.)
------------------------------------------------
[ 13.466% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 47.382% ] Polyglot phases:  190
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.249% ] Intertype Adjuster:  1
[ 02.743% ] Retrieving bodies:  11
[ 05.736% ] Update pattern matcher:  23
[ 00.249% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.746% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.748% ] Add aspect code:  3
[ 00.249% ] Weaving advice:  1
[ 00.249% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.461% ] Soot Packs:  62
[ 11.721% ] Soot Writing Output:  47
================================================
running: 1
PASS: new: Test "Unable to bind privately-introduced field name from introduced method in the same aspect" passed.


Running test new/anonInnerClass/anonymous inner class with aspect
Commandline: abc -d new/anonInnerClass new/anonInnerClass/Driver.java 
Abc started on Fri Jul 30 10:04:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming Test... 
Transforming Driver... 
Transforming A... 
Transforming Test$1... 
Abc finished on Fri Jul 30 10:04:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 316 millisec.)
------------------------------------------------
[ 17.089% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.506% ] Polyglot phases:  128
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.481% ] Retrieving bodies:  11
[ 07.595% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.899% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.316% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.316% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.456% ] Soot Packs:  52
[ 12.342% ] Soot Writing Output:  39
================================================
Test failed, compiled class behaved incorrectly
Message: fail : -bar !equals -bar-after
org.aspectj.bridge.AbortException: : -bar !equals -bar-after
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:770)
	at Driver.main(Driver.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/anonInnerClass/anonymous inner class with aspect" failed


Running test new/Arguments are not being passed in to calls advice
Commandline: abc -d new new/PR335.java 
Abc started on Fri Jul 30 10:04:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR335... 
Transforming Bug1... 
Transforming Ship... 
Abc finished on Fri Jul 30 10:04:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 406 millisec.)
------------------------------------------------
[ 13.300% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.251% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.202% ] Retrieving bodies:  13
[ 06.404% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.419% ] Compute advice lists:  22
[ 00.000% ] Intertype weave:  0
[ 00.246% ] Add aspect code:  1
[ 03.941% ] Weaving advice:  16
[ 00.246% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.704% ] Soot Packs:  80
[ 14.286% ] Soot Writing Output:  58
================================================
PASS: new: Test "Arguments are not being passed in to calls advice" passed.


Running test design/intro/interfaces as mixins with introduction
Commandline: abc -d design/intro design/intro/Interfaces.java 
Abc started on Fri Jul 30 10:04:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line interfaceinvoke thisparam.<I: java.lang.String set$instanceField$1638(java.lang.String)>(thisparam, result)
Getting position for a untagged source line interfaceinvoke thisparam.<I: java.lang.String set$privateField$1642(java.lang.String)>(thisparam, result)
Getting position for a untagged source line interfaceinvoke thisparam.<I: java.lang.String set$privateField$1646(java.lang.String)>(thisparam, result)
Transforming SubC... 
Transforming A3... 
Transforming A2... 
Transforming Interfaces... 
Transforming A1... 
Transforming I... 
Transforming SubI... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 805 millisec.)
------------------------------------------------
[ 12.298% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.124% ] Create polyglot compiler:  1
[ 33.043% ] Polyglot phases:  266
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.124% ] Intertype Adjuster:  1
[ 02.609% ] Retrieving bodies:  21
[ 03.851% ] Update pattern matcher:  31
[ 00.248% ] Weave Initializers:  2
[ 00.000% ] Load shadow types:  0
[ 14.783% ] Compute advice lists:  119
[ 00.000% ] Intertype weave:  0
[ 00.124% ] Add aspect code:  1
[ 03.230% ] Weaving advice:  26
[ 00.124% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.894% ] Soot Packs:  136
[ 12.547% ] Soot Writing Output:  101
================================================
Test failed, compiled class behaved incorrectly
Message: fail [ expected inst init of I "initialize-I" not found]
org.aspectj.bridge.AbortException: [ expected inst init of I "initialize-I" not found]
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.checkEqualIgnoreDups(Tester.java:702)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:742)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:683)
	at Interfaces.main(Interfaces.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "design/intro/interfaces as mixins with introduction" failed


Running test new/functional modifiers work correctly with introduced members
Commandline: abc -d new new/IntroducedModifiers.java 
Abc started on Fri Jul 30 10:04:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming C... 
Transforming IntroducedModifiers... 
Transforming A... 
Abc finished on Fri Jul 30 10:04:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 560 millisec.)
------------------------------------------------
[ 18.929% ] Init. of Soot:  106
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.750% ] Polyglot phases:  189
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.179% ] Intertype Adjuster:  1
[ 04.643% ] Retrieving bodies:  26
[ 05.179% ] Update pattern matcher:  29
[ 00.179% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.607% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.179% ] Weaving advice:  1
[ 00.179% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.536% ] Soot Packs:  143
[ 09.643% ] Soot Writing Output:  54
================================================
InvocationTargetException while trying to run compiled class: java.lang.NoSuchFieldException: iField
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NoSuchFieldException: iField
	at java.lang.Class.getField(Class.java:911)
	at IntroducedModifiers.main(IntroducedModifiers.java:24)
	... 7 more
FAIL: Test "new/functional modifiers work correctly with introduced members" failed


Running test new/ExceptionInInitializerError accessing cflow in aspect initialization - before variants
Commandline: abc -d new new/CflowInitInAspectVariantsBefore.java 
Abc started on Fri Jul 30 10:04:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming CflowInitInAspectVariantsBefore... 
Transforming C... 
Abc finished on Fri Jul 30 10:04:49 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 542 millisec.)
------------------------------------------------
[ 09.963% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.664% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.030% ] Retrieving bodies:  11
[ 04.428% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.661% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.351% ] Weaving advice:  29
[ 00.185% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 40.775% ] Soot Packs:  221
[ 14.945% ] Soot Writing Output:  81
================================================
PASS: new: Test "ExceptionInInitializerError accessing cflow in aspect initialization - before variants" passed.


Running test new/NoClassDefFoundError accessing cflow in aspect initialization - after variants
Commandline: abc -d new new/CflowInitInAspectVariantsAfter.java 
Abc started on Fri Jul 30 10:04:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming CflowInitInAspectVariantsAfter... 
Abc finished on Fri Jul 30 10:04:50 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1068 millisec.)
------------------------------------------------
[ 05.150% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 14.513% ] Polyglot phases:  155
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.094% ] Intertype Adjuster:  1
[ 00.655% ] Retrieving bodies:  7
[ 02.247% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.562% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.742% ] Weaving advice:  72
[ 00.094% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 55.993% ] Soot Packs:  598
[ 13.951% ] Soot Writing Output:  149
================================================
PASS: new: Test "NoClassDefFoundError accessing cflow in aspect initialization - after variants" passed.


Running test new/InternalCompilerError in JpPlan when args alone
Commandline: abc -d new new/ArgsAlone.java 
Abc started on Fri Jul 30 10:04:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line goto [?= (branch)]
Transforming TargetClass... 
Transforming ArgsAlone... 
Transforming Aspect... 
Abc finished on Fri Jul 30 10:04:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 376 millisec.)
------------------------------------------------
[ 14.628% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.053% ] Polyglot phases:  113
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.862% ] Retrieving bodies:  7
[ 07.447% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.330% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 23.404% ] Weaving advice:  88
[ 00.266% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.436% ] Soot Packs:  43
[ 09.574% ] Soot Writing Output:  36
================================================
PASS: new: Test "InternalCompilerError in JpPlan when args alone" passed.


Running test new/compile error using pcd if() with advice on introduced methods.
Commandline: abc -d new new/PR527.java 
Abc started on Fri Jul 30 10:04:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming A$I... 
Transforming PR527... 
Transforming Abc$access$A$around$1689... 
Abc finished on Fri Jul 30 10:04:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 406 millisec.)
------------------------------------------------
[ 13.547% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.094% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.246% ] Intertype Adjuster:  1
[ 02.217% ] Retrieving bodies:  9
[ 05.911% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.724% ] Compute advice lists:  7
[ 00.246% ] Intertype weave:  1
[ 00.000% ] Add aspect code:  0
[ 00.985% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 36.946% ] Soot Packs:  150
[ 11.084% ] Soot Writing Output:  45
================================================
PASS: new: Test "compile error using pcd if() with advice on introduced methods." passed.


Running test new/compile errors boolean using cflow and unimplemented method using around advice on methods introduced by interface
Commandline: abc -d new new/PR528.java 
Abc started on Fri Jul 30 10:04:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming PR528... 
Transforming A$I... 
Transforming B... 
Transforming Abc$access$B$around$1698... 
Abc finished on Fri Jul 30 10:04:53 BST 2004. ( 0 min. 2 sec. )
================================================
Breakdown of abc phases  (total: 2091 millisec.)
------------------------------------------------
[ 02.535% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.048% ] Create polyglot compiler:  1
[ 06.361% ] Polyglot phases:  133
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.048% ] Intertype Adjuster:  1
[ 00.622% ] Retrieving bodies:  13
[ 01.196% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 79.436% ] Compute advice lists:  1661
[ 00.000% ] Intertype weave:  0
[ 00.048% ] Add aspect code:  1
[ 01.004% ] Weaving advice:  21
[ 00.048% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 05.404% ] Soot Packs:  113
[ 03.252% ] Soot Writing Output:  68
================================================
InvocationTargetException while trying to run compiled class: java.lang.ExceptionInInitializerError
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.ExceptionInInitializerError
	at A.trigger(PR528.java)
	at C.trigger(PR528.java)
	at PR528.main(PR528.java:15)
	... 7 more
Caused by: java.lang.NullPointerException
	at B.<clinit>(PR528.java)
	... 10 more
FAIL: Test "new/compile errors boolean using cflow and unimplemented method using around advice on methods introduced by interface" failed


Running test new/aspect as member of interface
Commandline: abc -d new new/AspectInInterfaceCP.java 
Abc started on Fri Jul 30 10:04:53 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming HasPrivateAspect... 
Transforming HasPrivateAspect$Inner... 
Transforming AspectInInterfaceCP... 
Abc finished on Fri Jul 30 10:04:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 269 millisec.)
------------------------------------------------
[ 20.446% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.372% ] Create polyglot compiler:  1
[ 49.442% ] Polyglot phases:  133
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.115% ] Retrieving bodies:  3
[ 09.294% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.743% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.372% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.152% ] Soot Packs:  30
[ 07.063% ] Soot Writing Output:  19
================================================
PASS: new: Test "aspect as member of interface" passed.


Running test new/missing method name to synthetic invocation
Commandline: abc -d new new/PR535.java 
Abc started on Fri Jul 30 10:04:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR535... 
Transforming C... 
Transforming A... 
Transforming Abc$access$A$around$1704... 
Abc finished on Fri Jul 30 10:04:54 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 367 millisec.)
------------------------------------------------
[ 14.714% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.272% ] Create polyglot compiler:  1
[ 26.158% ] Polyglot phases:  96
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 13.896% ] Retrieving bodies:  51
[ 06.812% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.362% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.272% ] Add aspect code:  1
[ 04.360% ] Weaving advice:  16
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.074% ] Soot Packs:  70
[ 13.079% ] Soot Writing Output:  48
================================================
InvocationTargetException while trying to run compiled class: java.lang.ExceptionInInitializerError
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.ExceptionInInitializerError
	at C.foo(PR535.java)
	at PR535.main(PR535.java:10)
	... 7 more
Caused by: java.lang.NullPointerException
	at A.<clinit>(PR535.java)
	... 9 more
FAIL: Test "new/missing method name to synthetic invocation" failed


Running test new/protected subclass impl of superclass method with default access and variants
Commandline: abc -d new new/RestrictingVisibilityCP.java 
Abc started on Fri Jul 30 10:04:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming ValidChild5... 
Transforming ValidChildTest3... 
Transforming Parent... 
Transforming ValidChildTest2... 
Transforming ValidChild3... 
Transforming ValidChild... 
Transforming LogAll... 
Transforming ValidChild2... 
Transforming RestrictingVisibilityCP... 
Transforming Const... 
Transforming ValidChildTest... 
Transforming ValidClass... 
Abc finished on Fri Jul 30 10:04:55 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1323 millisec.)
------------------------------------------------
[ 04.384% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.240% ] Polyglot phases:  281
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.250% ] Retrieving bodies:  43
[ 02.041% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.494% ] Compute advice lists:  33
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 02.570% ] Weaving advice:  34
[ 00.076% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.106% ] Soot Packs:  266
[ 43.840% ] Soot Writing Output:  580
================================================
PASS: new: Test "protected subclass impl of superclass method with default access and variants" passed.


Running test new/Exception planning advice
Commandline: abc -d new -Xlint:ignore new/PR519.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR519... 
Transforming InstanceOfProblemAspect... 
Transforming A... 
Transforming MyException... 
Transforming B... 
Abc finished on Fri Jul 30 10:04:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 857 millisec.)
------------------------------------------------
[ 11.435% ] Init. of Soot:  98
[ 00.000% ] Loading Jars:  0
[ 00.117% ] Create polyglot compiler:  1
[ 19.370% ] Polyglot phases:  166
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.084% ] Retrieving bodies:  35
[ 03.967% ] Update pattern matcher:  34
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.484% ] Compute advice lists:  47
[ 00.000% ] Intertype weave:  0
[ 00.117% ] Add aspect code:  1
[ 08.985% ] Weaving advice:  77
[ 00.233% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 33.606% ] Soot Packs:  288
[ 12.602% ] Soot Writing Output:  108
================================================
PASS: new: Test "Exception planning advice" passed.


Running test new/unreproduced bug with advice - probably UTR
Commandline: abc -d new new/PR520.java 
Abc started on Fri Jul 30 10:04:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PR520... 
Transforming Unknown... 
Transforming Logger... 
Transforming LoggerCategoryCreator... 
Transforming Logger$ChromePriority... 
Transforming Abc$access$LoggerCategoryCreator$around$1709... 
Abc finished on Fri Jul 30 10:04:57 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 648 millisec.)
------------------------------------------------
[ 22.222% ] Init. of Soot:  144
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.451% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.241% ] Retrieving bodies:  21
[ 04.012% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.543% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.784% ] Weaving advice:  31
[ 00.154% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.852% ] Soot Packs:  174
[ 15.741% ] Soot Writing Output:  102
================================================
context=word_0
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=word_1
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=word_2
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=word_3
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=word_4
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=EXCEPTION
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=DEBUG
call(void Logger.log(Logger.ChromePriority, Unknown, String))
context=DEBUG-Exception
call(void Logger.log(Logger.ChromePriority, Unknown, String, Exception))
PASS: new: Test "unreproduced bug with advice - probably UTR" passed.


Running test new/introduced inner interfaces accessible inside aspect
Commandline: abc -d new new/IntroduceInnerInterfaceCP.java 
Abc started on Fri Jul 30 10:04:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/IntroduceInnerInterfaceCP.java:29,0-33:1: TargetClass should be declared abstract; it does not define walk(), which is declared in Aspect.Inner
FAIL: Test "new/introduced inner interfaces accessible inside aspect" failed


Running test new/validate (enclosing) join point and source locations
Commandline: abc -d new -Xlint:ignore new/NegativeSourceLocation.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:04:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Const... 
Transforming NegativeSourceLocation... 
Transforming Signal... 
Transforming Aspect... 
Transforming TargetClass... 
Abc finished on Fri Jul 30 10:04:59 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1813 millisec.)
------------------------------------------------
[ 06.288% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.279% ] Polyglot phases:  277
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.420% ] Retrieving bodies:  62
[ 05.516% ] Update pattern matcher:  100
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 14.562% ] Compute advice lists:  264
[ 00.000% ] Intertype weave:  0
[ 00.055% ] Add aspect code:  1
[ 05.902% ] Weaving advice:  107
[ 00.110% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 32.984% ] Soot Packs:  598
[ 15.885% ] Soot Writing Output:  288
================================================
Test failed, compiled class behaved incorrectly
Message: fail [ expected event "before AllTargetJoinPoints initialization(java.lang.Runnable())" not found,  expected event "before AllTargetJoinPoints initialization(java.lang.Runnable())" not found]
org.aspectj.bridge.AbortException: [ expected event "before AllTargetJoinPoints initialization(java.lang.Runnable())" not found,  expected event "before AllTargetJoinPoints initialization(java.lang.Runnable())" not found]
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.checkEqualIgnoreDups(Tester.java:702)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:742)
	at org.aspectj.testing.Tester.checkEvents(Tester.java:922)
	at org.aspectj.testing.Tester.checkAndClearEvents(Tester.java:933)
	at org.aspectj.testing.Tester.checkAllEvents(Tester.java:846)
	at Signal.checkAll(NegativeSourceLocation.java:41)
	at NegativeSourceLocation.main(NegativeSourceLocation.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/validate (enclosing) join point and source locations" failed


Running test new/advice formals are just like method formals
Commandline: abc -d new new/AdviceFormalsCp.java 
Abc started on Fri Jul 30 10:04:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AdviceFormalsCp... 
Transforming C... 
Transforming A... 
Transforming Abc$access$A$around$1723... 
Abc finished on Fri Jul 30 10:04:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 402 millisec.)
------------------------------------------------
[ 19.652% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.577% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.249% ] Intertype Adjuster:  1
[ 02.736% ] Retrieving bodies:  11
[ 07.960% ] Update pattern matcher:  32
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.741% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.741% ] Weaving advice:  7
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.154% ] Soot Packs:  77
[ 12.189% ] Soot Writing Output:  49
================================================
PASS: new: Test "advice formals are just like method formals" passed.


Running test new/advice formals produce errors just like method formals
Commandline: abc -d new new/AdviceFormalsCf.java 
Abc started on Fri Jul 30 10:04:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 4
Actual errors found: 
Semantic Error at new/AdviceFormalsCf.java:28,8-24: variable "p" might already have been assigned to
Semantic Error at new/AdviceFormalsCf.java:36,8-24: variable "p" might already have been assigned to
FAIL: Test "new/advice formals produce errors just like method formals" failed


Running test new/advice throws clauses must be compatible with joinpoints they apply to
Commandline: abc -d new new/AdviceThrowsCp.java 
Abc started on Fri Jul 30 10:05:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 6, should be 0
Actual errors found: 
Semantic Error at AdviceThrowsCp.java:7,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCp.java:7,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCp.java:19,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCp.java:19,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCp.java:28,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCp.java:28,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
FAIL: Test "new/advice throws clauses must be compatible with joinpoints they apply to" failed


Running test new/potential method conflicts with introductions and interfaces and PR#561
Commandline: abc -d new new/MethodConflictsCP.java 
Abc started on Fri Jul 30 10:05:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I1... 
Transforming C... 
Transforming IO... 
Transforming CO... 
Transforming I2... 
Transforming IO$BODY... 
Transforming MethodConflictsCP... 
Transforming I1$BODY... 
Transforming I2$BODY... 
Transforming BaseI... 
Abc finished on Fri Jul 30 10:05:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 683 millisec.)
------------------------------------------------
[ 08.785% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.924% ] Polyglot phases:  300
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.146% ] Intertype Adjuster:  1
[ 01.757% ] Retrieving bodies:  12
[ 03.514% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 07.906% ] Compute advice lists:  54
[ 00.000% ] Intertype weave:  0
[ 00.439% ] Add aspect code:  3
[ 00.293% ] Weaving advice:  2
[ 00.146% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.666% ] Soot Packs:  107
[ 17.423% ] Soot Writing Output:  119
================================================
PASS: new: Test "potential method conflicts with introductions and interfaces and PR#561" passed.


Running test new/illegal method conflicts with introductions and interfaces and PR#561
Commandline: abc -d new new/MethodConflictsCF.java 
Abc started on Fri Jul 30 10:05:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 3
Actual errors found: 
Semantic Error at new/MethodConflictsCF.java:28,15-29: Duplicate method "m1()" introduced by aspects "I2.BODY" and "I1.BODY" into class "C".
FAIL: Test "new/illegal method conflicts with introductions and interfaces and PR#561" failed


Running test new/AspectOf available for different aspect types
Commandline: abc -d new new/AspectOf.java 
Abc started on Fri Jul 30 10:05:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 7, should be 0
Actual errors found: 
Syntax Error at new/AspectOf.java:18,15-21: Syntax error.
Syntax Error at new/AspectOf.java:19,29-35: Syntax error.
Syntax Error at new/AspectOf.java:23,15-21: Syntax error.
Syntax Error at new/AspectOf.java:26,29-35: Syntax error.
Syntax Error at new/AspectOf.java:28,29-35: Syntax error.
Syntax Error at new/AspectOf.java:30,29-35: Syntax error.
Syntax Error at new/AspectOf.java:32,29-35: Syntax error.
FAIL: Test "new/AspectOf available for different aspect types" failed


Running test new/privilegedAspects/access to all members of class and inner class from privileged aspect
Commandline: abc -d new/privilegedAspects new/privilegedAspects/driver/PrivilegedAspect.java new/privilegedAspects/util/Util.java new/privilegedAspects/pack/DefaultTarget.java new/privilegedAspects/pack/PublicTarget.java 
Abc started on Fri Jul 30 10:05:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 48, should be 0
Actual errors found: 
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:37,13-44: Cannot access protectedStaticInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:38,13-42: Cannot access defaultStaticInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:39,13-42: Cannot access privateStaticInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:42,13-38: Cannot access protectedInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:43,13-36: Cannot access defaultInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:44,13-37: Cannot access privateInt in pack.PublicTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:46,8-38: No valid method call found for protectedMethod() in pack.PublicTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:47,8-36: No valid method call found for defaultMethod() in pack.PublicTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:48,8-36: No valid method call found for privateMethod() in pack.PublicTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:59,13-67: Cannot access protectedStaticPublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:60,13-65: Cannot access defaultStaticPublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:61,13-65: Cannot access privateStaticPublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:65,13-54: Cannot access protectedPublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:66,13-52: Cannot access defaultPublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:67,13-53: Cannot access privatePublicInnerInt in pack.PublicTarget.PublicInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:69,8-54: No valid method call found for protectedPublicInnerMethod() in pack.PublicTarget.PublicInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:70,8-52: No valid method call found for defaultPublicInnerMethod() in pack.PublicTarget.PublicInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:71,8-52: No valid method call found for privatePublicInnerMethod() in pack.PublicTarget.PublicInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:80,18-36: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:82,13-31: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:83,13-31: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:84,13-31: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:85,13-31: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:86,8-26: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:87,13-36: Cannot access publicInt in pack.DefaultTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:88,13-39: Cannot access protectedInt in pack.DefaultTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:89,13-37: Cannot access defaultInt in pack.DefaultTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:90,13-38: Cannot access privateInt in pack.DefaultTarget from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:91,8-36: No valid method call found for publicMethod() in pack.DefaultTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:92,8-39: No valid method call found for protectedMethod() in pack.DefaultTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:93,8-37: No valid method call found for defaultMethod() in pack.DefaultTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:94,8-37: No valid method call found for privateMethod() in pack.DefaultTarget.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:102,18-49: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:104,13-44: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:105,13-44: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:106,13-44: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:107,13-44: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:108,8-39: Cannot access class "pack.DefaultTarget.DefaultInner" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:110,13-53: Cannot access publicDefaultInnerInt in pack.DefaultTarget.DefaultInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:111,13-56: Cannot access protectedDefaultInnerInt in pack.DefaultTarget.DefaultInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:112,13-54: Cannot access defaultDefaultInnerInt in pack.DefaultTarget.DefaultInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:113,13-54: Cannot access privateDefaultInnerInt in pack.DefaultTarget.DefaultInner from driver.PrivilegedAspect.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:114,8-53: No valid method call found for publicDefaultInnerMethod() in pack.DefaultTarget.DefaultInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:115,8-56: No valid method call found for protectedDefaultInnerMethod() in pack.DefaultTarget.DefaultInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:116,8-54: No valid method call found for defaultDefaultInnerMethod() in pack.DefaultTarget.DefaultInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:117,8-54: No valid method call found for privateDefaultInnerMethod() in pack.DefaultTarget.DefaultInner.
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:122,27-45: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
Semantic Error at new/privilegedAspects/driver/PrivilegedAspect.java:125,11-29: Cannot access class "pack.DefaultTarget" from the body of "driver.PrivilegedAspect".
FAIL: Test "new/privilegedAspects/access to all members of class and inner class from privileged aspect" failed


Running test new/cflow alone with around produces compiler bcg StackOverflowError
Commandline: abc -d new new/CflowAlone.java 
Abc started on Fri Jul 30 10:05:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Filteraspect... 
Transforming CflowAlone... 
Transforming testclass2... 
Transforming testclass1... 
Transforming Abc$access$Filteraspect$around$1768... 
Abc finished on Fri Jul 30 10:05:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 948 millisec.)
------------------------------------------------
[ 05.907% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 61.498% ] Polyglot phases:  583
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.105% ] Intertype Adjuster:  1
[ 00.633% ] Retrieving bodies:  6
[ 02.532% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.527% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.696% ] Weaving advice:  54
[ 00.105% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.975% ] Soot Packs:  123
[ 10.021% ] Soot Writing Output:  95
================================================
PASS: new: Test "cflow alone with around produces compiler bcg StackOverflowError" passed.


Running test new/get/set join points run for complex assignment operators (+=, etc.) (working)
Commandline: abc -d new new/AssignOps.java 
Abc started on Fri Jul 30 10:05:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AssignOps... 
Abc finished on Fri Jul 30 10:05:06 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1321 millisec.)
------------------------------------------------
[ 04.315% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.076% ] Create polyglot compiler:  1
[ 64.724% ] Polyglot phases:  855
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.076% ] Intertype Adjuster:  1
[ 03.104% ] Retrieving bodies:  41
[ 01.817% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 07.267% ] Compute advice lists:  96
[ 00.000% ] Intertype weave:  0
[ 00.076% ] Add aspect code:  1
[ 00.454% ] Weaving advice:  6
[ 00.076% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.068% ] Soot Packs:  133
[ 07.949% ] Soot Writing Output:  105
================================================
PASS: new: Test "get/set join points run for complex assignment operators (+=, etc.) (working)" passed.


Running test new/introTypeMissing/this available in introduced field initializers
Commandline: abc -d new/introTypeMissing new/introTypeMissing/ThisInIntroFieldInit.java 
Abc started on Fri Jul 30 10:05:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass... 
Transforming A... 
Transforming A$1... 
Transforming Validator... 
Transforming ThisInIntroFieldInit... 
Transforming TargetClass$1... 
Abc finished on Fri Jul 30 10:05:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 795 millisec.)
------------------------------------------------
[ 11.698% ] Init. of Soot:  93
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.057% ] Polyglot phases:  390
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.126% ] Intertype Adjuster:  1
[ 03.145% ] Retrieving bodies:  25
[ 03.019% ] Update pattern matcher:  24
[ 00.377% ] Weave Initializers:  3
[ 00.000% ] Load shadow types:  0
[ 01.761% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.126% ] Add aspect code:  1
[ 00.126% ] Weaving advice:  1
[ 00.126% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.252% ] Soot Packs:  161
[ 10.189% ] Soot Writing Output:  81
================================================
PASS: new/introTypeMissing: Test "this available in introduced field initializers" passed.


Running test new/introTypeMissing/Introduced type unavailable to cast expressions in introduced methods
Commandline: abc -d new/introTypeMissing new/introTypeMissing/Cast.java new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:05:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming Util... 
Transforming PureJava... 
Transforming PureJava$1... 
Transforming TargetClass... 
Transforming TargetClass$InnerClass... 
Transforming PureJava$2... 
Transforming PureJava$Result... 
Transforming CastAspect... 
Transforming Cast... 
Abc finished on Fri Jul 30 10:05:08 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1216 millisec.)
------------------------------------------------
[ 04.934% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 61.431% ] Polyglot phases:  747
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.701% ] Retrieving bodies:  45
[ 02.056% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.645% ] Compute advice lists:  20
[ 00.000% ] Intertype weave:  0
[ 00.082% ] Add aspect code:  1
[ 00.164% ] Weaving advice:  2
[ 00.082% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.872% ] Soot Packs:  193
[ 10.033% ] Soot Writing Output:  122
================================================
PASS: new/introTypeMissing: Test "Introduced type unavailable to cast expressions in introduced methods" passed.


Running test new/introTypeMissing/Introduced type unavailable to qualified new expressions in introduced methods
Commandline: abc -d new/introTypeMissing new/introTypeMissing/Inner.java new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:05:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming TargetClass... 
Transforming TargetClass$InnerClass... 
Transforming PureJava... 
Transforming PureJava$1... 
Transforming PureJava$Result... 
Transforming Util... 
Transforming PureJava$2... 
Transforming InstanceOfAspect... 
Transforming Inner... 
Abc finished on Fri Jul 30 10:05:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 980 millisec.)
------------------------------------------------
[ 05.918% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.102% ] Create polyglot compiler:  1
[ 29.796% ] Polyglot phases:  292
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.102% ] Intertype Adjuster:  1
[ 04.694% ] Retrieving bodies:  46
[ 02.449% ] Update pattern matcher:  24
[ 00.204% ] Weave Initializers:  2
[ 00.000% ] Load shadow types:  0
[ 01.837% ] Compute advice lists:  18
[ 00.000% ] Intertype weave:  0
[ 00.102% ] Add aspect code:  1
[ 00.204% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 36.122% ] Soot Packs:  354
[ 18.469% ] Soot Writing Output:  181
================================================
PASS: new/introTypeMissing: Test "Introduced type unavailable to qualified new expressions in introduced methods" passed.


Running test new/introTypeMissing/Introduced type unavailable to cast expressions in introduced field initializers
Commandline: abc -d new/introTypeMissing new/introTypeMissing/CastInFieldInit.java new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:05:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming Util... 
Transforming PureJava... 
Transforming PureJava$1... 
Transforming PureJava$Result... 
Transforming TargetClass... 
Transforming PureJava$2... 
Transforming TargetClass$InnerClass... 
Transforming CastInFieldInitAspect... 
Transforming CastInFieldInit... 
Transforming Valid... 
Transforming CastInFieldInitAspect$1... 
Abc finished on Fri Jul 30 10:05:10 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1015 millisec.)
------------------------------------------------
[ 05.911% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.000% ] Polyglot phases:  406
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.714% ] Retrieving bodies:  58
[ 02.463% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.828% ] Compute advice lists:  49
[ 00.000% ] Intertype weave:  0
[ 00.099% ] Add aspect code:  1
[ 00.197% ] Weaving advice:  2
[ 00.099% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 23.941% ] Soot Packs:  243
[ 16.749% ] Soot Writing Output:  170
================================================
PASS: new/introTypeMissing: Test "Introduced type unavailable to cast expressions in introduced field initializers" passed.


Running test new/introTypeMissing/Aspect type unavailable to qualified new expressions in body of introduced methods
Commandline: abc -d new/introTypeMissing new/introTypeMissing/AspectInIntroducedMethod.java 
Abc started on Fri Jul 30 10:05:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass... 
Transforming A... 
Transforming A$inner... 
Transforming AspectInIntroducedMethod... 
Abc finished on Fri Jul 30 10:05:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 463 millisec.)
------------------------------------------------
[ 16.415% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.216% ] Create polyglot compiler:  1
[ 48.164% ] Polyglot phases:  223
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.216% ] Intertype Adjuster:  1
[ 01.944% ] Retrieving bodies:  9
[ 09.071% ] Update pattern matcher:  42
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.864% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.216% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.175% ] Soot Packs:  61
[ 09.719% ] Soot Writing Output:  45
================================================
PASS: new/introTypeMissing: Test "Aspect type unavailable to qualified new expressions in body of introduced methods" passed.


Running test new/introTypeMissing/Introduced type unavailable to instanceof expressions in introduced methods
Commandline: abc -d new/introTypeMissing new/introTypeMissing/InstanceOf.java new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:05:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 9, should be 8
Actual errors found: 
Syntax Error at new/introTypeMissing/InstanceOf.java:19,47-48: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:20,41-42: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:21,41-42: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:22,43-44: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:23,39-40: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:24,41-42: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:25,43-44: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:26,45-46: Syntax error.
Syntax Error at new/introTypeMissing/InstanceOf.java:29,19-20: Syntax error.
FAIL: Test "new/introTypeMissing/Introduced type unavailable to instanceof expressions in introduced methods" failed


Running test new/introTypeMissing/Introduced type unavailable to qualified new expressions in introduced field initializers
Commandline: abc -d new/introTypeMissing new/introTypeMissing/InnerInFieldInit.java new/introTypeMissing/TargetClass.java new/introTypeMissing/Util.java 
Abc started on Fri Jul 30 10:05:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Type... 
Transforming TargetClass... 
Transforming PureJava... 
Transforming PureJava$Result... 
Transforming TargetClass$InnerClass... 
Transforming PureJava$1... 
Transforming Util... 
Transforming PureJava$2... 
Transforming InnerInFieldInitAspect... 
Transforming InnerInFieldInitAspect$1... 
Transforming Valid... 
Transforming InnerInFieldInit... 
Abc finished on Fri Jul 30 10:05:12 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1227 millisec.)
------------------------------------------------
[ 05.460% ] Init. of Soot:  67
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.487% ] Polyglot phases:  325
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.460% ] Retrieving bodies:  67
[ 02.037% ] Update pattern matcher:  25
[ 00.081% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.630% ] Compute advice lists:  20
[ 00.000% ] Intertype weave:  0
[ 00.081% ] Add aspect code:  1
[ 00.081% ] Weaving advice:  1
[ 00.081% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 40.098% ] Soot Packs:  492
[ 18.500% ] Soot Writing Output:  227
================================================
PASS: new/introTypeMissing: Test "Introduced type unavailable to qualified new expressions in introduced field initializers" passed.


Running test new/variable slots and finally/catch causing verify errors
Commandline: abc -d new new/AfterFinally.java 
Abc started on Fri Jul 30 10:05:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AfterFinally... 
Abc finished on Fri Jul 30 10:05:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 810 millisec.)
------------------------------------------------
[ 08.272% ] Init. of Soot:  67
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 38.395% ] Polyglot phases:  311
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.247% ] Intertype Adjuster:  2
[ 07.654% ] Retrieving bodies:  62
[ 02.963% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.111% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.123% ] Add aspect code:  1
[ 04.691% ] Weaving advice:  38
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.259% ] Soot Packs:  237
[ 07.284% ] Soot Writing Output:  59
================================================
execution(void AfterFinally.main(String[]))
execution(Collection AfterFinally.m(String))
execution(String AfterFinally.getX())
execution(String AfterFinally.getX())
execution(Collection AfterFinally.m(String))
execution(void AfterFinally.main(String[]))
PASS: new: Test "variable slots and finally/catch causing verify errors" passed.


Running test new/enclosing join point not exported properly in pre-initialization join point
Commandline: abc -d new new/PreInitialization.java 
Abc started on Fri Jul 30 10:05:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PreInitialization... 
Transforming A... 
Abc finished on Fri Jul 30 10:05:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 374 millisec.)
------------------------------------------------
[ 16.310% ] Init. of Soot:  61
[ 00.000% ] Loading Jars:  0
[ 00.267% ] Create polyglot compiler:  1
[ 27.540% ] Polyglot phases:  103
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.604% ] Retrieving bodies:  6
[ 07.487% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.070% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 07.219% ] Weaving advice:  27
[ 00.267% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 30.749% ] Soot Packs:  115
[ 07.487% ] Soot Writing Output:  28
================================================
Test failed, compiled class behaved incorrectly
Message: fail compare: method-call !equals preinitialization
org.aspectj.bridge.AbortException: compare: method-call !equals preinitialization
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:770)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:754)
	at A.before$1822(PreInitialization.java:22)
	at PreInitialization.<init>(PreInitialization.java)
	at PreInitialization.main(PreInitialization.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/enclosing join point not exported properly in pre-initialization join point" failed


Running test new/after advice on static method with pcd if() using result
Commandline: abc -d new new/PR590.java 
Abc started on Fri Jul 30 10:05:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "after advice on static method with pcd if() using result" passed.


Running test new/after advice on static method with pcd if() using result through pointcut
Commandline: abc -d new -Xlint:ignore new/PR590a.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:05:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "after advice on static method with pcd if() using result through pointcut" passed.


Running test new/PR600/AbstractMethodError for introduced methods (order 1)
Commandline: abc -d new/PR600 new/PR600/Main.java new/PR600/My_error.java new/PR600/A.java new/PR600/B.java new/PR600/C.java 
Abc started on Fri Jul 30 10:05:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Main... 
Transforming B... 
Transforming C... 
Transforming My_error... 
Transforming My_error$Queue... 
Abc finished on Fri Jul 30 10:05:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 452 millisec.)
------------------------------------------------
[ 13.274% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.221% ] Create polyglot compiler:  1
[ 40.929% ] Polyglot phases:  185
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.442% ] Intertype Adjuster:  2
[ 02.655% ] Retrieving bodies:  12
[ 03.097% ] Update pattern matcher:  14
[ 00.221% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.549% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.664% ] Add aspect code:  3
[ 00.442% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.133% ] Soot Packs:  91
[ 16.372% ] Soot Writing Output:  74
================================================
	Call received  by: A
	Call forwarded to: B
	Call received  by: B
	Call forwarded to: C
Hurray! The call has been received by C!
PASS: new/PR600: Test "AbstractMethodError for introduced methods (order 1)" passed.


Running test new/PR600/AbstractMethodError for introduced methods (order 2)
Commandline: abc -d new/PR600 new/PR600/Main.java new/PR600/My_error.java new/PR600/C.java new/PR600/A.java new/PR600/B.java 
Abc started on Fri Jul 30 10:05:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Main... 
Transforming C... 
Transforming B... 
Transforming My_error... 
Transforming My_error$Queue... 
Abc finished on Fri Jul 30 10:05:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 381 millisec.)
------------------------------------------------
[ 15.486% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.260% ] Polyglot phases:  81
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.262% ] Intertype Adjuster:  1
[ 02.887% ] Retrieving bodies:  11
[ 03.675% ] Update pattern matcher:  14
[ 00.262% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.837% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.262% ] Add aspect code:  1
[ 00.262% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 25.722% ] Soot Packs:  98
[ 28.084% ] Soot Writing Output:  107
================================================
	Call received  by: A
	Call forwarded to: B
	Call received  by: B
	Call forwarded to: C
Hurray! The call has been received by C!
PASS: new/PR600: Test "AbstractMethodError for introduced methods (order 2)" passed.


Running test new/PR600/AbstractMethodError for introduced methods (order 3)
Commandline: abc -d new/PR600 new/PR600/My_error.java new/PR600/A.java new/PR600/B.java new/PR600/C.java new/PR600/Main.java 
Abc started on Fri Jul 30 10:05:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Main... 
Transforming B... 
Transforming C... 
Transforming My_error... 
Transforming My_error$Queue... 
Abc finished on Fri Jul 30 10:05:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 394 millisec.)
------------------------------------------------
[ 25.127% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.254% ] Create polyglot compiler:  1
[ 21.827% ] Polyglot phases:  86
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.254% ] Intertype Adjuster:  1
[ 03.046% ] Retrieving bodies:  12
[ 03.807% ] Update pattern matcher:  15
[ 00.254% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 02.284% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.254% ] Weaving advice:  1
[ 00.254% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 24.365% ] Soot Packs:  96
[ 18.274% ] Soot Writing Output:  72
================================================
	Call received  by: A
	Call forwarded to: B
	Call received  by: B
	Call forwarded to: C
Hurray! The call has been received by C!
PASS: new/PR600: Test "AbstractMethodError for introduced methods (order 3)" passed.


Running test new/PR600/AbstractMethodError for introduced methods (order 4)
Commandline: abc -d new/PR600 new/PR600/A.java new/PR600/B.java new/PR600/C.java new/PR600/Main.java new/PR600/My_error.java 
Abc started on Fri Jul 30 10:05:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Main... 
Transforming C... 
Transforming B... 
Transforming My_error... 
Transforming My_error$Queue... 
Abc finished on Fri Jul 30 10:05:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 359 millisec.)
------------------------------------------------
[ 27.577% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.270% ] Polyglot phases:  62
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.279% ] Intertype Adjuster:  1
[ 03.900% ] Retrieving bodies:  14
[ 03.900% ] Update pattern matcher:  14
[ 00.279% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.950% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.279% ] Add aspect code:  1
[ 00.279% ] Weaving advice:  1
[ 00.279% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 24.234% ] Soot Packs:  87
[ 19.777% ] Soot Writing Output:  71
================================================
	Call received  by: A
	Call forwarded to: B
	Call received  by: B
	Call forwarded to: C
Hurray! The call has been received by C!
PASS: new/PR600: Test "AbstractMethodError for introduced methods (order 4)" passed.


Running test new/PR600/AbstractMethodError for introduced methods (order 5)
Commandline: abc -d new/PR600 new/PR600/A.java new/PR600/B.java new/PR600/Main.java new/PR600/C.java new/PR600/My_error.java 
Abc started on Fri Jul 30 10:05:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Main... 
Transforming B... 
Transforming C... 
Transforming My_error... 
Transforming My_error$Queue... 
Abc finished on Fri Jul 30 10:05:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 395 millisec.)
------------------------------------------------
[ 24.304% ] Init. of Soot:  96
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.722% ] Polyglot phases:  70
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.253% ] Intertype Adjuster:  1
[ 04.557% ] Retrieving bodies:  18
[ 03.544% ] Update pattern matcher:  14
[ 00.253% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 02.025% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.253% ] Add aspect code:  1
[ 00.253% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 24.051% ] Soot Packs:  95
[ 22.785% ] Soot Writing Output:  90
================================================
	Call received  by: A
	Call forwarded to: B
	Call received  by: B
	Call forwarded to: C
Hurray! The call has been received by C!
PASS: new/PR600: Test "AbstractMethodError for introduced methods (order 5)" passed.


Running test new/declare error and abstract pointcuts
Commandline: abc -d new new/AbstractDeclare.java 
Abc started on Fri Jul 30 10:05:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "declare error and abstract pointcuts" passed.


Running test new/runtime/Exercise runtime classes (optionally in 1.1 VM)
Commandline: abc -d new/runtime new/runtime/AllRuntime.java new/runtime/TesterDriver.java 
Abc started on Fri Jul 30 10:05:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming TargetClass... 
Transforming B... 
Transforming AllRuntime... 
Transforming A... 
Transforming TesterDriver... 
Transforming B$abc$PerThis... 
Abc finished on Fri Jul 30 10:05:32 BST 2004. ( 0 min. 15 sec. )
================================================
Breakdown of abc phases  (total: 15220 millisec.)
------------------------------------------------
[ 00.401% ] Init. of Soot:  61
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.779% ] Polyglot phases:  2706
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.183% ] Retrieving bodies:  180
[ 00.217% ] Update pattern matcher:  33
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 06.032% ] Compute advice lists:  918
[ 00.000% ] Intertype weave:  0
[ 00.007% ] Add aspect code:  1
[ 07.674% ] Weaving advice:  1168
[ 00.059% ] Exceptions check:  9
[ 00.000% ] Validate jimple:  0
[ 47.681% ] Soot Packs:  7257
[ 18.968% ] Soot Writing Output:  2887
================================================
PASS: new/runtime: Test "Exercise runtime classes (optionally in 1.1 VM)" passed.


Running test new/VerifyError after around advice falls off end of tryCatch
Commandline: abc -d new new/TryOffEnd.java 
Abc started on Fri Jul 30 10:05:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TryOffEnd... 
Transforming A... 
Abc finished on Fri Jul 30 10:05:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 398 millisec.)
------------------------------------------------
[ 19.347% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 58.040% ] Polyglot phases:  231
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.769% ] Retrieving bodies:  15
[ 06.784% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.503% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.251% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.251% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.533% ] Soot Packs:  26
[ 04.523% ] Soot Writing Output:  18
================================================
Compilation produced an unexpected number of errors: 0, should be 2
Actual errors found: 
FAIL: Test "new/VerifyError after around advice falls off end of tryCatch" failed


Running test new/Named within pointcuts failing
Commandline: abc -d new new/NamedWithinPointcuts.java 
Abc started on Fri Jul 30 10:05:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NamedWithinPointcuts... 
Transforming Test... 
Abc finished on Fri Jul 30 10:05:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 274 millisec.)
------------------------------------------------
[ 20.438% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.270% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.460% ] Retrieving bodies:  4
[ 08.759% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.730% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.095% ] Weaving advice:  3
[ 00.365% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.679% ] Soot Packs:  32
[ 06.204% ] Soot Writing Output:  17
================================================
PASS: new: Test "Named within pointcuts failing" passed.


Running test new/subaspects/aspect with private abstract pointcut
Commandline: abc -d new/subaspects new/subaspects/PrivatePointcutCE.java 
Abc started on Fri Jul 30 10:05:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PrivatePointcutCE... 
Abc finished on Fri Jul 30 10:05:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 104 millisec.)
------------------------------------------------
[ 56.731% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.115% ] Polyglot phases:  23
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.962% ] Retrieving bodies:  1
[ 11.538% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.962% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.846% ] Soot Packs:  4
[ 03.846% ] Soot Writing Output:  4
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/subaspects/aspect with private abstract pointcut" failed


Running test new/subaspects/concrete aspect unable to access abstract package-private pointcut in parent for overriding
Commandline: abc -d new/subaspects new/subaspects/parent/ParentCE.java new/subaspects/child/ChildCE.java 
Abc started on Fri Jul 30 10:05:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 6
Actual errors found: 
Semantic Error at new/subaspects/child/ChildCE.java:9,7-18:1: child.ChildCE should be declared abstract; it does not define fromInterface(), which is declared in child.I
Semantic Error at new/subaspects/child/ChildCE.java:21,17-48: An abstract pointcut cannot have a body.
Semantic Error at new/subaspects/parent/ParentCE.java:22,13-31: pointcut withSig() in parent.Child cannot override definition in parent.ParentCE because parameter types differ
Semantic Error at new/subaspects/child/ChildCE.java:31,0-34:1: child.ParentChild should be declared abstract; it does not define fromInterface(), which is declared in child.I
FAIL: Test "new/subaspects/concrete aspect unable to access abstract package-private pointcut in parent for overriding" failed


Running test new/subaspects/inner, outer, and outside-package subaspects of an aspect with abstract protected-, public-, and default-access pointcuts
Commandline: abc -d new/subaspects new/subaspects/parent/SubAspectVisibility.java new/subaspects/parent/ForeignChildHelper.java new/subaspects/child/ForeignChildAspect.java 
Abc started on Fri Jul 30 10:05:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming parent.SubAspectVisibility... 
Transforming parent.SubAspectVisibility$InnerChild... 
Transforming parent.OuterChild... 
Transforming child.ForeignChildAspect... 
Transforming parent.ForeignChildHelper... 
Abc finished on Fri Jul 30 10:05:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 529 millisec.)
------------------------------------------------
[ 10.208% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.405% ] Polyglot phases:  182
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.647% ] Retrieving bodies:  14
[ 05.104% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 13.043% ] Compute advice lists:  69
[ 00.000% ] Intertype weave:  0
[ 00.189% ] Add aspect code:  1
[ 00.378% ] Weaving advice:  2
[ 00.189% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.794% ] Soot Packs:  110
[ 13.043% ] Soot Writing Output:  69
================================================
PASS: new/subaspects: Test "inner, outer, and outside-package subaspects of an aspect with abstract protected-, public-, and default-access pointcuts" passed.


Running test new/subaspects/inner subaspects of an aspect with private pointcut
Commandline: abc -d new/subaspects new/subaspects/parent/PrivatePointcut.java 
Abc started on Fri Jul 30 10:05:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming parent.PrivatePointcut... 
Transforming parent.InnerChild... 
Abc finished on Fri Jul 30 10:05:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 284 millisec.)
------------------------------------------------
[ 19.014% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 53.521% ] Polyglot phases:  152
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.352% ] Intertype Adjuster:  1
[ 01.056% ] Retrieving bodies:  3
[ 08.451% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.704% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.352% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.352% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 09.859% ] Soot Packs:  28
[ 06.338% ] Soot Writing Output:  18
================================================
PASS: new/subaspects: Test "inner subaspects of an aspect with private pointcut" passed.


Running test new/subaspects/outer subaspects of an aspect with private pointcut
Commandline: abc -d new/subaspects new/subaspects/parent/PrivatePointcutOuterClass.java 
Abc started on Fri Jul 30 10:05:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming parent.PrivatePointcutOuterClass... 
Transforming parent.InnerChild... 
Abc finished on Fri Jul 30 10:05:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 275 millisec.)
------------------------------------------------
[ 20.727% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.818% ] Polyglot phases:  93
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.455% ] Retrieving bodies:  4
[ 08.727% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.727% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.364% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 28.000% ] Soot Packs:  77
[ 06.182% ] Soot Writing Output:  17
================================================
PASS: new/subaspects: Test "outer subaspects of an aspect with private pointcut" passed.


Running test new/subaspects/abstract aspect used statically should not cause instantiation of advice or pointcut
Commandline: abc -d new/subaspects new/subaspects/AbstractAspectUsedStatically.java 
Abc started on Fri Jul 30 10:05:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AbstractAspectUsedStatically... 
Abc finished on Fri Jul 30 10:05:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 196 millisec.)
------------------------------------------------
[ 28.571% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 48.469% ] Polyglot phases:  95
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.531% ] Retrieving bodies:  3
[ 12.245% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.020% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.592% ] Soot Packs:  9
[ 03.571% ] Soot Writing Output:  7
================================================
PASS: new/subaspects: Test "abstract aspect used statically should not cause instantiation of advice or pointcut" passed.


Running test new/private inner interface accessible in scope when declared on outer class
Commandline: abc -d new new/DeclareAccess.java 
Abc started on Fri Jul 30 10:05:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/DeclareAccess.java:19,0-24:1: Target should be declared abstract; it does not define value(), which is declared in Aspect.PI
FAIL: Test "new/private inner interface accessible in scope when declared on outer class" failed


Running test new/accessing protected superclass members in and outside CCC from body of method introduction
Commandline: abc -d new new/SuperInIntroduction.java 
Abc started on Fri Jul 30 10:05:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ObjectSub... 
Transforming Sub... 
Transforming SuperInIntroduction... 
Transforming A... 
Transforming Super... 
Abc finished on Fri Jul 30 10:05:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 413 millisec.)
------------------------------------------------
[ 13.317% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.242% ] Create polyglot compiler:  1
[ 30.508% ] Polyglot phases:  126
[ 00.242% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.242% ] Intertype Adjuster:  1
[ 05.569% ] Retrieving bodies:  23
[ 06.538% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.937% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.242% ] Weaving advice:  1
[ 00.242% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 29.540% ] Soot Packs:  122
[ 11.380% ] Soot Writing Output:  47
================================================
InvocationTargetException while trying to run compiled class: java.lang.VerifyError: (class: A, method: getClone signature: (LObjectSub;)LObjectSub;) Bad access to protected data
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.VerifyError: (class: A, method: getClone signature: (LObjectSub;)LObjectSub;) Bad access to protected data
	at Sub.getInt(SuperInIntroduction.java)
	at SuperInIntroduction.main(SuperInIntroduction.java:6)
	... 7 more
FAIL: Test "new/accessing protected superclass members in and outside CCC from body of method introduction" failed


Running test new/accessing private superclass members from body of method introduction
Commandline: abc -d new new/SuperInIntroductionCE.java 
Abc started on Fri Jul 30 10:05:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: new: Test "accessing private superclass members from body of method introduction" passed.


Running test new/simple test for around and casting
Commandline: abc -d new new/AroundCasting.java 
Abc started on Fri Jul 30 10:05:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AroundCasting... 
Transforming Abc$access$A$around$1960... 
Transforming Abc$access$A$around$1961... 
Abc finished on Fri Jul 30 10:05:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 493 millisec.)
------------------------------------------------
[ 12.170% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 59.026% ] Polyglot phases:  291
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.217% ] Retrieving bodies:  6
[ 05.274% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.609% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.203% ] Add aspect code:  1
[ 00.811% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.345% ] Soot Packs:  51
[ 10.345% ] Soot Writing Output:  51
================================================
PASS: new: Test "simple test for around and casting" passed.


Running test new/aroundinner/aroundInner 1 - around advice inner Thread subclass running proceed but not writing field
Commandline: abc -d new/aroundinner new/aroundinner/ThreadNoField.java new/aroundinner/Common.java 
Abc started on Fri Jul 30 10:05:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Target... 
Transforming ThreadNoField... 
Transforming Common... 
Transforming Aspect$1... 
Transforming Abc$access$Aspect$around$1965... 
Abc finished on Fri Jul 30 10:05:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 521 millisec.)
------------------------------------------------
[ 11.324% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.923% ] Polyglot phases:  208
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.192% ] Intertype Adjuster:  1
[ 05.566% ] Retrieving bodies:  29
[ 11.132% ] Update pattern matcher:  58
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.727% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.768% ] Weaving advice:  4
[ 00.192% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.587% ] Soot Packs:  76
[ 14.587% ] Soot Writing Output:  76
================================================
PASS: new/aroundinner: Test "aroundInner 1 - around advice inner Thread subclass running proceed but not writing field" passed.


Running test new/aroundinner/aroundInner 2 - around advice inner Runnable running proceed and writing method-final proxy
Commandline: abc -d new/aroundinner new/aroundinner/Proxy.java new/aroundinner/Common.java 
Abc started on Fri Jul 30 10:05:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming Common... 
Transforming Aspect$Proxy... 
Transforming Target... 
Transforming Proxy... 
Transforming Aspect$1... 
Transforming Abc$access$Aspect$around$1967... 
Abc finished on Fri Jul 30 10:05:39 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1839 millisec.)
------------------------------------------------
[ 08.592% ] Init. of Soot:  158
[ 00.000% ] Loading Jars:  0
[ 00.054% ] Create polyglot compiler:  1
[ 64.437% ] Polyglot phases:  1185
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.054% ] Intertype Adjuster:  1
[ 01.740% ] Retrieving bodies:  32
[ 01.523% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.489% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.054% ] Add aspect code:  1
[ 00.163% ] Weaving advice:  3
[ 00.054% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 09.190% ] Soot Packs:  169
[ 13.649% ] Soot Writing Output:  251
================================================
PASS: new/aroundinner: Test "aroundInner 2 - around advice inner Runnable running proceed and writing method-final proxy" passed.


Running test new/aroundinner/aroundInner 3 - around advice inner class running proceed and writing field
Commandline: abc -d new/aroundinner new/aroundinner/Minimal.java new/aroundinner/Common.java 
Abc started on Fri Jul 30 10:05:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Minimal... 
Transforming MyObject... 
Transforming Target... 
Transforming Aspect... 
Transforming Aspect$1... 
Transforming Common... 
Transforming Abc$access$Aspect$around$1969... 
Abc finished on Fri Jul 30 10:05:40 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1418 millisec.)
------------------------------------------------
[ 04.584% ] Init. of Soot:  65
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 75.176% ] Polyglot phases:  1066
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.904% ] Retrieving bodies:  27
[ 01.904% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 06.417% ] Compute advice lists:  91
[ 00.000% ] Intertype weave:  0
[ 00.071% ] Add aspect code:  1
[ 00.212% ] Weaving advice:  3
[ 00.071% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 05.360% ] Soot Packs:  76
[ 04.302% ] Soot Writing Output:  61
================================================
PASS: new/aroundinner: Test "aroundInner 3 - around advice inner class running proceed and writing field" passed.


Running test new/aroundinner/aroundInner 4 - around advice inner Thread subclass running proceed and writing field
Commandline: abc -d new/aroundinner new/aroundinner/ThreadSub.java new/aroundinner/Common.java 
Abc started on Fri Jul 30 10:05:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming ThreadSub... 
Transforming Target... 
Transforming Aspect$1... 
Transforming ThreadSubclass... 
Transforming Common... 
Transforming Abc$access$Aspect$around$1971... 
Abc finished on Fri Jul 30 10:05:43 BST 2004. ( 0 min. 2 sec. )
================================================
Breakdown of abc phases  (total: 2585 millisec.)
------------------------------------------------
[ 02.166% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 88.975% ] Polyglot phases:  2300
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.083% ] Retrieving bodies:  28
[ 01.006% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.348% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.735% ] Weaving advice:  19
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 03.133% ] Soot Packs:  81
[ 02.553% ] Soot Writing Output:  66
================================================
PASS: new/aroundinner: Test "aroundInner 4 - around advice inner Thread subclass running proceed and writing field" passed.


Running test new/aroundinner/aroundInner 5 - around advice inner Runnable (subinterface) running proceed and writing field introduced on subinterface
Commandline: abc -d new/aroundinner new/aroundinner/RunnableSub.java new/aroundinner/Common.java 
Abc started on Fri Jul 30 10:05:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect... 
Transforming RunnableSub... 
Transforming Aspect$1... 
Transforming Target... 
Transforming Common... 
Transforming MyRunner... 
Transforming Abc$access$Aspect$around$1974... 
Abc finished on Fri Jul 30 10:05:44 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1414 millisec.)
------------------------------------------------
[ 07.850% ] Init. of Soot:  111
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 72.136% ] Polyglot phases:  1020
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.071% ] Intertype Adjuster:  1
[ 02.192% ] Retrieving bodies:  31
[ 02.051% ] Update pattern matcher:  29
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.636% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.283% ] Weaving advice:  4
[ 00.071% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.325% ] Soot Packs:  146
[ 04.385% ] Soot Writing Output:  62
================================================
PASS: new/aroundinner: Test "aroundInner 5 - around advice inner Runnable (subinterface) running proceed and writing field introduced on subinterface" passed.


Running test new/Named local class closing over proceed invocation
Commandline: abc -d new new/LocalClassClosingOverProceed.java 
Abc started on Fri Jul 30 10:05:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalClassClosingOverProceed... 
Transforming NamedLocalClass... 
Transforming NamedLocalClass$1LocalClass... 
Transforming Target... 
Transforming Abc$access$NamedLocalClass$around$1980... 
Abc finished on Fri Jul 30 10:05:48 BST 2004. ( 0 min. 3 sec. )
================================================
Breakdown of abc phases  (total: 3402 millisec.)
------------------------------------------------
[ 01.587% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.029% ] Create polyglot compiler:  1
[ 50.529% ] Polyglot phases:  1719
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.235% ] Retrieving bodies:  8
[ 00.735% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.118% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.029% ] Add aspect code:  1
[ 00.088% ] Weaving advice:  3
[ 00.029% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 03.762% ] Soot Packs:  128
[ 42.857% ] Soot Writing Output:  1458
================================================
PASS: new: Test "Named local class closing over proceed invocation" passed.


Running test new/beautiful recursive computation of factorial with around is now supported
Commandline: abc -d new new/CircularAdvice.java 
Abc started on Fri Jul 30 10:05:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FactorialViaAround... 
Transforming CircularAdvice... 
Transforming Abc$access$FactorialViaAround$around$1982... 
Abc finished on Fri Jul 30 10:05:49 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1043 millisec.)
------------------------------------------------
[ 05.657% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 75.168% ] Polyglot phases:  784
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.096% ] Intertype Adjuster:  1
[ 00.575% ] Retrieving bodies:  6
[ 02.301% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.384% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.384% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 04.506% ] Soot Packs:  47
[ 10.930% ] Soot Writing Output:  114
================================================
PASS: new: Test "beautiful recursive computation of factorial with around is now supported" passed.


Running test new/multi-dispatch not used for named pcd references
Commandline: abc -d new new/MultiDispatchCf.java 
Abc started on Fri Jul 30 10:05:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: new: Test "multi-dispatch not used for named pcd references" passed.


Running test new/multi-dispatch implemented through around + args
Commandline: abc -d new new/MultiDispatchCp.java 
Abc started on Fri Jul 30 10:05:49 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MultiExec... 
Transforming MultiDispatchCp... 
Transforming C... 
Transforming Multi... 
Transforming MultiCall... 
Transforming Abc$access$Multi$around$1992... 
Transforming Abc$access$Multi$around$1991... 
Transforming Abc$access$Multi$around$1990... 
Abc finished on Fri Jul 30 10:05:50 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1014 millisec.)
------------------------------------------------
[ 13.708% ] Init. of Soot:  139
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.657% ] Polyglot phases:  321
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.874% ] Retrieving bodies:  19
[ 02.564% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.170% ] Compute advice lists:  22
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.016% ] Weaving advice:  61
[ 00.099% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.542% ] Soot Packs:  259
[ 16.371% ] Soot Writing Output:  166
================================================
PASS: new: Test "multi-dispatch implemented through around + args" passed.


Running test new/unrecognized aspect should not net Cloneable and Serializable warnings
Commandline: abc -d new new/UnrecognizedAspectCE.java 
Abc started on Fri Jul 30 10:05:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "unrecognized aspect should not net Cloneable and Serializable warnings" passed.


Running test new/unreachable code generated by around advice on the execution of void methods
Commandline: abc -d new new/AroundVoid.java 
Abc started on Fri Jul 30 10:05:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line goto [?= (branch)]
Getting position for a untagged source line return
Transforming AroundVoid... 
Transforming A... 
Transforming C... 
Transforming Abc$access$A$around$1998... 
Abc finished on Fri Jul 30 10:05:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 428 millisec.)
------------------------------------------------
[ 22.430% ] Init. of Soot:  96
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.103% ] Polyglot phases:  116
[ 00.234% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.206% ] Retrieving bodies:  18
[ 06.308% ] Update pattern matcher:  27
[ 00.234% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.636% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 09.579% ] Weaving advice:  41
[ 00.234% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.121% ] Soot Packs:  69
[ 11.916% ] Soot Writing Output:  51
================================================
PASS: new: Test "unreachable code generated by around advice on the execution of void methods" passed.


Running test new/Overriding method implementations using introduction on interfaces
Commandline: abc -d new -Xlint:ignore new/IntroductionsOverriding.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:05:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming A... 
Transforming IntroductionsOverriding... 
Transforming BaseClass... 
Transforming Base... 
Transforming DerivedClass... 
Transforming Abc$access$A$around$2003... 
Transforming Abc$access$A$around$2004... 
Transforming Abc$access$A$around$2002... 
Transforming Abc$access$A$around$2005... 
Abc finished on Fri Jul 30 10:05:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 504 millisec.)
------------------------------------------------
[ 11.310% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.198% ] Create polyglot compiler:  1
[ 25.595% ] Polyglot phases:  129
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.198% ] Intertype Adjuster:  1
[ 02.778% ] Retrieving bodies:  14
[ 04.960% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.373% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 02.579% ] Weaving advice:  13
[ 00.198% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 32.341% ] Soot Packs:  163
[ 16.468% ] Soot Writing Output:  83
================================================
PASS: new: Test "Overriding method implementations using introduction on interfaces" passed.


Running test new/more coverage for around and concrete methods on interfaces
Commandline: abc -d new -Xlint:ignore new/MultiAndAround.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:05:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming Intro... 
Transforming SubBase... 
Transforming MultiAndAround... 
Transforming IBase... 
Transforming IDerived... 
Transforming A... 
Transforming Base... 
Transforming Abc$access$A$around$2018... 
Transforming Abc$access$A$around$2017... 
Transforming Abc$access$A$around$2020... 
Abc finished on Fri Jul 30 10:05:54 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1563 millisec.)
------------------------------------------------
[ 04.607% ] Init. of Soot:  72
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.136% ] Polyglot phases:  768
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.128% ] Intertype Adjuster:  2
[ 00.960% ] Retrieving bodies:  15
[ 01.536% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.832% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.064% ] Add aspect code:  1
[ 00.960% ] Weaving advice:  15
[ 00.064% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 30.518% ] Soot Packs:  477
[ 11.196% ] Soot Writing Output:  175
================================================
PASS: new: Test "more coverage for around and concrete methods on interfaces" passed.


Running test new/invalid number and type of proceed arguments
Commandline: abc -d new new/InvalidProceedArgsCE.java 
Abc started on Fri Jul 30 10:05:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 12 errors, which were matched and verified against the expected errors.
PASS: new: Test "invalid number and type of proceed arguments" passed.


Running test new/after returning advice order
Commandline: abc -d new new/Cricket.java 
Abc started on Fri Jul 30 10:05:54 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Cricket... 
Transforming Lib... 
Transforming Trace... 
Abc finished on Fri Jul 30 10:05:55 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 970 millisec.)
------------------------------------------------
[ 05.670% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 13.196% ] Polyglot phases:  128
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.320% ] Retrieving bodies:  71
[ 04.639% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.753% ] Compute advice lists:  17
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.567% ] Weaving advice:  54
[ 00.206% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 52.268% ] Soot Packs:  507
[ 09.381% ] Soot Writing Output:  91
================================================
PASS: new: Test "after returning advice order" passed.


Running test new/after returning advice param
Commandline: abc -d new new/AfterReturningParam.java 
Abc started on Fri Jul 30 10:05:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AfterReturningParam... 
Abc finished on Fri Jul 30 10:05:55 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 407 millisec.)
------------------------------------------------
[ 14.251% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.980% ] Polyglot phases:  179
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.440% ] Retrieving bodies:  14
[ 06.880% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.948% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.491% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.690% ] Soot Packs:  72
[ 10.319% ] Soot Writing Output:  42
================================================
PASS: new: Test "after returning advice param" passed.


Running test new/! and declaring types with callee-side call join points
Commandline: abc -d new -Xlint:ignore new/NotAndDeclaringTypes.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:05:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming NotAndDeclaringTypes... 
Transforming Square... 
Transforming Concern... 
Transforming Rectangle... 
Abc finished on Fri Jul 30 10:05:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 310 millisec.)
------------------------------------------------
[ 19.032% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.323% ] Create polyglot compiler:  1
[ 42.258% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.581% ] Retrieving bodies:  8
[ 08.065% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.613% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.323% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.806% ] Soot Packs:  49
[ 10.000% ] Soot Writing Output:  31
================================================
PASS: new: Test "! and declaring types with callee-side call join points" passed.


Running test new/. Binding the wrong arguments in withincode(..).
Commandline: abc -d new new/BindingArgumentsInWithincode.java 
Abc started on Fri Jul 30 10:05:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BindingArgumentsInWithincode... 
Transforming C... 
Transforming A... 
Abc finished on Fri Jul 30 10:05:56 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 357 millisec.)
------------------------------------------------
[ 16.246% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 54.062% ] Polyglot phases:  193
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.280% ] Intertype Adjuster:  1
[ 01.681% ] Retrieving bodies:  6
[ 08.683% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.120% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.280% ] Add aspect code:  1
[ 00.280% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.364% ] Soot Packs:  37
[ 07.003% ] Soot Writing Output:  25
================================================
PASS: new: Test ". Binding the wrong arguments in withincode(..)." passed.


Running test new/. Matching arguments in cflow correctly.
Commandline: abc -d new new/MatchingArgumentsInCflow.java 
Abc started on Fri Jul 30 10:05:56 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MatchingArgumentsInCflow... 
Transforming MethodParamAspect... 
Transforming MethodParam... 
Abc finished on Fri Jul 30 10:05:57 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 414 millisec.)
------------------------------------------------
[ 13.285% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 53.140% ] Polyglot phases:  220
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.691% ] Retrieving bodies:  7
[ 07.729% ] Update pattern matcher:  32
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.691% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 03.382% ] Weaving advice:  14
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.594% ] Soot Packs:  48
[ 07.488% ] Soot Writing Output:  31
================================================
PASS: new: Test ". Matching arguments in cflow correctly." passed.


Running test new/. Binding variables with numbers in their name with pertarget(..)'s.
Commandline: abc -d new new/PerTargetAndVariablesWithNumbersInTheirNames.java 
Abc started on Fri Jul 30 10:05:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A3... 
Transforming PerTargetAndVariablesWithNumbersInTheirNames... 
Transforming A2... 
Transforming A1... 
Transforming A4... 
Transforming C... 
Transforming A1$abc$PerTarget... 
Transforming A2$abc$PerTarget... 
Transforming Abc$access$A1$around$2052... 
Transforming Abc$access$A2$around$2053... 
Transforming Abc$access$A3$around$2054... 
Transforming Abc$access$A4$around$2055... 
Abc finished on Fri Jul 30 10:05:58 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1035 millisec.)
------------------------------------------------
[ 10.338% ] Init. of Soot:  107
[ 00.000% ] Loading Jars:  0
[ 00.097% ] Create polyglot compiler:  1
[ 11.691% ] Polyglot phases:  121
[ 00.097% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.836% ] Retrieving bodies:  19
[ 02.415% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.836% ] Compute advice lists:  19
[ 00.000% ] Intertype weave:  0
[ 00.290% ] Add aspect code:  3
[ 02.029% ] Weaving advice:  21
[ 00.097% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.280% ] Soot Packs:  272
[ 42.995% ] Soot Writing Output:  445
================================================
PASS: new: Test ". Binding variables with numbers in their name with pertarget(..)'s." passed.


Running test new/second arg in formal on shared joinpoint with pcd if() causes verify error ??
Commandline: abc -d new new/PR554.java 
Abc started on Fri Jul 30 10:05:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming a... 
Transforming PR554... 
Transforming Abc$access$a$around$2061... 
Transforming Abc$access$a$around$2060... 
Abc finished on Fri Jul 30 10:05:58 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 386 millisec.)
------------------------------------------------
[ 25.648% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.570% ] Polyglot phases:  118
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.259% ] Intertype Adjuster:  1
[ 02.591% ] Retrieving bodies:  10
[ 06.477% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.554% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 02.332% ] Weaving advice:  9
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.912% ] Soot Packs:  73
[ 11.658% ] Soot Writing Output:  45
================================================
PASS: new: Test "second arg in formal on shared joinpoint with pcd if() causes verify error ??" passed.


Running test new/privilegedAspects/access to private members from privileged aspect
Commandline: abc -d new/privilegedAspects new/privilegedAspects/driver/PR555.java new/privilegedAspects/util/Util.java new/privilegedAspects/pack/DefaultTarget.java 
Abc started on Fri Jul 30 10:05:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 8, should be 0
Actual errors found: 
Semantic Error at new/privilegedAspects/driver/PR555.java:28,15-33: Cannot access class "pack.DefaultTarget" from the body of "driver.PA".
Semantic Error at new/privilegedAspects/driver/PR555.java:36,8-26: Cannot access class "pack.DefaultTarget" from the body of "driver.PA".
Semantic Error at new/privilegedAspects/driver/PR555.java:38,15-33: Cannot access privateInt in pack.DefaultTarget from driver.PA.
Semantic Error at new/privilegedAspects/driver/PR555.java:43,36-54: Cannot access class "pack.DefaultTarget" from the body of "driver.PA.Inner".
Semantic Error at new/privilegedAspects/driver/PR555.java:46,12-30: Cannot access class "pack.DefaultTarget" from the body of "driver.PA.Inner".
Semantic Error at new/privilegedAspects/driver/PR555.java:48,19-43: Cannot access privateInt in pack.DefaultTarget from driver.PA.Inner.
Semantic Error at new/privilegedAspects/driver/PR555.java:55,13-31: Cannot access class "pack.DefaultTarget" from the body of "driver.PA".
Semantic Error at new/privilegedAspects/driver/PR555.java:59,25-35: Could not find field or local variable "privateInt".
FAIL: Test "new/privilegedAspects/access to private members from privileged aspect" failed


Running test new/inner classes of privileged aspects cannot see target class private members
Commandline: abc -d new new/InnerClassInPrivilegedAspect.java 
Abc started on Fri Jul 30 10:05:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/InnerClassInPrivilegedAspect.java:102,20-36: Could not find field or local variable "privateStaticInt".
FAIL: Test "new/inner classes of privileged aspects cannot see target class private members" failed


Running test new/packageAccessPR556/aspects should get package access outside the file
Commandline: abc -d new/packageAccessPR556 new/packageAccessPR556/base1/p/C1.java new/packageAccessPR556/base2/p/C2.java 
Abc started on Fri Jul 30 10:05:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p.C1... 
Transforming p.C2... 
Transforming p.A2... 
Abc finished on Fri Jul 30 10:05:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 609 millisec.)
------------------------------------------------
[ 09.195% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.034% ] Polyglot phases:  189
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.120% ] Retrieving bodies:  19
[ 05.090% ] Update pattern matcher:  31
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.762% ] Compute advice lists:  29
[ 00.000% ] Intertype weave:  0
[ 00.164% ] Add aspect code:  1
[ 00.164% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.406% ] Soot Packs:  106
[ 29.064% ] Soot Writing Output:  177
================================================
PASS: new/packageAccessPR556: Test "aspects should get package access outside the file" passed.


Running test new/subclass advice not run for join points selected by superclass cflow-based pointcuts
Commandline: abc -d new new/PR559.java 
Abc started on Fri Jul 30 10:05:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 17, should be 0
Actual errors found: 
Semantic Error at new/PR559.java:35,13-36:64: An abstract pointcut cannot have a body.
Semantic Error at new/PR559.java:37,13-58: An abstract pointcut cannot have a body.
Semantic Error at new/PR559.java:38,13-50: An abstract pointcut cannot have a body.
Semantic Error at new/PR559.java:39,13-60: An abstract pointcut cannot have a body.
Semantic Error at new/PR559.java:40,13-64: An abstract pointcut cannot have a body.
Semantic Error at new/PR559.java:47,0-54:1: Base should be declared abstract; it does not define notInAspect(), which is declared in AspectMarker
Semantic Error at new/PR559.java:49,50-63: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:52,57-70: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:59,57-70: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:61,23-33: Pointcut inTarget not found.
Semantic Error at new/PR559.java:65,23-37: Pointcut inTargetFlow not found.
Semantic Error at new/PR559.java:85,50-63: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:88,57-70: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:93,0-121:1: DerivedAspect should be declared abstract; it does not define notInAspect(), which is declared in AspectMarker
Semantic Error at new/PR559.java:95,57-70: Pointcut notInAspect not found.
Semantic Error at new/PR559.java:101,23-33: Pointcut inTarget not found.
Semantic Error at new/PR559.java:105,23-37: Pointcut inTargetFlow not found.
FAIL: Test "new/subclass advice not run for join points selected by superclass cflow-based pointcuts" failed


Running test new/more issues with abstract aspects and cflow pointcuts
Commandline: abc -d new new/AbstractCflows.java 
Abc started on Fri Jul 30 10:05:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PerCflowY... 
Transforming Cflow3... 
Transforming C... 
Transforming CflowX... 
Transforming PerCflow3... 
Transforming CflowBase... 
Transforming CflowY... 
Transforming PerCflowX... 
Transforming AbstractCflows... 
Transforming PerCflowBase... 
Abc finished on Fri Jul 30 10:06:00 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1046 millisec.)
------------------------------------------------
[ 05.449% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.459% ] Polyglot phases:  214
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.103% ] Retrieving bodies:  22
[ 02.390% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.677% ] Compute advice lists:  28
[ 00.000% ] Intertype weave:  0
[ 01.338% ] Add aspect code:  14
[ 03.728% ] Weaving advice:  39
[ 00.096% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 47.419% ] Soot Packs:  496
[ 14.340% ] Soot Writing Output:  150
================================================
PASS: new: Test "more issues with abstract aspects and cflow pointcuts" passed.


Running test new/compile fails for aspect derived from percflow base aspect unless pointcut excludes base aspect and subaspects
Commandline: abc -d new new/PR560.java 
Abc started on Fri Jul 30 10:06:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming Target... 
Transforming Base... 
Transforming PR560... 
Abc finished on Fri Jul 30 10:06:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 523 millisec.)
------------------------------------------------
[ 11.281% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.577% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.147% ] Retrieving bodies:  6
[ 04.780% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.338% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 02.486% ] Add aspect code:  13
[ 02.868% ] Weaving advice:  15
[ 00.191% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 26.960% ] Soot Packs:  141
[ 22.371% ] Soot Writing Output:  117
================================================
PASS: new: Test "compile fails for aspect derived from percflow base aspect unless pointcut excludes base aspect and subaspects" passed.


Running test new/cyclic pointcut definitions
Commandline: abc -d new new/CyclicPointcuts.java 
Abc started on Fri Jul 30 10:06:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 9 errors, which were matched and verified against the expected errors.
PASS: new: Test "cyclic pointcut definitions" passed.


Running test new/pertarget stack overflow getting name of anonymous (Interface) class
Commandline: abc -d new new/PR573.java 
Abc started on Fri Jul 30 10:06:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming PR573... 
Transforming PR573$1... 
Transforming Interface... 
Transforming A$abc$PerTarget... 
Abc finished on Fri Jul 30 10:06:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 401 millisec.)
------------------------------------------------
[ 13.965% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 46.384% ] Polyglot phases:  186
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.995% ] Retrieving bodies:  8
[ 05.985% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.247% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.249% ] Add aspect code:  1
[ 01.247% ] Weaving advice:  5
[ 00.249% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.706% ] Soot Packs:  71
[ 10.973% ] Soot Writing Output:  44
================================================
PASS: new: Test "pertarget stack overflow getting name of anonymous (Interface) class" passed.


Running test new/pertarget stack overflow getting name of anonymous (Object) class
Commandline: abc -d new new/PR573_1.java 
Abc started on Fri Jul 30 10:06:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming PR573_1... 
Transforming PR573_1$1... 
Transforming A$abc$PerTarget... 
Abc finished on Fri Jul 30 10:06:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 325 millisec.)
------------------------------------------------
[ 17.231% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.538% ] Polyglot phases:  122
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.462% ] Retrieving bodies:  8
[ 08.000% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.538% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.308% ] Add aspect code:  1
[ 01.846% ] Weaving advice:  6
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.769% ] Soot Packs:  61
[ 12.308% ] Soot Writing Output:  40
================================================
PASS: new: Test "pertarget stack overflow getting name of anonymous (Object) class" passed.


Running test new/pertarget runtime stack overflow (getting name of anonymous (Object) class?)
Commandline: abc -d new new/PR573_2.java 
Abc started on Fri Jul 30 10:06:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming PR573_2... 
Transforming PR573_2$1... 
Transforming A$abc$PerTarget... 
Abc finished on Fri Jul 30 10:06:02 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 330 millisec.)
------------------------------------------------
[ 16.970% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.818% ] Polyglot phases:  138
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.121% ] Retrieving bodies:  7
[ 07.273% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.212% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.303% ] Add aspect code:  1
[ 00.909% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.879% ] Soot Packs:  59
[ 11.515% ] Soot Writing Output:  38
================================================
PASS: new: Test "pertarget runtime stack overflow (getting name of anonymous (Object) class?)" passed.


Running test new/PR584 Can construct inner classes using qualified expressions
Commandline: abc -d new new/PR584.java 
Abc started on Fri Jul 30 10:06:02 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo... 
Transforming PR584... 
Transforming PR584$1... 
Transforming Foo$StaticTest... 
Transforming Foo$Test... 
Abc finished on Fri Jul 30 10:06:03 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 381 millisec.)
------------------------------------------------
[ 15.486% ] Init. of Soot:  59
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.895% ] Polyglot phases:  152
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.262% ] Intertype Adjuster:  1
[ 02.625% ] Retrieving bodies:  10
[ 06.824% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.312% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.262% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 22.310% ] Soot Packs:  85
[ 11.024% ] Soot Writing Output:  42
================================================
PASS: new: Test "PR584 Can construct inner classes using qualified expressions" passed.


Running test new/subaspect method declaration on superaspect inner interface (names)
Commandline: abc -d new new/InnerInterfaceNames.java 
Abc started on Fri Jul 30 10:06:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConcreteAspect... 
Transforming InnerInterfaceNames... 
Transforming AbstractAspect... 
Transforming AbstractAspect$InnerInterface... 
Transforming C... 
Abc finished on Fri Jul 30 10:06:03 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 307 millisec.)
------------------------------------------------
[ 18.567% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.322% ] Polyglot phases:  133
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.326% ] Intertype Adjuster:  1
[ 02.280% ] Retrieving bodies:  7
[ 07.818% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.977% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.326% ] Add aspect code:  1
[ 00.326% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.309% ] Soot Packs:  47
[ 10.749% ] Soot Writing Output:  33
================================================
PASS: new: Test "subaspect method declaration on superaspect inner interface (names)" passed.


Running test new/subaspect method declaration on superaspect inner interface (access)
Commandline: abc -d new new/InnerInterfaceAccess.java 
Abc started on Fri Jul 30 10:06:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConcreteAspect... 
Transforming C... 
Transforming InnerInterfaceAccess... 
Transforming AbstractAspect... 
Transforming AbstractAspect$InnerInterface... 
Abc finished on Fri Jul 30 10:06:03 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 297 millisec.)
------------------------------------------------
[ 18.855% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.077% ] Polyglot phases:  122
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.337% ] Intertype Adjuster:  1
[ 02.694% ] Retrieving bodies:  8
[ 08.081% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.010% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.337% ] Add aspect code:  1
[ 00.337% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.825% ] Soot Packs:  47
[ 11.448% ] Soot Writing Output:  34
================================================
PASS: new: Test "subaspect method declaration on superaspect inner interface (access)" passed.


Running test new/subaspect method declaration on superaspect inner interface (types)
Commandline: abc -d new new/InnerInterfaceTypes.java new/InnerInterfaceTypesHelper.java 
Abc started on Fri Jul 30 10:06:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConcreteAspect... 
Transforming AbstractAspect... 
Transforming AbstractAspect$InnerInterface... 
Transforming C... 
Transforming InnerInterfaceTypes... 
Abc finished on Fri Jul 30 10:06:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 344 millisec.)
------------------------------------------------
[ 15.988% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 47.674% ] Polyglot phases:  164
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.291% ] Intertype Adjuster:  1
[ 02.326% ] Retrieving bodies:  8
[ 09.302% ] Update pattern matcher:  32
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.163% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.291% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.291% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.791% ] Soot Packs:  44
[ 09.884% ] Soot Writing Output:  34
================================================
PASS: new: Test "subaspect method declaration on superaspect inner interface (types)" passed.


Running test new/around AST type XXX
Commandline: abc -d new new/PR691.java 
Abc started on Fri Jul 30 10:06:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MailerTest... 
Transforming Mail... 
Transforming Mailer... 
Transforming Message... 
Transforming TestResult... 
Transforming Transport... 
Transforming PR691... 
Transforming Abc$access$Mail$around$2128... 
Abc finished on Fri Jul 30 10:06:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 390 millisec.)
------------------------------------------------
[ 13.846% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.615% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.821% ] Retrieving bodies:  11
[ 06.667% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.051% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.872% ] Weaving advice:  19
[ 00.256% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.000% ] Soot Packs:  78
[ 14.872% ] Soot Writing Output:  58
================================================
PASS: new: Test "around AST type XXX" passed.


Running test new/around all execution with double assignment in initializer (simple)
Commandline: abc -d new new/AroundDoubleAssignment.java 
Abc started on Fri Jul 30 10:06:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AroundDoubleAssignment... 
Transforming StaticSet... 
Transforming Abc$access$AroundDoubleAssignment$around$2130... 
Abc finished on Fri Jul 30 10:06:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 421 millisec.)
------------------------------------------------
[ 35.629% ] Init. of Soot:  150
[ 00.000% ] Loading Jars:  0
[ 00.238% ] Create polyglot compiler:  1
[ 41.093% ] Polyglot phases:  173
[ 00.238% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.950% ] Retrieving bodies:  4
[ 05.938% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.475% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.238% ] Add aspect code:  1
[ 00.475% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.026% ] Soot Packs:  38
[ 05.701% ] Soot Writing Output:  24
================================================
PASS: new: Test "around all execution with double assignment in initializer (simple)" passed.


Running test new/around all execution with double assignment in initializer (coverage)
Commandline: abc -d new new/AroundDoubleAssignmentC.java 
Abc started on Fri Jul 30 10:06:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Init... 
Transforming FieldInit... 
Transforming StaticInit... 
Transforming StaticSet... 
Transforming AroundDoubleAssignmentC... 
Transforming FieldSet... 
Transforming Abc$access$AroundDoubleAssignmentC$around$2132... 
Transforming Abc$access$AroundDoubleAssignmentC$around$2133... 
Transforming Abc$access$AroundDoubleAssignmentC$around$2134... 
Transforming Abc$access$AroundDoubleAssignmentC$around$2135... 
Abc finished on Fri Jul 30 10:06:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 679 millisec.)
------------------------------------------------
[ 18.557% ] Init. of Soot:  126
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.324% ] Polyglot phases:  138
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.798% ] Retrieving bodies:  19
[ 03.829% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.946% ] Compute advice lists:  20
[ 00.000% ] Intertype weave:  0
[ 00.147% ] Add aspect code:  1
[ 01.178% ] Weaving advice:  8
[ 00.147% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.773% ] Soot Packs:  175
[ 24.300% ] Soot Writing Output:  165
================================================
PASS: new: Test "around all execution with double assignment in initializer (coverage)" passed.


Running test new/changing this in around's proceed reported by Rich Price
Commandline: abc -d new -1.4 new/AroundChangeThis.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
Abc started on Fri Jul 30 10:06:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubC... 
Transforming A... 
Transforming AroundChangeThis... 
Transforming C... 
Transforming Abc$access$A$around$2141... 
Transforming Abc$access$A$around$2140... 
Abc finished on Fri Jul 30 10:06:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 562 millisec.)
------------------------------------------------
[ 16.014% ] Init. of Soot:  90
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.690% ] Polyglot phases:  150
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.093% ] Retrieving bodies:  23
[ 18.149% ] Update pattern matcher:  102
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.313% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.957% ] Weaving advice:  11
[ 00.178% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.972% ] Soot Packs:  101
[ 12.633% ] Soot Writing Output:  71
================================================
PASS: new: Test "changing this in around's proceed reported by Rich Price" passed.


Running test new/default package for aspect introductions is not the current package
Commandline: abc -d new new/introductionPackage/two/C.java new/introductionPackage/one/C.java new/introductionPackage/one/Aspect.java new/introductionPackage/one/TestAspect.java 
Abc started on Fri Jul 30 10:06:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming two.C... 
Transforming one.TestAspect... 
Transforming one.C... 
Transforming one.Aspect... 
Abc finished on Fri Jul 30 10:06:06 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 451 millisec.)
------------------------------------------------
[ 11.973% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 38.359% ] Polyglot phases:  173
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.222% ] Intertype Adjuster:  1
[ 02.217% ] Retrieving bodies:  10
[ 05.765% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.552% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.222% ] Add aspect code:  1
[ 06.430% ] Weaving advice:  29
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.851% ] Soot Packs:  76
[ 16.408% ] Soot Writing Output:  74
================================================
PASS: new: Test "default package for aspect introductions is not the current package" passed.


Running test new/PR569/anon class written to wrong directory
Commandline: abc -d new/PR569 new/PR569/a/IntroAnon.java new/PR569/a/MyInterface.java new/PR569/b/Dest.java 
Abc started on Fri Jul 30 10:06:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming b.Dest... 
Transforming a.MyInterface... 
Transforming a.IntroAnon... 
Transforming a.IntroAnon$MI... 
Transforming a.IntroAnon$1... 
Abc finished on Fri Jul 30 10:06:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 284 millisec.)
------------------------------------------------
[ 19.718% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.549% ] Polyglot phases:  118
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.352% ] Intertype Adjuster:  1
[ 01.761% ] Retrieving bodies:  5
[ 09.507% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.056% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.352% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.352% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.789% ] Soot Packs:  42
[ 10.563% ] Soot Writing Output:  30
================================================
PASS: new/PR569: Test "anon class written to wrong directory" passed.


Running test new/unqualified transitive pointcut references not resolved
Commandline: abc -d new new/PointcutQualification.java 
Abc started on Fri Jul 30 10:06:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass... 
Transforming PointcutQualification... 
Transforming Aspect... 
Transforming DebugAspect... 
Transforming I... 
Abc finished on Fri Jul 30 10:06:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 400 millisec.)
------------------------------------------------
[ 28.750% ] Init. of Soot:  115
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.750% ] Polyglot phases:  107
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.250% ] Intertype Adjuster:  1
[ 02.250% ] Retrieving bodies:  9
[ 06.000% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.250% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.250% ] Add aspect code:  1
[ 03.750% ] Weaving advice:  15
[ 00.250% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.000% ] Soot Packs:  76
[ 11.500% ] Soot Writing Output:  46
================================================
PASS: new: Test "unqualified transitive pointcut references not resolved" passed.


Running test new/unqualified transitive pointcut references not resolved - 2
Commandline: abc -d new new/PointcutQualification2.java 
Abc started on Fri Jul 30 10:06:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetClass... 
Transforming DebugAspect2... 
Transforming PointcutQualification2... 
Transforming Aspect2... 
Transforming I... 
Abc finished on Fri Jul 30 10:06:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 562 millisec.)
------------------------------------------------
[ 09.786% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 66.192% ] Polyglot phases:  372
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.601% ] Retrieving bodies:  9
[ 04.626% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.712% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.178% ] Add aspect code:  1
[ 00.178% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.142% ] Soot Packs:  57
[ 06.584% ] Soot Writing Output:  37
================================================
PASS: new: Test "unqualified transitive pointcut references not resolved - 2" passed.


Running test new/direct use outside aspect of defined abstract pointcut
Commandline: abc -d new new/AbstractPointcutAccess.java 
Abc started on Fri Jul 30 10:06:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ConcretePointcutAccess... 
Transforming AbstractPointcutAccess... 
Transforming AbstractPointcutUser... 
Abc finished on Fri Jul 30 10:06:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 480 millisec.)
------------------------------------------------
[ 23.750% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.667% ] Polyglot phases:  152
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.417% ] Intertype Adjuster:  2
[ 01.875% ] Retrieving bodies:  9
[ 11.250% ] Update pattern matcher:  54
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.625% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.208% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.208% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.333% ] Soot Packs:  88
[ 11.667% ] Soot Writing Output:  56
================================================
PASS: new: Test "direct use outside aspect of defined abstract pointcut" passed.


Running test new/direct use outside aspect of undefined abstract pointcut
Commandline: abc -d new new/AbstractPointcutAccessCE.java 
Abc started on Fri Jul 30 10:06:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "direct use outside aspect of undefined abstract pointcut" passed.


Running test new/indirect use outside aspect of undefined abstract pointcut
Commandline: abc -d new new/AbstractPointcutIndirectCE.java 
Abc started on Fri Jul 30 10:06:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "indirect use outside aspect of undefined abstract pointcut" passed.


Running test new/simple call join point tests for JoinPoint SourceLocation context
Commandline: abc -d new new/SourceLocationCall.java 
Abc started on Fri Jul 30 10:06:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SourceLocationCall... 
Transforming Tracing... 
Abc finished on Fri Jul 30 10:06:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 437 millisec.)
------------------------------------------------
[ 12.586% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.325% ] Polyglot phases:  150
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.229% ] Intertype Adjuster:  1
[ 02.517% ] Retrieving bodies:  11
[ 18.993% ] Update pattern matcher:  83
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.831% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.492% ] Weaving advice:  24
[ 00.229% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.561% ] Soot Packs:  68
[ 08.238% ] Soot Writing Output:  36
================================================
PASS: new: Test "simple call join point tests for JoinPoint SourceLocation context" passed.


Running test new/!target with second advice on casted call
Commandline: abc -d new new/CallNotTarget.java 
Abc started on Fri Jul 30 10:06:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming Aspect... 
Transforming A... 
Transforming B... 
Transforming CallNotTarget... 
Abc finished on Fri Jul 30 10:06:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 327 millisec.)
------------------------------------------------
[ 16.208% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.306% ] Create polyglot compiler:  1
[ 42.508% ] Polyglot phases:  139
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.752% ] Retrieving bodies:  9
[ 07.645% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.835% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.612% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.208% ] Soot Packs:  53
[ 11.927% ] Soot Writing Output:  39
================================================
PASS: new: Test "!target with second advice on casted call" passed.


Running test new/name binding in around cflow
Commandline: abc -d new new/AroundCall.java 
Abc started on Fri Jul 30 10:06:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TestAspect... 
Transforming AroundCall... 
Transforming Abc$access$TestAspect$around$2160... 
Abc finished on Fri Jul 30 10:06:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 352 millisec.)
------------------------------------------------
[ 15.625% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.216% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.705% ] Retrieving bodies:  6
[ 07.102% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.136% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.284% ] Add aspect code:  1
[ 05.682% ] Weaving advice:  20
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.455% ] Soot Packs:  72
[ 10.795% ] Soot Writing Output:  38
================================================
PASS: new: Test "name binding in around cflow" passed.


Running test new/name binding in around cflow - 2
Commandline: abc -d new new/ArgsInCflow2.java 
Abc started on Fri Jul 30 10:06:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ArgsInCflow2... 
Transforming Test... 
Transforming Abc$access$Test$around$2162... 
Abc finished on Fri Jul 30 10:06:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 339 millisec.)
------------------------------------------------
[ 16.224% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.295% ] Create polyglot compiler:  1
[ 43.068% ] Polyglot phases:  146
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.065% ] Retrieving bodies:  7
[ 07.080% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.475% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.720% ] Weaving advice:  16
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.339% ] Soot Packs:  52
[ 09.735% ] Soot Writing Output:  33
================================================
PASS: new: Test "name binding in around cflow - 2" passed.


Running test new/around name-binding in cflows using factorial
Commandline: abc -d new new/FactorialCflow.java 
Abc started on Fri Jul 30 10:06:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming FactorialCflow... 
Transforming Abc$access$A$around$2165... 
Transforming Abc$access$A$around$2164... 
Abc finished on Fri Jul 30 10:06:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 912 millisec.)
------------------------------------------------
[ 05.811% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.110% ] Create polyglot compiler:  1
[ 04.934% ] Polyglot phases:  45
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 08.224% ] Retrieving bodies:  75
[ 01.535% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.316% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.110% ] Add aspect code:  1
[ 07.018% ] Weaving advice:  64
[ 00.110% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 50.000% ] Soot Packs:  456
[ 20.833% ] Soot Writing Output:  190
================================================
Unexpected exception while trying to run compiled class: java.lang.ExceptionInInitializerError
java.lang.ExceptionInInitializerError
	at FactorialCflow.<clinit>(FactorialCflow.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NullPointerException
	at A.<clinit>(FactorialCflow.java)
	... 8 more
FAIL: Test "new/around name-binding in cflows using factorial" failed


Running test new/incrementing objects, arrays - 2
Commandline: abc -d new new/ArrayInc2CE.java 
Abc started on Fri Jul 30 10:06:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: new: Test "incrementing objects, arrays - 2" passed.


Running test new/incrementing objects, arrays CE
Commandline: abc -d new new/ArrayIncCE.java 
Abc started on Fri Jul 30 10:06:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 6, should be 2
Actual errors found: 
Semantic Error at new/ArrayIncCE.java:15,10-18: Operand of ++ operator must be numeric.
Semantic Error at new/ArrayIncCE.java:16,10-21: Operand of ++ operator must be numeric.
Semantic Error at new/ArrayIncCE.java:17,8-16: Operand of ++ operator must be numeric.
Semantic Error at new/ArrayIncCE.java:18,8-19: Operand of ++ operator must be numeric.
Syntax Error at new/ArrayIncCE.java:19,17-19: Syntax error.
Syntax Error at new/ArrayIncCE.java:20,20-22: Syntax error.
FAIL: Test "new/incrementing objects, arrays CE" failed


Running test new/incrementing objects, arrays - 3
Commandline: abc -d new new/ArrayInc3CE.java 
Abc started on Fri Jul 30 10:06:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 5 errors, which were matched and verified against the expected errors.
PASS: new: Test "incrementing objects, arrays - 3" passed.


Running test new/incrementing objects, arrays
Commandline: abc -d new new/ArrayInc.java 
Abc started on Fri Jul 30 10:06:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ArrayInc... 
Abc finished on Fri Jul 30 10:06:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 388 millisec.)
------------------------------------------------
[ 18.299% ] Init. of Soot:  71
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.835% ] Polyglot phases:  108
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.258% ] Intertype Adjuster:  1
[ 07.732% ] Retrieving bodies:  30
[ 06.701% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.320% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.258% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.629% ] Soot Packs:  49
[ 23.969% ] Soot Writing Output:  93
================================================
PASS: new: Test "incrementing objects, arrays" passed.


Running test new/replacing this or target in around advice
Commandline: abc -d new new/TargetObjectReplacement.java 
Abc started on Fri Jul 30 10:06:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TargetObjectReplacement... 
Transforming Foo... 
Transforming A... 
Transforming Abc$access$A$around$2168... 
Transforming Abc$access$A$around$2169... 
Transforming Abc$access$A$around$2170... 
Transforming Abc$access$A$around$2171... 
Abc finished on Fri Jul 30 10:06:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 470 millisec.)
------------------------------------------------
[ 11.489% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.617% ] Polyglot phases:  111
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.191% ] Retrieving bodies:  15
[ 05.106% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.553% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.213% ] Add aspect code:  1
[ 01.702% ] Weaving advice:  8
[ 00.213% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 38.511% ] Soot Packs:  181
[ 13.404% ] Soot Writing Output:  63
================================================
PASS: new: Test "replacing this or target in around advice" passed.


Running test new/after returning from initialization and after executing constructor
Commandline: abc -d new new/ConstructorExecInit.java 
Abc started on Fri Jul 30 10:06:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 0
Actual errors found: 
Syntax Error at new/ConstructorExecInit.java:20,18-24: Syntax error.
Syntax Error at new/ConstructorExecInit.java:21,20-21: Syntax error.
Syntax Error at new/ConstructorExecInit.java:23,31-37: Syntax error.
Syntax Error at new/ConstructorExecInit.java:24,20-21: Syntax error.
FAIL: Test "new/after returning from initialization and after executing constructor" failed


Running test new/after returning from initialization causes ExceptionInInitializer in aspect
Commandline: abc -d new new/ConstructorExecInitFails.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 0
Actual errors found: 
Syntax Error at new/ConstructorExecInitFails.java:24,18-24: Syntax error.
Syntax Error at new/ConstructorExecInitFails.java:25,26-27: Syntax error.
Syntax Error at new/ConstructorExecInitFails.java:27,31-37: Syntax error.
Syntax Error at new/ConstructorExecInitFails.java:28,26-27: Syntax error.
FAIL: Test "new/after returning from initialization causes ExceptionInInitializer in aspect" failed


Running test new/name binding in before cflow containing cflowbelow
Commandline: abc -d new new/ArgsInCflow.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: unhandled exception during compilation
polyglot.util.InternalCompilerError: unhandled exception during compilation
	at abc.main.Main.run(Main.java:476)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.ClassCastException
	at abc.aspectj.ast.PCNot_c.mayBind(PCNot_c.java:53)
	at abc.aspectj.ast.PCBinary_c.mayBind(PCBinary_c.java:66)
	at abc.aspectj.ast.PCCflow_c.mayBind(PCCflow_c.java:67)
	at abc.aspectj.ast.PCBinary_c.mayBind(PCBinary_c.java:66)
	at abc.aspectj.ast.Pointcut_c.checkFormals(Pointcut_c.java:48)
	at abc.aspectj.ast.AdviceDecl_c.typeCheck(AdviceDecl_c.java:347)
	at polyglot.visit.TypeChecker.leaveCall(TypeChecker.java:21)
	at polyglot.visit.ErrorHandlingVisitor.leave(ErrorHandlingVisitor.java:251)
	at polyglot.visit.ContextVisitor.leave(ContextVisitor.java:121)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:131)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at polyglot.ext.jl.ast.Node_c.visitList(Node_c.java:205)
	at polyglot.ext.jl.ast.ClassBody_c.visitChildren(ClassBody_c.java:61)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at abc.aspectj.ast.AspectDecl_c.visitChildren(AspectDecl_c.java:207)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at polyglot.ext.jl.ast.Node_c.visitList(Node_c.java:205)
	at polyglot.ext.jl.ast.SourceFile_c.visitChildren(SourceFile_c.java:108)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visit(Node_c.java:152)
	at polyglot.frontend.VisitorPass.run(VisitorPass.java:48)
	at polyglot.frontend.AbstractExtensionInfo.runPass(AbstractExtensionInfo.java:286)
	at polyglot.frontend.AbstractExtensionInfo.runToPass(AbstractExtensionInfo.java:222)
	at polyglot.frontend.AbstractExtensionInfo.runAllPasses(AbstractExtensionInfo.java:190)
	at polyglot.frontend.AbstractExtensionInfo.runToCompletion(AbstractExtensionInfo.java:109)
	at polyglot.frontend.Compiler.compile(Compiler.java:95)
	at abc.main.Main.compile(Main.java:573)
	at abc.main.Main.run(Main.java:426)
	... 3 more
FAIL: Test "new/name binding in before cflow containing cflowbelow" failed


Running test pureJava/no circularity errors simply because of inners (1)
Commandline: abc -d pureJava pureJava/circle/Test1CP.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming circle.Test1CP... 
Transforming circle.Type... 
Transforming circle.Type$Concrete... 
Transforming circle.Type$Reflexive... 
Transforming circle.Base... 
Abc finished on Fri Jul 30 10:06:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 137 millisec.)
------------------------------------------------
[ 39.416% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.058% ] Polyglot phases:  22
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.730% ] Intertype Adjuster:  1
[ 02.190% ] Retrieving bodies:  3
[ 08.759% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.460% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.730% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.599% ] Soot Packs:  20
[ 16.058% ] Soot Writing Output:  22
================================================
PASS: pureJava: Test "no circularity errors simply because of inners (1)" passed.


Running test pureJava/no circularity errors simply because of inners (2)
Commandline: abc -d pureJava pureJava/circle/Test2CP.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming circle.Test2CP... 
Transforming circle.Type... 
Transforming circle.Type$Concrete... 
Transforming circle.Base... 
Transforming circle.Base$I... 
Transforming circle.Type$Reflexive... 
Abc finished on Fri Jul 30 10:06:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 163 millisec.)
------------------------------------------------
[ 32.515% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.613% ] Create polyglot compiler:  1
[ 09.202% ] Polyglot phases:  15
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.454% ] Retrieving bodies:  4
[ 07.362% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.227% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.613% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 30.061% ] Soot Packs:  49
[ 15.951% ] Soot Writing Output:  26
================================================
PASS: pureJava: Test "no circularity errors simply because of inners (2)" passed.


Running test pureJava/should have circular inheritance errors (1)
Commandline: abc -d pureJava pureJava/circle/Test1CF.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 4
Actual errors found: 
Semantic Error at pureJava/circle/Test1CF.java:7,11-41: Circular inheritance involving circle.IBottom
Semantic Error at pureJava/circle/Test1CF.java:15,0-52: Type circle.DerivedI cannot circularly implement or extend itself.
Semantic Error at pureJava/circle/Test1CF.java:17,0-37: Type circle.IBottom cannot circularly implement or extend itself.
FAIL: Test "pureJava/should have circular inheritance errors (1)" failed


Running test pureJava/should have circular inheritance errors (2)
Commandline: abc -d pureJava pureJava/circle/Test2CF.java 
Abc started on Fri Jul 30 10:06:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 3
Actual errors found: 
Semantic Error at pureJava/circle/Test2CF.java:15,0-29: Circular inheritance involving circle.Base
FAIL: Test "pureJava/should have circular inheritance errors (2)" failed


Running test new/pr728/file order in type searching
Commandline: abc -d new/pr728 new/pr728/AnotherClass.java new/pr728/Interface.java 
Abc started on Fri Jul 30 10:06:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Interface... 
Transforming Interface$Aspect... 
Transforming AnotherClass... 
Transforming AnotherClass$InnerClass... 
Abc finished on Fri Jul 30 10:06:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 307 millisec.)
------------------------------------------------
[ 17.590% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 50.163% ] Polyglot phases:  154
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.954% ] Retrieving bodies:  6
[ 07.818% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.977% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.326% ] Add aspect code:  1
[ 00.326% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.378% ] Soot Packs:  38
[ 08.469% ] Soot Writing Output:  26
================================================
PASS: new/pr728: Test "file order in type searching" passed.


Running test pureJava/interface using preceding subinterface in its definition
Commandline: abc -d pureJava pureJava/ParentUsingChild.java 
Abc started on Fri Jul 30 10:06:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Parent... 
Transforming ParentUsingChild... 
Transforming ParentUsingChild$1... 
Transforming Child... 
Transforming Child$Toy... 
Transforming ParentUsingChild$2... 
Abc finished on Fri Jul 30 10:06:14 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 312 millisec.)
------------------------------------------------
[ 17.949% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.936% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 14.423% ] Retrieving bodies:  45
[ 07.692% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.526% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.321% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.936% ] Soot Packs:  31
[ 11.218% ] Soot Writing Output:  35
================================================
PASS: pureJava: Test "interface using preceding subinterface in its definition" passed.


Running test new/Parent interface using public inner interface of child in same file
Commandline: abc -d new new/ParentInterfaceUsingChildInnerInterface.java 
Abc started on Fri Jul 30 10:06:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Parent... 
Transforming ParentInterfaceUsingChildInnerInterface... 
Transforming Example... 
Transforming Child... 
Transforming Child$Inner... 
Transforming Example$1... 
Abc finished on Fri Jul 30 10:06:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 314 millisec.)
------------------------------------------------
[ 17.516% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 37.261% ] Polyglot phases:  117
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.548% ] Retrieving bodies:  8
[ 20.701% ] Update pattern matcher:  65
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.274% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.318% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.554% ] Soot Packs:  30
[ 10.828% ] Soot Writing Output:  34
================================================
PASS: new: Test "Parent interface using public inner interface of child in same file" passed.


Running test errors/a type is not allowed to extend or implement its own innner type
Commandline: abc -d errors errors/NestedInterfaceTest.java 
Abc started on Fri Jul 30 10:06:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "a type is not allowed to extend or implement its own innner type" passed.


Running test pureJava/try requires block JLS 14.19
Commandline: abc -d pureJava pureJava/TryBlockRequiredCE.java 
Abc started on Fri Jul 30 10:06:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Unable to recover from previous errors.
WARNING: This test was probably not really passed!!
Error position is null; assuming error matches current expected error with no line number. Error message: Couldn't repair and continue parse
WARNING: This test was probably not really passed!!
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "try requires block JLS 14.19" passed.


Running test pureJava/loop expressions not declarations
Commandline: abc -d pureJava pureJava/DeclarationsInLoopsCE.java 
Abc started on Fri Jul 30 10:06:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "loop expressions not declarations" passed.


Running test pureJava/local variables must be final to be accessed from inner class
Commandline: abc -d pureJava pureJava/LocalsFromInnerCE.java 
Abc started on Fri Jul 30 10:06:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 11 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "local variables must be final to be accessed from inner class" passed.


Running test pureJava/final local variables may be accessed from inner class
Commandline: abc -d pureJava pureJava/LocalsFromInnerCP.java 
Abc started on Fri Jul 30 10:06:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalsFromInnerCP... 
Transforming LocalsFromInnerCP$1m... 
Transforming LocalsFromInnerCP$1... 
Transforming LocalsFromInnerCP$2... 
Transforming LocalsFromInnerCP$m... 
Transforming LocalsFromInnerCP$3... 
Transforming LocalsFromInnerCP$4... 
Transforming LocalsFromInnerCP$5... 
Transforming LocalsFromInnerCP$6... 
Transforming LocalsFromInnerCP$7... 
Transforming LocalsFromInnerCP$8... 
Transforming LocalsFromInnerCP$9... 
Transforming LocalsFromInnerCP$2m... 
Transforming LocalsFromInnerCP$10... 
Transforming LocalsFromInnerCP$11... 
Abc finished on Fri Jul 30 10:06:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 788 millisec.)
------------------------------------------------
[ 09.772% ] Init. of Soot:  77
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.472% ] Polyglot phases:  248
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.711% ] Retrieving bodies:  45
[ 03.299% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.919% ] Compute advice lists:  23
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.381% ] Weaving advice:  3
[ 00.127% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.888% ] Soot Packs:  204
[ 20.431% ] Soot Writing Output:  161
================================================
PASS: pureJava: Test "final local variables may be accessed from inner class" passed.


Running test pureJava/missing package identifier
Commandline: abc -d pureJava pureJava/MissingPackageCE.java 
Abc started on Fri Jul 30 10:06:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "missing package identifier" passed.


Running test pureJava/interface declaration not permitted in local method scope
Commandline: abc -d pureJava pureJava/LocalInterfaceCE.java 
Abc started on Fri Jul 30 10:06:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "interface declaration not permitted in local method scope" passed.


Running test new/simple declare warning (NPE)
Commandline: abc -d new new/DeclareWarningMain.java 
Abc started on Fri Jul 30 10:06:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Warnings... 
Transforming DeclareWarningMain... 
Abc finished on Fri Jul 30 10:06:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 302 millisec.)
------------------------------------------------
[ 18.543% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.331% ] Create polyglot compiler:  1
[ 37.086% ] Polyglot phases:  112
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.331% ] Intertype Adjuster:  1
[ 00.993% ] Retrieving bodies:  3
[ 08.278% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.662% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.331% ] Add aspect code:  1
[ 00.331% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 26.821% ] Soot Packs:  81
[ 06.291% ] Soot Writing Output:  19
================================================
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "simple declare warning (NPE)" passed.


Running test new/CE for ambiguous type reference (two files in package)
Commandline: abc -d new new/ambiguousClass/AmbiguousReferent.java new/ambiguousClass/AmbiguousClassReference.java 
Abc started on Fri Jul 30 10:06:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ambiguousClass.AmbiguousClassReference... 
Transforming ambiguousClass.AmbiguousReferent... 
Abc finished on Fri Jul 30 10:06:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 114 millisec.)
------------------------------------------------
[ 50.000% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.877% ] Create polyglot compiler:  1
[ 18.421% ] Polyglot phases:  21
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.754% ] Retrieving bodies:  2
[ 10.526% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.754% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.895% ] Soot Packs:  9
[ 08.772% ] Soot Writing Output:  10
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/CE for ambiguous type reference (two files in package)" failed


Running test new/initializer can throw so long as all constructors declare so
Commandline: abc -d new new/InitializerWithThrow.java 
Abc started on Fri Jul 30 10:06:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InitializerWithThrow... 
Transforming InitializerWithThrow$TestException... 
Abc finished on Fri Jul 30 10:06:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 300 millisec.)
------------------------------------------------
[ 19.000% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.333% ] Create polyglot compiler:  1
[ 32.667% ] Polyglot phases:  98
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 27.000% ] Retrieving bodies:  81
[ 09.000% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.667% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.333% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 05.000% ] Soot Packs:  15
[ 06.000% ] Soot Writing Output:  18
================================================
PASS: new: Test "initializer can throw so long as all constructors declare so" passed.


Running test pureJava/interfaces may not contain initializers (bug found by jacks)
Commandline: abc -d pureJava pureJava/InterfaceMembersCf.java 
Abc started on Fri Jul 30 10:06:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Abc finished on Fri Jul 30 10:06:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 71 millisec.)
------------------------------------------------
[ 80.282% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 01.408% ] Create polyglot compiler:  1
[ 18.310% ] Polyglot phases:  13
[ 00.000% ] Resolve class names:  0
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "pureJava/interfaces may not contain initializers (bug found by jacks)" failed


Running test new/ajc dies on cflow into field init anon class see knownbugs.txt
Commandline: abc -d new new/CflowOfFieldInitAnonMethods.java 
Abc started on Fri Jul 30 10:06:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ThreadTracer... 
Transforming CflowOfFieldInitAnonMethods... 
Transforming CflowOfFieldInitAnonMethods$1... 
Abc finished on Fri Jul 30 10:06:20 BST 2004. ( 0 min. 2 sec. )
================================================
Breakdown of abc phases  (total: 2940 millisec.)
------------------------------------------------
[ 01.905% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.034% ] Create polyglot compiler:  1
[ 27.619% ] Polyglot phases:  812
[ 00.034% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.531% ] Retrieving bodies:  45
[ 00.850% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.238% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.034% ] Add aspect code:  1
[ 00.952% ] Weaving advice:  28
[ 00.034% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 52.381% ] Soot Packs:  1540
[ 14.388% ] Soot Writing Output:  423
================================================
PASS: new: Test "ajc dies on cflow into field init anon class see knownbugs.txt" passed.


Running test pureJava/initializers must be able to complete normally (found by jacks)
Commandline: abc -d pureJava pureJava/InitializerFlowCf.java 
Abc started on Fri Jul 30 10:06:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "initializers must be able to complete normally (found by jacks)" passed.


Running test new/Incrementing interface-introduced field
Commandline: abc -d new new/IntroducedFieldInc.java 
Abc started on Fri Jul 30 10:06:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IntroducedFieldInc... 
Transforming I... 
Transforming A... 
Abc finished on Fri Jul 30 10:06:23 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1881 millisec.)
------------------------------------------------
[ 02.871% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 87.294% ] Polyglot phases:  1642
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.532% ] Retrieving bodies:  10
[ 01.276% ] Update pattern matcher:  24
[ 00.053% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.213% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.053% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.053% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 06.061% ] Soot Packs:  114
[ 01.595% ] Soot Writing Output:  30
================================================
Test failed, compiled class behaved incorrectly
Message: fail ++((I)i).count
org.aspectj.bridge.AbortException: ++((I)i).count
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at IntroducedFieldInc.main(IntroducedFieldInc.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/Incrementing interface-introduced field" failed


Running test pureJava/more tests of super alone
Commandline: abc -d pureJava pureJava/SuperIsWeird.java 
Abc started on Fri Jul 30 10:06:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 2
Actual errors found: 
Semantic Error at pureJava/SuperIsWeird.java:9,8-13: Cannot access a non-static field or method, or refer to "this" or "super" from a static context.
Syntax Error at pureJava/SuperIsWeird.java:13,24-25: Syntax error.
Semantic Error at pureJava/SuperIsWeird.java:20,20-25: Cannot access a non-static field or method, or refer to "this" or "super" from a static context.
Syntax Error at pureJava/SuperIsWeird.java:21,21-22: Syntax error.
FAIL: Test "pureJava/more tests of super alone" failed


Running test new/The dynamic type, not the static one, should be used in if pcds
Commandline: abc -d new new/StaticTypeInIf.java 
Abc started on Fri Jul 30 10:06:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming StaticTypeInIf... 
Transforming C... 
Transforming A... 
Abc finished on Fri Jul 30 10:06:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 450 millisec.)
------------------------------------------------
[ 12.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 43.333% ] Polyglot phases:  195
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.222% ] Intertype Adjuster:  1
[ 02.889% ] Retrieving bodies:  13
[ 05.556% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.667% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.222% ] Add aspect code:  1
[ 00.889% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.556% ] Soot Packs:  88
[ 12.667% ] Soot Writing Output:  57
================================================
PASS: new: Test "The dynamic type, not the static one, should be used in if pcds" passed.


Running test new/bad interaction with after returning, around and void methods (from Rich Price)
Commandline: abc -d new new/AfterReturningResult.java 
Abc started on Fri Jul 30 10:06:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AfterReturningResult... 
Transforming A... 
Transforming CFCommand... 
Transforming B... 
Transforming CFCommandProcessor... 
Transforming Abc$access$B$around$2203... 
Abc finished on Fri Jul 30 10:06:27 BST 2004. ( 0 min. 3 sec. )
================================================
Breakdown of abc phases  (total: 3196 millisec.)
------------------------------------------------
[ 01.783% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 58.479% ] Polyglot phases:  1869
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.250% ] Retrieving bodies:  8
[ 00.438% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.156% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.031% ] Add aspect code:  1
[ 00.094% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 37.422% ] Soot Packs:  1196
[ 01.345% ] Soot Writing Output:  43
================================================
updating cache
PASS: new: Test "bad interaction with after returning, around and void methods (from Rich Price)" passed.


Running test new/type pattern matching for inner classes (from Ken Horn)
Commandline: abc -d new new/TypePat.java 
Abc started on Fri Jul 30 10:06:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at null: public class test.TypePat cannot be defined in file new/TypePat.java
Internal Error at null: exception while resolving test.A
FAIL: Test "new/type pattern matching for inner classes (from Ken Horn)" failed


Running test new/static initializer member name
Commandline: abc -d new new/StaticInitName.java 
Abc started on Fri Jul 30 10:06:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming A... 
Transforming StaticInitName... 
Abc finished on Fri Jul 30 10:06:28 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 528 millisec.)
------------------------------------------------
[ 11.364% ] Init. of Soot:  60
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.985% ] Polyglot phases:  190
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.220% ] Retrieving bodies:  17
[ 04.924% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.652% ] Compute advice lists:  14
[ 00.000% ] Intertype weave:  0
[ 00.189% ] Add aspect code:  1
[ 16.856% ] Weaving advice:  89
[ 00.189% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.742% ] Soot Packs:  62
[ 12.879% ] Soot Writing Output:  68
================================================
PASS: new: Test "static initializer member name" passed.


Running test new/cflow pcd syntax error
Commandline: abc -d new new/IllegalCflowCE.java 
Abc started on Fri Jul 30 10:06:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "cflow pcd syntax error" passed.


Running test new/binding args with indeterminate prefix and suffix
Commandline: abc -d new new/IndeterminateArgs.java 
Abc started on Fri Jul 30 10:06:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IndeterminateArgs... 
Transforming A... 
Transforming C... 
Transforming T... 
Abc finished on Fri Jul 30 10:06:30 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1641 millisec.)
------------------------------------------------
[ 06.947% ] Init. of Soot:  114
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.027% ] Polyglot phases:  263
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.061% ] Intertype Adjuster:  1
[ 01.950% ] Retrieving bodies:  32
[ 01.584% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 16.514% ] Compute advice lists:  271
[ 00.000% ] Intertype weave:  0
[ 00.061% ] Add aspect code:  1
[ 06.338% ] Weaving advice:  104
[ 00.183% ] Exceptions check:  3
[ 00.000% ] Validate jimple:  0
[ 43.998% ] Soot Packs:  722
[ 06.338% ] Soot Writing Output:  104
================================================
PASS: new: Test "binding args with indeterminate prefix and suffix" passed.


Running test new/flag errors when binding args with indeterminate prefix and suffix
Commandline: abc -d new new/IndeterminateArgsCE.java 
Abc started on Fri Jul 30 10:06:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 4
Actual errors found: 
Semantic Error at new/IndeterminateArgsCE.java:65,70-72: Two fillers in args pattern
FAIL: Test "new/flag errors when binding args with indeterminate prefix and suffix" failed


Running test new/check arg types with indeterminate prefix and suffix
Commandline: abc -d new new/IndeterminateArgType.java 
Abc started on Fri Jul 30 10:06:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming T... 
Transforming Safe... 
Transforming STarget... 
Transforming IndeterminateArgType... 
Transforming OTarget... 
Abc finished on Fri Jul 30 10:06:34 BST 2004. ( 0 min. 2 sec. )
================================================
Breakdown of abc phases  (total: 2983 millisec.)
------------------------------------------------
[ 01.844% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.461% ] Polyglot phases:  670
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.034% ] Intertype Adjuster:  1
[ 00.838% ] Retrieving bodies:  25
[ 00.872% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.374% ] Compute advice lists:  41
[ 00.000% ] Intertype weave:  0
[ 00.034% ] Add aspect code:  1
[ 09.118% ] Weaving advice:  272
[ 00.134% ] Exceptions check:  4
[ 00.000% ] Validate jimple:  0
[ 54.945% ] Soot Packs:  1639
[ 08.347% ] Soot Writing Output:  249
================================================
PASS: new: Test "check arg types with indeterminate prefix and suffix" passed.


Running test new/testing and binding args with single indeterminate prefix and suffix
Commandline: abc -d new new/IndeterminateArg.java 
Abc started on Fri Jul 30 10:06:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OObject... 
Transforming A... 
Transforming IndeterminateArg... 
Transforming SClass... 
Transforming OClass... 
Transforming C... 
Transforming T... 
Abc finished on Fri Jul 30 10:07:55 BST 2004. ( 1 min. 21 sec. )
================================================
Breakdown of abc phases  (total: 81630 millisec.)
------------------------------------------------
[ 00.066% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 00.472% ] Polyglot phases:  385
[ 00.001% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.071% ] Retrieving bodies:  58
[ 00.031% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.657% ] Compute advice lists:  536
[ 00.000% ] Intertype weave:  0
[ 00.001% ] Add aspect code:  1
[ 19.343% ] Weaving advice:  15790
[ 00.029% ] Exceptions check:  24
[ 00.000% ] Validate jimple:  0
[ 77.383% ] Soot Packs:  63168
[ 01.945% ] Soot Writing Output:  1588
================================================
PASS: new: Test "testing and binding args with single indeterminate prefix and suffix" passed.


Running test new/binding handler args with indeterminate prefix and suffix
Commandline: abc -d new new/IndeterminateHandlerArg.java 
Abc started on Fri Jul 30 10:07:55 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming IndeterminateHandlerArg... 
Transforming IndeterminateHandlerArg$1... 
Abc finished on Fri Jul 30 10:07:57 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1407 millisec.)
------------------------------------------------
[ 03.909% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 18.266% ] Polyglot phases:  257
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.416% ] Retrieving bodies:  34
[ 01.848% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 08.316% ] Compute advice lists:  117
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.183% ] Weaving advice:  87
[ 00.142% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 52.310% ] Soot Packs:  736
[ 06.610% ] Soot Writing Output:  93
================================================
PASS: new: Test "binding handler args with indeterminate prefix and suffix" passed.


Running test pureJava/Locals inside other locals, ordering of processing [eh]
Commandline: abc -d pureJava pureJava/LocalInners2.java 
Abc started on Fri Jul 30 10:07:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LocalInners2... 
Transforming LocalInners2$1Local... 
Transforming LocalInners2$1Local$Inner1... 
Transforming LocalInners2$1Local$Inner0... 
Abc finished on Fri Jul 30 10:07:57 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 186 millisec.)
------------------------------------------------
[ 36.022% ] Init. of Soot:  67
[ 00.000% ] Loading Jars:  0
[ 00.538% ] Create polyglot compiler:  1
[ 16.129% ] Polyglot phases:  30
[ 00.000% ] Resolve class names:  0
[ 00.538% ] Declare Parents:  1
[ 00.000% ] Intertype Adjuster:  0
[ 03.763% ] Retrieving bodies:  7
[ 06.452% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.226% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.538% ] Weaving advice:  1
[ 00.538% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.129% ] Soot Packs:  30
[ 16.129% ] Soot Writing Output:  30
================================================
PASS: pureJava: Test "Locals inside other locals, ordering of processing [eh]" passed.


Running test pureJava/subclass access to enclosing super class private members
Commandline: abc -d pureJava pureJava/SubclassAccessToEnclosingSuperClassPrivate.java 
Abc started on Fri Jul 30 10:07:57 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SubclassAccessToEnclosingSuperClassPrivate... 
Transforming SuperEnclosing... 
Transforming SuperEnclosing$1... 
Transforming SuperEnclosing$SubInner... 
Transforming SuperEnclosing$SubInner$SubSubInnerNoExtends... 
Transforming SuperEnclosing$SubInner$SubSubInner... 
Transforming SuperEnclosing$SubNested... 
Transforming SuperEnclosing$SubNested$SubSubNestedNoExtends... 
Transforming SuperEnclosing$2... 
Transforming SuperEnclosing$3... 
Transforming SuperEnclosing$SubNested$SubSubNested... 
Transforming Expect... 
Abc finished on Fri Jul 30 10:07:58 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 823 millisec.)
------------------------------------------------
[ 06.561% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.096% ] Polyglot phases:  223
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.122% ] Intertype Adjuster:  1
[ 05.225% ] Retrieving bodies:  43
[ 02.795% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.253% ] Compute advice lists:  35
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.365% ] Weaving advice:  3
[ 00.122% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 31.835% ] Soot Packs:  262
[ 21.628% ] Soot Writing Output:  178
================================================
PASS: pureJava: Test "subclass access to enclosing super class private members" passed.


Running test new/nolang/Compiling java.lang.Object with ajc yields non-verifying bytecode
Commandline: abc -d new/nolang new/nolang/java/lang/Object.java new/nolang/java/lang/String.java 
Abc started on Fri Jul 30 10:07:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <java.lang.String: boolean matches(java.lang.String)>
polyglot.util.InternalCompilerError: Exception while processing <java.lang.String: boolean matches(java.lang.String)>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: 
Aborting: can't find classfile java.util.regex.Pattern
	at soot.Scene.getSootClass(Scene.java:335)
	at soot.coffi.CFG.generateJimple(CFG.java:4587)
	at soot.coffi.CFG.jimplify(CFG.java:1462)
	at soot.coffi.CFG.jimplify(CFG.java:1125)
	at soot.coffi.CoffiMethodSource.getBody(CoffiMethodSource.java:98)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "new/nolang/Compiling java.lang.Object with ajc yields non-verifying bytecode" failed


Running test new/method-local class defined in around return statement
Commandline: abc -d new new/MethodLocalAroundReturns.java 
Abc started on Fri Jul 30 10:07:58 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming A$1... 
Transforming C... 
Transforming MethodLocalAroundReturns... 
Transforming Abc$access$A$around$2292... 
Abc finished on Fri Jul 30 10:07:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 333 millisec.)
------------------------------------------------
[ 16.216% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.733% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.402% ] Retrieving bodies:  8
[ 20.420% ] Update pattern matcher:  68
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.201% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.901% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.616% ] Soot Packs:  52
[ 10.511% ] Soot Writing Output:  35
================================================
PASS: new: Test "method-local class defined in around return statement" passed.


Running test new/CE expected for assignment to arg in if pcd
Commandline: abc -d new new/IfPCDAssignmentCE.java 
Abc started on Fri Jul 30 10:07:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming IfPCDAssignmentCE... 
Transforming C... 
Abc finished on Fri Jul 30 10:07:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 210 millisec.)
------------------------------------------------
[ 25.714% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.476% ] Create polyglot compiler:  1
[ 14.286% ] Polyglot phases:  30
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.810% ] Retrieving bodies:  8
[ 05.714% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.905% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.476% ] Weaving advice:  1
[ 00.476% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.952% ] Soot Packs:  44
[ 26.190% ] Soot Writing Output:  55
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/CE expected for assignment to arg in if pcd" failed


Running test new/advising field get/sets when accessing via super
Commandline: abc -d new new/SuperField.java 
Abc started on Fri Jul 30 10:07:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming Base... 
Transforming A... 
Transforming SuperField... 
Abc finished on Fri Jul 30 10:07:59 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 393 millisec.)
------------------------------------------------
[ 13.740% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.254% ] Create polyglot compiler:  1
[ 29.517% ] Polyglot phases:  116
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.254% ] Intertype Adjuster:  1
[ 03.817% ] Retrieving bodies:  15
[ 06.107% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.545% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.254% ] Add aspect code:  1
[ 00.509% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 30.534% ] Soot Packs:  120
[ 12.468% ] Soot Writing Output:  49
================================================
PASS: new: Test "advising field get/sets when accessing via super" passed.


Running test new/accessing private members in outer types
Commandline: abc -d new new/FieldInnerAccess.java 
Abc started on Fri Jul 30 10:07:59 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming FieldInnerAccess... 
Transforming Derived$1... 
Transforming Base... 
Transforming Base$1... 
Abc finished on Fri Jul 30 10:08:00 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 370 millisec.)
------------------------------------------------
[ 14.865% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.459% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.784% ] Retrieving bodies:  14
[ 06.216% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.622% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.270% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 32.432% ] Soot Packs:  120
[ 11.351% ] Soot Writing Output:  42
================================================
PASS: new: Test "accessing private members in outer types" passed.


Running test pureJava/various tests of switch bounds
Commandline: abc -d pureJava pureJava/SwitchBounds.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SwitchBounds... 
Abc finished on Fri Jul 30 10:08:00 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 346 millisec.)
------------------------------------------------
[ 15.318% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.289% ] Create polyglot compiler:  1
[ 36.994% ] Polyglot phases:  128
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.179% ] Retrieving bodies:  11
[ 06.647% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.156% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.289% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 30.347% ] Soot Packs:  105
[ 05.780% ] Soot Writing Output:  20
================================================
PASS: pureJava: Test "various tests of switch bounds" passed.


Running test new/declare interface extends class
Commandline: abc -d new new/DeclareInterfaceExtendsClass.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:00 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 124 millisec.)
------------------------------------------------
[ 44.355% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 09.677% ] Polyglot phases:  12
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.613% ] Retrieving bodies:  2
[ 10.484% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.806% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.806% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.355% ] Soot Packs:  24
[ 12.903% ] Soot Writing Output:  16
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/declare interface extends class" failed


Running test new/declare interface implements class
Commandline: abc -d new new/DeclareInterfaceImplementsClass.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "declare interface implements class" passed.


Running test pureJava/assert flow
Commandline: abc -d pureJava -source 1.4 pureJava/AssertsCF.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at pureJava/AssertsCF.java:8,15-16: Local variable "b" may not have been initialized
FAIL: Test "pureJava/assert flow" failed


Running test pureJava/assert flow - 2
Commandline: abc -d pureJava -source 1.4 pureJava/AssertsCF2.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "assert flow - 2" passed.


Running test pureJava/assert typing
Commandline: abc -d pureJava -source 1.4 pureJava/AssertsCF1.java 
Abc started on Fri Jul 30 10:08:00 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: pureJava: Test "assert typing" passed.


Running test pureJava/asserts
Commandline: abc -d pureJava -source 1.4 pureJava/Asserts.java 
Abc started on Fri Jul 30 10:08:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Asserts... 
Transforming TestAsserts... 
Transforming TestAsserts$C... 
Abc finished on Fri Jul 30 10:08:01 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 329 millisec.)
------------------------------------------------
[ 23.100% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.739% ] Polyglot phases:  111
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.599% ] Retrieving bodies:  25
[ 07.903% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.432% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.304% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.894% ] Soot Packs:  49
[ 10.030% ] Soot Writing Output:  33
================================================
PASS: pureJava: Test "asserts" passed.


Running test pureJava/assert coverage tests [requires 1.4]
Commandline: abc -d pureJava -source 1.4 pureJava/AssertsCv.java 
Abc started on Fri Jul 30 10:08:01 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AssertTest... 
Transforming AssertTest$MyInnerError... 
Transforming AssertTest$1... 
Transforming AssertTest$InnerInstanceTester... 
Transforming AssertsCv... 
Transforming AssertTest$InnerStaticInitFailure... 
Transforming AssertTest$InnerFieldInitFailure... 
Transforming MyError... 
Transforming AssertTest$2... 
Transforming AssertTest$InnerInitFailure... 
Transforming AssertTest$InnerTester... 
Transforming StringWrapper... 
Abc finished on Fri Jul 30 10:08:03 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1664 millisec.)
------------------------------------------------
[ 05.950% ] Init. of Soot:  99
[ 00.000% ] Loading Jars:  0
[ 00.060% ] Create polyglot compiler:  1
[ 29.207% ] Polyglot phases:  486
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 12.139% ] Retrieving bodies:  202
[ 01.562% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 08.534% ] Compute advice lists:  142
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.120% ] Weaving advice:  2
[ 00.120% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 28.425% ] Soot Packs:  473
[ 13.882% ] Soot Writing Output:  231
================================================
PASS: pureJava: Test "assert coverage tests [requires 1.4]" passed.


Running test pureJava/assert coverage tests in one package [requires 1.4]
Commandline: abc -d pureJava -source 1.4 pureJava/AssertInOnePackage.java 
Abc started on Fri Jul 30 10:08:03 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CycleSubOff... 
Transforming InnerStaticInitializerOffHelperI... 
Transforming InnerStaticInitializerOffHelperI$Inner... 
Transforming CycleSuperOff... 
Transforming CycleSuperOn... 
Transforming AssertInOnePackage... 
Transforming AssertInOnePackage$1... 
Transforming ConstructorOnHelper... 
Transforming AssertInOnePackage$2... 
Transforming AssertInOnePackage$3... 
Transforming AssertInOnePackage$4... 
Transforming AssertInOnePackage$Runnable... 
Transforming InnerStaticInitializerOnHelper... 
Transforming StaticInitializerOffHelper... 
Transforming AssertInOnePackage$5... 
Transforming AssertInOnePackage$6... 
Transforming AssertInOnePackage$7... 
Transforming ConstructorOffHelper... 
Transforming AssertInOnePackage$8... 
Transforming InnerStaticInitializerOffHelper... 
Transforming InnerStaticInitializerOffHelper$Inner... 
Transforming InnerStaticInitializerOnHelperI... 
Transforming AssertInOnePackage$9... 
Transforming InnerStaticInitializerOnHelperI$Inner... 
Transforming CycleSubOn... 
Transforming StaticInitializerOnHelper... 
Transforming InnerStaticInitializerOnHelper$Inner... 
Transforming AssertInOnePackage$10... 
Abc finished on Fri Jul 30 10:08:04 BST 2004. ( 0 min. 1 sec. )
================================================
Breakdown of abc phases  (total: 1039 millisec.)
------------------------------------------------
[ 05.197% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.066% ] Polyglot phases:  302
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.641% ] Retrieving bodies:  69
[ 02.406% ] Update pattern matcher:  25
[ 00.096% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 03.080% ] Compute advice lists:  32
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.871% ] Weaving advice:  61
[ 00.192% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 26.275% ] Soot Packs:  273
[ 21.174% ] Soot Writing Output:  220
================================================
Failed to define or resolve class InnerStaticInitializerOnHelperI from pureJava
java.lang.ClassFormatError: InnerStaticInitializerOnHelperI (Illegal field modifiers: 0x18)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:537)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:448)
	at abc.testing.TestCase$FileClassLoader.findClass(TestCase.java:759)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)
	at InnerStaticInitializerOnHelperI$Inner.<clinit>(AssertInOnePackage.java)
	at AssertInOnePackage$7.run(AssertInOnePackage.java:79)
	at AssertInOnePackage.check(AssertInOnePackage.java:106)
	at AssertInOnePackage.runTests(AssertInOnePackage.java:76)
	at AssertInOnePackage.main(AssertInOnePackage.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
InvocationTargetException while trying to run compiled class: java.lang.NoClassDefFoundError: InnerStaticInitializerOnHelperI
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NoClassDefFoundError: InnerStaticInitializerOnHelperI
	at InnerStaticInitializerOnHelperI$Inner.<clinit>(AssertInOnePackage.java)
	at AssertInOnePackage$7.run(AssertInOnePackage.java:79)
	at AssertInOnePackage.check(AssertInOnePackage.java:106)
	at AssertInOnePackage.runTests(AssertInOnePackage.java:76)
	at AssertInOnePackage.main(AssertInOnePackage.java:9)
	... 7 more
FAIL: Test "pureJava/assert coverage tests in one package [requires 1.4]" failed


Running test new/assert tests in introduction [requires 1.4]
Commandline: abc -d new -source 1.4 new/AssertInIntro.java 
Abc started on Fri Jul 30 10:08:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming AssertInIntro... 
Abc finished on Fri Jul 30 10:08:04 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 346 millisec.)
------------------------------------------------
[ 15.607% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 41.908% ] Polyglot phases:  145
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.780% ] Retrieving bodies:  20
[ 07.514% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.023% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.289% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.289% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.185% ] Soot Packs:  56
[ 10.405% ] Soot Writing Output:  36
================================================
PASS: new: Test "assert tests in introduction [requires 1.4]" passed.


Running test base/test131/various forms of package name pattern matching work
Commandline: abc -d base/test131 base/test131/Driver.java base/test131/p1/C1.java base/test131/p1/p2/C2.java 
Abc started on Fri Jul 30 10:08:04 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.C1... 
Transforming Top... 
Transforming Driver... 
Transforming p1.p2.C2... 
Transforming TopAdvice... 
Transforming Abc$access$TopAdvice$around$2303... 
Transforming Abc$access$TopAdvice$around$2305... 
Transforming Abc$access$TopAdvice$around$2304... 
Abc finished on Fri Jul 30 10:08:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 484 millisec.)
------------------------------------------------
[ 20.041% ] Init. of Soot:  97
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.512% ] Polyglot phases:  138
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.273% ] Retrieving bodies:  11
[ 04.959% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.240% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.207% ] Add aspect code:  1
[ 01.860% ] Weaving advice:  9
[ 00.207% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.736% ] Soot Packs:  81
[ 23.967% ] Soot Writing Output:  116
================================================
PASS: base/test131: Test "various forms of package name pattern matching work" passed.


Running test new/import of a class in the default package
Commandline: abc -d new new/ImportFromUnnamed.java new/DeclaredExcs.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 1
Actual errors found: 
Syntax Error at new/ImportFromUnnamed.java:3,19-20: Syntax error.
Semantic Error at new/ImportFromUnnamed.java:12,8-14: Could not find type, field, or local variable "Tester".
FAIL: Test "new/import of a class in the default package" failed


Running test pureJava/Referencing static interfaces with import statements
Commandline: abc -d pureJava pureJava/ClassWithStaticInnerInterfaces.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ClassWithStaticInnerInterfaces... 
Transforming ClassWithStaticInnerInterfaces$Inner1... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2$Inner3... 
Abc finished on Fri Jul 30 10:08:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 169 millisec.)
------------------------------------------------
[ 31.953% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.592% ] Create polyglot compiler:  1
[ 11.243% ] Polyglot phases:  19
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.592% ] Retrieving bodies:  1
[ 07.101% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.592% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.592% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.325% ] Soot Packs:  9
[ 42.012% ] Soot Writing Output:  71
================================================
Commandline: abc -d pureJava pureJava/ImportingStaticInnerInterfaces_PR386.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingStaticInnerInterfaces_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
Semantic Error at pureJava/ImportingStaticInnerInterfaces_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
Semantic Error at pureJava/ImportingStaticInnerInterfaces_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
FAIL: Test "pureJava/Referencing static interfaces with import statements" failed


Running test pureJava/Referencing static interfaces with import statements stars
Commandline: abc -d pureJava pureJava/ClassWithStaticInnerInterfaces.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ClassWithStaticInnerInterfaces... 
Transforming ClassWithStaticInnerInterfaces$Inner1... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2$Inner3... 
Abc finished on Fri Jul 30 10:08:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 105 millisec.)
------------------------------------------------
[ 51.429% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 09.524% ] Polyglot phases:  10
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.952% ] Retrieving bodies:  1
[ 11.429% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.952% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.952% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.571% ] Soot Packs:  9
[ 16.190% ] Soot Writing Output:  17
================================================
Commandline: abc -d pureJava pureJava/ImportingStaticInnerInterfacesStars_PR386.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
FAIL: Test "pureJava/Referencing static interfaces with import statements stars" failed


Running test pureJava/Referencing static interfaces with import statements stars 2
Commandline: abc -d pureJava pureJava/ClassWithStaticInnerInterfaces.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ClassWithStaticInnerInterfaces... 
Transforming ClassWithStaticInnerInterfaces$Inner1... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2$Inner3... 
Abc finished on Fri Jul 30 10:08:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 118 millisec.)
------------------------------------------------
[ 56.780% ] Init. of Soot:  67
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 08.475% ] Polyglot phases:  10
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.847% ] Retrieving bodies:  1
[ 10.169% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.847% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.475% ] Soot Packs:  10
[ 14.407% ] Soot Writing Output:  17
================================================
Commandline: abc -d pureJava pureJava/ImportingStaticInnerInterfacesStars2_PR386.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars2_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars2_PR386.java: Class "ClassWithStaticInnerInterfaces.Inner1" not found.
FAIL: Test "pureJava/Referencing static interfaces with import statements stars 2" failed


Running test pureJava/Referencing static interfaces with import statements stars 3
Commandline: abc -d pureJava pureJava/ClassWithStaticInnerInterfaces.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ClassWithStaticInnerInterfaces... 
Transforming ClassWithStaticInnerInterfaces$Inner1... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2... 
Transforming ClassWithStaticInnerInterfaces$Inner1$Inner2$Inner3... 
Abc finished on Fri Jul 30 10:08:05 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 105 millisec.)
------------------------------------------------
[ 51.429% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.952% ] Create polyglot compiler:  1
[ 08.571% ] Polyglot phases:  9
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.952% ] Retrieving bodies:  1
[ 11.429% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.952% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.952% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.524% ] Soot Packs:  10
[ 15.238% ] Soot Writing Output:  16
================================================
Commandline: abc -d pureJava pureJava/ImportingStaticInnerInterfacesStars3_PR386.java 
Abc started on Fri Jul 30 10:08:05 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingStaticInnerInterfacesStars3_PR386.java:14,20-26: Could not find type "Inner1".
FAIL: Test "pureJava/Referencing static interfaces with import statements stars 3" failed


Running test pureJava/Referencing interfaces with import statements
Commandline: abc -d pureJava pureJava/ClassWithInnerInterfaces.java pureJava/ImportingInnerInterfaces_PR386.java 
Abc started on Fri Jul 30 10:08:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingInnerInterfaces_PR386.java:2,0-39: Package "ClassWithInnerInterfaces" not found.
Semantic Error at pureJava/ImportingInnerInterfaces_PR386.java:3,0-46: Package "ClassWithInnerInterfaces" not found.
Semantic Error at pureJava/ImportingInnerInterfaces_PR386.java:4,0-53: Package "ClassWithInnerInterfaces" not found.
FAIL: Test "pureJava/Referencing interfaces with import statements" failed


Running test pureJava/Referencing interfaces with import statements stars
Commandline: abc -d pureJava pureJava/ClassWithInnerInterfaces.java pureJava/ImportingInnerInterfacesStars_PR386.java 
Abc started on Fri Jul 30 10:08:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingInnerInterfacesStars_PR386.java:23,20-26: Could not find type "Inner3".
FAIL: Test "pureJava/Referencing interfaces with import statements stars" failed


Running test pureJava/Referencing interfaces with import statements stars 2
Commandline: abc -d pureJava pureJava/ClassWithInnerInterfaces.java pureJava/ImportingInnerInterfacesStars2_PR386.java 
Abc started on Fri Jul 30 10:08:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingInnerInterfacesStars2_PR386.java:19,20-26: Could not find type "Inner2".
FAIL: Test "pureJava/Referencing interfaces with import statements stars 2" failed


Running test pureJava/Referencing interfaces with import statements stars 3
Commandline: abc -d pureJava pureJava/ClassWithInnerInterfaces.java pureJava/ImportingInnerInterfacesStars3_PR386.java 
Abc started on Fri Jul 30 10:08:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at pureJava/ImportingInnerInterfacesStars3_PR386.java:14,20-26: Could not find type "Inner1".
FAIL: Test "pureJava/Referencing interfaces with import statements stars 3" failed


Running test new/assert statement in advice coverage [requires 1.4]
Commandline: abc -d new -source 1.4 new/AssertInAdvice.java 
Abc started on Fri Jul 30 10:08:06 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Test... 
Transforming AssertInAdvice... 
Transforming Abc$access$Test$around$2316... 
Transforming Abc$access$Test$around$2317... 
Transforming Abc$access$Test$around$2318... 
Transforming Abc$access$Test$around$2322... 
Transforming Abc$access$Test$around$2323... 
Transforming Abc$access$Test$around$2324... 
Abc finished on Fri Jul 30 10:08:07 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 838 millisec.)
------------------------------------------------
[ 06.444% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.747% ] Polyglot phases:  199
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.563% ] Retrieving bodies:  55
[ 03.341% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 13.365% ] Compute advice lists:  112
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.790% ] Weaving advice:  15
[ 00.119% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 25.298% ] Soot Packs:  212
[ 19.332% ] Soot Writing Output:  162
================================================
PASS: new: Test "assert statement in advice coverage [requires 1.4]" passed.


Running test new/assert statement in advice  [requires 1.4]
Commandline: abc -d new -source 1.4 new/AssertInAdviceBug.java 
Abc started on Fri Jul 30 10:08:07 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AssertInAdviceBug... 
Transforming Test... 
Transforming Abc$access$Test$around$2332... 
Abc finished on Fri Jul 30 10:08:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 450 millisec.)
------------------------------------------------
[ 12.222% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.222% ] Create polyglot compiler:  1
[ 32.222% ] Polyglot phases:  145
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.889% ] Retrieving bodies:  31
[ 18.000% ] Update pattern matcher:  81
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.222% ] Compute advice lists:  10
[ 00.000% ] Intertype weave:  0
[ 00.222% ] Add aspect code:  1
[ 00.444% ] Weaving advice:  2
[ 00.222% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.889% ] Soot Packs:  76
[ 10.444% ] Soot Writing Output:  47
================================================
PASS: new: Test "assert statement in advice  [requires 1.4]" passed.


Running test new/declaring a private method on an inner interface
Commandline: abc -d new new/PrivateMethodOnInnerInterface.java 
Abc started on Fri Jul 30 10:08:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at new/PrivateMethodOnInnerInterface.java:25,21-42: privateMethod() in A.I cannot override privateMethod() in A.I; attempting to assign weaker access privileges
Semantic Error at new/PrivateMethodOnInnerInterface.java:27,12-33: privateMethod() in C cannot override privateMethod() in A.I; attempting to assign weaker access privileges
FAIL: Test "new/declaring a private method on an inner interface" failed


Running test new/CE expected when declaring fields on arrays
Commandline: abc -d new new/ArrayFieldDeclarationCE.java 
Abc started on Fri Jul 30 10:08:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "CE expected when declaring fields on arrays" passed.


Running test pureJava/non-constant static final fields marked as final in .class
Commandline: abc -d pureJava pureJava/FinalStaticField.java 
Abc started on Fri Jul 30 10:08:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming FinalStaticField... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:08 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 397 millisec.)
------------------------------------------------
[ 13.854% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 56.927% ] Polyglot phases:  226
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.275% ] Retrieving bodies:  13
[ 06.801% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.023% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.252% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.060% ] Soot Packs:  32
[ 07.809% ] Soot Writing Output:  31
================================================
PASS: pureJava: Test "non-constant static final fields marked as final in .class" passed.


Running test new/signature of handler join point
Commandline: abc -d new new/HandlerSignature.java 
Abc started on Fri Jul 30 10:08:08 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming C... 
Transforming HandlerSignature... 
Transforming U... 
Abc finished on Fri Jul 30 10:08:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 404 millisec.)
------------------------------------------------
[ 13.614% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 49.752% ] Polyglot phases:  201
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.248% ] Intertype Adjuster:  1
[ 03.713% ] Retrieving bodies:  15
[ 06.683% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.990% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.248% ] Add aspect code:  1
[ 05.693% ] Weaving advice:  23
[ 00.248% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.644% ] Soot Packs:  43
[ 08.168% ] Soot Writing Output:  33
================================================
before handler
caught
PASS: new: Test "signature of handler join point" passed.


Running test new/source locations within expressions
Commandline: abc -d new new/SourceLocationWithinExpr.java 
Abc started on Fri Jul 30 10:08:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming F... 
Transforming A... 
Transforming C... 
Transforming SourceLocationWithinExpr... 
Transforming E... 
Abc finished on Fri Jul 30 10:08:09 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 544 millisec.)
------------------------------------------------
[ 09.926% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.184% ] Create polyglot compiler:  1
[ 40.441% ] Polyglot phases:  220
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.574% ] Retrieving bodies:  14
[ 04.779% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.390% ] Compute advice lists:  13
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 04.779% ] Weaving advice:  26
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.890% ] Soot Packs:  81
[ 20.037% ] Soot Writing Output:  109
================================================
C() - 9
getD() - 12
getE() - 14
getF() - 16
PASS: new: Test "source locations within expressions" passed.


Running test new/source locations within expressions (hard case of constructor start)
Commandline: abc -d new new/SourceLocationWithinExprHard.java 
Abc started on Fri Jul 30 10:08:09 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming E... 
Transforming SourceLocationWithinExprHard... 
Transforming A... 
Transforming F... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 501 millisec.)
------------------------------------------------
[ 10.778% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 39.920% ] Polyglot phases:  200
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.794% ] Retrieving bodies:  14
[ 20.958% ] Update pattern matcher:  105
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.395% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.200% ] Weaving advice:  1
[ 00.200% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.373% ] Soot Packs:  67
[ 09.381% ] Soot Writing Output:  47
================================================
Test failed, compiled class behaved incorrectly
Message: fail [ expected event "setup" not found]
org.aspectj.bridge.AbortException: [ expected event "setup" not found]
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.check(Tester.java:204)
	at org.aspectj.testing.Tester.checkEqualIgnoreDups(Tester.java:702)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:742)
	at org.aspectj.testing.Tester.checkEvents(Tester.java:922)
	at org.aspectj.testing.Tester.checkAndClearEvents(Tester.java:933)
	at org.aspectj.testing.Tester.checkAllEvents(Tester.java:846)
	at SourceLocationWithinExprHard.main(SourceLocationWithinExprHard.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/source locations within expressions (hard case of constructor start)" failed


Running test new/crashes given method in declared method
Commandline: abc -d new new/DeclareMethodCE.java 
Abc started on Fri Jul 30 10:08:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "crashes given method in declared method" passed.


Running test new/after returning advice on interface constructor
Commandline: abc -d new new/AfterReturningInterfaceConstructor.java 
Abc started on Fri Jul 30 10:08:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming C... 
Transforming A... 
Transforming AfterReturningInterfaceConstructor... 
Abc finished on Fri Jul 30 10:08:10 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 313 millisec.)
------------------------------------------------
[ 35.463% ] Init. of Soot:  111
[ 00.000% ] Loading Jars:  0
[ 00.319% ] Create polyglot compiler:  1
[ 30.671% ] Polyglot phases:  96
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.319% ] Intertype Adjuster:  1
[ 01.597% ] Retrieving bodies:  5
[ 07.668% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.278% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.319% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.319% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.099% ] Soot Packs:  41
[ 08.946% ] Soot Writing Output:  28
================================================
Test failed, compiled class behaved incorrectly
Message: fail i.i: 0 < 2
org.aspectj.bridge.AbortException: i.i: 0 < 2
	at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47)
	at org.aspectj.testing.Tester.handle(Tester.java:963)
	at org.aspectj.testing.Tester.checkFailed(Tester.java:177)
	at org.aspectj.testing.Tester.checkEqual(Tester.java:462)
	at AfterReturningInterfaceConstructor.main(AfterReturningInterfaceConstructor.java:11)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/after returning advice on interface constructor" failed


Running test new/after returning advice on interface constructor - error
Commandline: abc -d new new/AfterReturningInterfaceConstructorCE.java 
Abc started on Fri Jul 30 10:08:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "after returning advice on interface constructor - error" passed.


Running test bugs/after advice on static call join point
Commandline: abc -d bugs bugs/AfterStaticCall.java 
Abc started on Fri Jul 30 10:08:10 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AfterStaticCall... 
Transforming LogFooCall... 
Abc finished on Fri Jul 30 10:08:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 230 millisec.)
------------------------------------------------
[ 23.913% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 40.000% ] Polyglot phases:  92
[ 00.435% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.304% ] Retrieving bodies:  3
[ 10.870% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.870% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.435% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.435% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.913% ] Soot Packs:  32
[ 07.826% ] Soot Writing Output:  18
================================================
PASS: bugs: Test "after advice on static call join point" passed.


Running test bugs/incompatible class change error
Commandline: abc -d bugs bugs/IncompatibleClassChangeErrorBug.java 
Abc started on Fri Jul 30 10:08:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming JoinpointTestAspect... 
Transforming IncompatibleClassChangeErrorBug... 
Abc finished on Fri Jul 30 10:08:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 380 millisec.)
------------------------------------------------
[ 23.947% ] Init. of Soot:  91
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 44.211% ] Polyglot phases:  168
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.579% ] Retrieving bodies:  6
[ 06.316% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.053% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.316% ] Weaving advice:  24
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.526% ] Soot Packs:  40
[ 06.053% ] Soot Writing Output:  23
================================================
PASS: bugs: Test "incompatible class change error" passed.


Running test bugs/simple cflow of method execution
Commandline: abc -d bugs bugs/ExecutionCflow.java 
Abc started on Fri Jul 30 10:08:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ExecutionCflow... 
Abc finished on Fri Jul 30 10:08:11 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 332 millisec.)
------------------------------------------------
[ 27.711% ] Init. of Soot:  92
[ 00.000% ] Loading Jars:  0
[ 00.301% ] Create polyglot compiler:  1
[ 42.771% ] Polyglot phases:  142
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.205% ] Retrieving bodies:  4
[ 07.229% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.602% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.301% ] Add aspect code:  1
[ 03.614% ] Weaving advice:  12
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.542% ] Soot Packs:  35
[ 05.723% ] Soot Writing Output:  19
================================================
PASS: bugs: Test "simple cflow of method execution" passed.


Running test bugs/using instance as class reference to constant field
Commandline: abc -d bugs bugs/InstanceAsClassRefToConstant.java 
Abc started on Fri Jul 30 10:08:11 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CWithLongConst... 
Transforming A... 
Transforming InstanceAsClassRefToConstant... 
Transforming TestCase... 
Abc finished on Fri Jul 30 10:08:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 298 millisec.)
------------------------------------------------
[ 38.591% ] Init. of Soot:  115
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.893% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.034% ] Retrieving bodies:  15
[ 04.698% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.007% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.336% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.725% ] Soot Packs:  26
[ 07.718% ] Soot Writing Output:  23
================================================
PASS: bugs: Test "using instance as class reference to constant field" passed.


Running test options/deprecated/options -warn:deprecation not enabled
Commandline: abc -d options/deprecated options/deprecated/WarnDeprecated.java options/deprecated/OldStuff.java 
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming OldStuff... 
Transforming WarnDeprecated... 
Abc finished on Fri Jul 30 10:08:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 168 millisec.)
------------------------------------------------
[ 32.143% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.667% ] Polyglot phases:  28
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.190% ] Retrieving bodies:  2
[ 07.143% ] Update pattern matcher:  12
[ 00.595% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.595% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 07.143% ] Soot Packs:  12
[ 34.524% ] Soot Writing Output:  58
================================================
PASS: options/deprecated: Test "options -warn:deprecation not enabled" passed.


Running test options/options declare field on bad type
Commandline: abc -d options options/XLintTypeDeclareField.java 
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: options: Test "options declare field on bad type" passed.


Running test options/options declare method on bad type
Commandline: abc -d options options/XLintTypeDeclareMethod.java 
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: options: Test "options declare method on bad type" passed.


Running test options/options negative -Xlint args()
Commandline: abc -d options -Xlint:ignore options/XLintTypeArgsPCD.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at options/XLintTypeArgsPCD.java:10,21-32: Could not find advice formal or type "UnknownType". 
FAIL: Test "options/options negative -Xlint args()" failed


Running test options/options negative -Xlint declare parent
Commandline: abc -d options -Xlint:ignore options/XLintTypeDeclareParent.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming XLintTypeDeclareParent... 
Transforming C... 
Transforming E... 
Transforming D... 
Transforming F... 
Abc finished on Fri Jul 30 10:08:12 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 174 millisec.)
------------------------------------------------
[ 31.609% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.264% ] Polyglot phases:  37
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.299% ] Retrieving bodies:  4
[ 06.897% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.149% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.575% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.575% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.540% ] Soot Packs:  34
[ 16.092% ] Soot Writing Output:  28
================================================
PASS: options: Test "options negative -Xlint declare parent" passed.


Running test options/options negative -Xlint target()
Commandline: abc -d options -Xlint:ignore options/XLintTypeTargetPCD.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at options/XLintTypeTargetPCD.java:10,23-34: Could not find advice formal or type "UnknownType". 
FAIL: Test "options/options negative -Xlint target()" failed


Running test options/options negative -Xlint this()
Commandline: abc -d options -Xlint:ignore options/XLintTypeThisPCD.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:12 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at options/XLintTypeThisPCD.java:10,21-32: Could not find advice formal or type "UnknownType". 
FAIL: Test "options/options negative -Xlint this()" failed


Running test options/injars/simple/source for options -injars
Commandline: abc -d options/injars/simple options/injars/simple/Simple.java options/injars/simple/Main.java 
Abc started on Fri Jul 30 10:08:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Simple... 
Transforming Main... 
Abc finished on Fri Jul 30 10:08:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 291 millisec.)
------------------------------------------------
[ 26.804% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.344% ] Create polyglot compiler:  1
[ 45.017% ] Polyglot phases:  131
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.375% ] Retrieving bodies:  4
[ 08.247% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.687% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.344% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.344% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.653% ] Soot Packs:  31
[ 06.186% ] Soot Writing Output:  18
================================================
PASS: options/injars/simple: Test "source for options -injars" passed.


Running test options/injars/simple/options -injars
Commandline: abc -d options/injars/simple -injars main.jar options/injars/simple/Simple.java 
Abc started on Fri Jul 30 10:08:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Simple... 
Abc finished on Fri Jul 30 10:08:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 236 millisec.)
------------------------------------------------
[ 23.729% ] Init. of Soot:  56
[ 00.424% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 49.576% ] Polyglot phases:  117
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.847% ] Retrieving bodies:  2
[ 10.593% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.424% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.424% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 09.746% ] Soot Packs:  23
[ 04.237% ] Soot Writing Output:  10
================================================
Failed to find class Main
FAIL: Test "options/injars/simple/options -injars" failed


Running test new/interface self-reference in anonymous instance
Commandline: abc -d new new/AnonymousSelfReference.java 
Abc started on Fri Jul 30 10:08:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming AnonymousSelfReference... 
Transforming A... 
Transforming AnonymousSelfReference$1... 
Transforming A$1... 
Abc finished on Fri Jul 30 10:08:13 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 328 millisec.)
------------------------------------------------
[ 16.463% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.793% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.305% ] Intertype Adjuster:  1
[ 02.134% ] Retrieving bodies:  7
[ 07.012% ] Update pattern matcher:  23
[ 00.305% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.915% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.305% ] Add aspect code:  1
[ 00.305% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.878% ] Soot Packs:  98
[ 11.585% ] Soot Writing Output:  38
================================================
PASS: new: Test "interface self-reference in anonymous instance" passed.


Running test new/self-reference from (aspect-declared) method-local class
Commandline: abc -d new new/MethodSelfReference.java 
Abc started on Fri Jul 30 10:08:13 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/MethodSelfReference.java:16,4-18: <anon subtype of java.lang.Object> should be declared abstract; it does not define start(), which was injected into I by aspect A
FAIL: Test "new/self-reference from (aspect-declared) method-local class" failed


Running test new/expect CE for unterminated declare error
Commandline: abc -d new new/UnterminatedDeclareErrorCE.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 1
Actual errors found: 
Lexical Error at new/UnterminatedDeclareErrorCE.java:5,0-1: Illegal character "}"
Syntax Error at new/UnterminatedDeclareErrorCE.java:7,0-5: Syntax error.
FAIL: Test "new/expect CE for unterminated declare error" failed


Running test new/expect CE for declaration collision between subaspects instead of domination order
Commandline: abc -d new new/DeclarationCollisionCE.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 3
Actual errors found: 
Semantic Error at new/DeclarationCollisionCE.java:13,41-46: Aspect B is matched by more than one pattern on the precedence list
FAIL: Test "new/expect CE for declaration collision between subaspects instead of domination order" failed


Running test new/subtype pattern in dominates should pick out aspect subtypes
Commandline: abc -d new new/DominatesTypePattern.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/DominatesTypePattern.java:15,41-56: Aspect A is matched by more than one pattern on the precedence list
FAIL: Test "new/subtype pattern in dominates should pick out aspect subtypes" failed


Running test new/subtype pattern in dominates will conflict with type pattern
Commandline: abc -d new new/DominatesTypePatternCE.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "subtype pattern in dominates will conflict with type pattern" passed.


Running test new/after returning advice on interface and implementation constructor
Commandline: abc -d new new/AfterReturningConstructor.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 7, should be 0
Actual errors found: 
Syntax Error at new/AfterReturningConstructor.java:7,15-21: Syntax error.
Syntax Error at new/AfterReturningConstructor.java:9,15-21: Syntax error.
Syntax Error at new/AfterReturningConstructor.java:29,24-30: Syntax error.
Lexical Error at new/AfterReturningConstructor.java:29,31-32: Illegal character "="
Syntax Error at new/AfterReturningConstructor.java:30,24-29: Syntax error.
Lexical Error at new/AfterReturningConstructor.java:30,30-31: Illegal character "="
Syntax Error at new/AfterReturningConstructor.java:53,14-20: Syntax error.
FAIL: Test "new/after returning advice on interface and implementation constructor" failed


Running test new/after throwing advice with non-throwable formal
Commandline: abc -d new new/AfterThrowingNonThrowable.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "after throwing advice with non-throwable formal" passed.


Running test new/declare array field using postfix
Commandline: abc -d new new/ArrayFieldDeclaration.java 
Abc started on Fri Jul 30 10:08:14 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "declare array field using postfix" passed.


Running test new/prohibit declaring new aspect constructor with arguments
Commandline: abc -d new new/DeclareAspectConstructorCE.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming B... 
Abc finished on Fri Jul 30 10:08:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 148 millisec.)
------------------------------------------------
[ 36.486% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.676% ] Create polyglot compiler:  1
[ 08.784% ] Polyglot phases:  13
[ 03.378% ] Resolve class names:  5
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.027% ] Retrieving bodies:  3
[ 08.784% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.351% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.676% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 24.324% ] Soot Packs:  36
[ 13.514% ] Soot Writing Output:  20
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/prohibit declaring new aspect constructor with arguments" failed


Running test new/prohibit declaring only aspect constructor with arguments
Commandline: abc -d new new/DeclareOnlyAspectConstructorCE.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming B... 
Abc finished on Fri Jul 30 10:08:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 166 millisec.)
------------------------------------------------
[ 46.988% ] Init. of Soot:  78
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 07.831% ] Polyglot phases:  13
[ 00.602% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.807% ] Retrieving bodies:  3
[ 07.229% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.205% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.602% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.687% ] Soot Packs:  36
[ 12.048% ] Soot Writing Output:  20
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/prohibit declaring only aspect constructor with arguments" failed


Running test new/declare class extends interface
Commandline: abc -d new new/DeclareClassExtendsInterface.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/DeclareClassExtendsInterface.java:7,0-10: No valid constructor found for java.io.Serializable().
FAIL: Test "new/declare class extends interface" failed


Running test new/declare class implements class
Commandline: abc -d new new/DeclareClassImplementsClass.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/DeclareClassImplementsClass.java:10,4-37: Type B is not an interface
FAIL: Test "new/declare class implements class" failed


Running test new/declare interface implements interface
Commandline: abc -d new new/DeclareInterfaceImplementsInterface.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming I2... 
Abc finished on Fri Jul 30 10:08:15 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 121 millisec.)
------------------------------------------------
[ 45.455% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 09.917% ] Polyglot phases:  12
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.826% ] Retrieving bodies:  1
[ 10.744% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.826% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.826% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.182% ] Soot Packs:  22
[ 13.223% ] Soot Writing Output:  16
================================================
PASS: new: Test "declare interface implements interface" passed.


Running test new/if and cflow arg binding
Commandline: abc -d new new/CflowBinding.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: new/CflowBinding.java:12,17-25: Variable t not found in context
polyglot.util.InternalCompilerError: new/CflowBinding.java:12,17-25: Variable t not found in context
	at abc.weaving.aspectinfo.CflowSetup$CflowBoundVars.getWeavingVar(CflowSetup.java:175)
	at abc.weaving.aspectinfo.If.matchesAt(If.java:99)
	at abc.weaving.aspectinfo.AndPointcut.matchesAt(AndPointcut.java:45)
	at abc.weaving.matching.AdviceApplication.doShadows(AdviceApplication.java:87)
	at abc.weaving.matching.AdviceApplication.doMethod(AdviceApplication.java:178)
	at abc.weaving.matching.AdviceApplication.computeAdviceLists(AdviceApplication.java:247)
	at abc.weaving.aspectinfo.GlobalAspectInfo.computeAdviceLists(GlobalAspectInfo.java:398)
	at abc.main.Main.weave(Main.java:640)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
FAIL: Test "new/if and cflow arg binding" failed


Running test bugs/circularity in declare dominates
Commandline: abc -d bugs bugs/CircularDominates.java 
Abc started on Fri Jul 30 10:08:15 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "circularity in declare dominates" passed.


Running test bugs/percflow code hangs compiler
Commandline: abc -d bugs bugs/CloseConnectionsCflow.java 
Abc started on Fri Jul 30 10:08:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Connection... 
Transforming CloseConnectionsCflow... 
Abc finished on Fri Jul 30 10:08:16 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 409 millisec.)
------------------------------------------------
[ 13.692% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.648% ] Polyglot phases:  64
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.222% ] Retrieving bodies:  5
[ 04.401% ] Update pattern matcher:  18
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.733% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 01.956% ] Add aspect code:  8
[ 02.200% ] Weaving advice:  9
[ 00.244% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 49.144% ] Soot Packs:  201
[ 10.758% ] Soot Writing Output:  44
================================================
PASS: bugs: Test "percflow code hangs compiler" passed.


Running test bugs/assert and pertarget crashes compiler
Commandline: abc -d bugs -source 1.4 bugs/EnsureOverriding.java 
Abc started on Fri Jul 30 10:08:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <EnsureOverriding: void afterReturning$2419()>
polyglot.util.InternalCompilerError: Exception while processing <EnsureOverriding: void afterReturning$2419()>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: 
Aborting: can't find classfile java.lang.AssertionError
	at soot.Scene.getSootClass(Scene.java:335)
	at soot.javaToJimple.JimpleBodyBuilder.createAssert(JimpleBodyBuilder.java:1161)
	at soot.javaToJimple.JimpleBodyBuilder.createStmt(JimpleBodyBuilder.java:547)
	at soot.javaToJimple.JimpleBodyBuilder.createBlock(JimpleBodyBuilder.java:302)
	at soot.javaToJimple.JimpleBodyBuilder.createJimpleBody(JimpleBodyBuilder.java:103)
	at soot.javaToJimple.PolyglotMethodSource.getBody(PolyglotMethodSource.java:35)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "bugs/assert and pertarget crashes compiler" failed


Running test bugs/Verification error tracing constructor that takes arguments
Commandline: abc -d bugs bugs/ConstructorArgTracing.java 
Abc started on Fri Jul 30 10:08:16 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming ConstructorArgTracing... 
Transforming TraceAspect... 
Abc finished on Fri Jul 30 10:08:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 269 millisec.)
------------------------------------------------
[ 38.290% ] Init. of Soot:  103
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 11.152% ] Polyglot phases:  30
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.487% ] Retrieving bodies:  4
[ 05.204% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.115% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 10.409% ] Weaving advice:  28
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.074% ] Soot Packs:  54
[ 12.268% ] Soot Writing Output:  33
================================================
staticinitialization(ConstructorArgTracing.<clinit>)
execution(void ConstructorArgTracing.main(String[]))
call(ConstructorArgTracing(int))
preinitialization(ConstructorArgTracing(int))
initialization(ConstructorArgTracing(int))
execution(ConstructorArgTracing(int))
PASS: bugs: Test "Verification error tracing constructor that takes arguments" passed.


Running test bugs/declared exceptions in inter-type decls
Commandline: abc -d bugs bugs/ExceptionsOnInters.java 
Abc started on Fri Jul 30 10:08:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming BombException... 
Transforming ExceptionsOnInters... 
Transforming Bomb... 
Abc finished on Fri Jul 30 10:08:17 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 198 millisec.)
------------------------------------------------
[ 27.273% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.162% ] Polyglot phases:  32
[ 00.505% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.556% ] Retrieving bodies:  11
[ 23.737% ] Update pattern matcher:  47
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.010% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.505% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.505% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.141% ] Soot Packs:  28
[ 10.606% ] Soot Writing Output:  21
================================================
BombException: KABOOM
PASS: bugs: Test "declared exceptions in inter-type decls" passed.


Running test bugs/inter-type fields with array types
Commandline: abc -d bugs bugs/InterFieldArrays.java 
Abc started on Fri Jul 30 10:08:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Expr: { ... }
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <Bar: int[] init$bar$2436(Foo)>
polyglot.util.InternalCompilerError: Exception while processing <Bar: int[] init$bar$2436(Foo)>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: Unhandled Expression: 
	at soot.javaToJimple.JimpleBodyBuilder.createExpr(JimpleBodyBuilder.java:1628)
	at soot.javaToJimple.JimpleBodyBuilder.getCastLocal(JimpleBodyBuilder.java:3098)
	at soot.javaToJimple.JimpleBodyBuilder.createExpr(JimpleBodyBuilder.java:1597)
	at soot.javaToJimple.JimpleBodyBuilder.createReturn(JimpleBodyBuilder.java:1258)
	at soot.javaToJimple.JimpleBodyBuilder.createStmt(JimpleBodyBuilder.java:523)
	at soot.javaToJimple.JimpleBodyBuilder.createBlock(JimpleBodyBuilder.java:302)
	at soot.javaToJimple.JimpleBodyBuilder.createJimpleBody(JimpleBodyBuilder.java:103)
	at soot.javaToJimple.PolyglotMethodSource.getBody(PolyglotMethodSource.java:35)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "bugs/inter-type fields with array types" failed


Running test new/checking around join point for advice return type - numeric
Commandline: abc -d new new/AroundNumericCastCE.java 
Abc started on Fri Jul 30 10:08:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at AroundNumericCastCE.java:12,8-21: Illegal narrowing cast***  Shadow type: int Advice Type: double ShadowMatch: abc.weaving.matching.ExecutionShadowMatch@67e04c Type: abc.weaving.matching.ExecutionShadowMatch
FAIL: Test "new/checking around join point for advice return type - numeric" failed


Running test new/void around advice without proceed
Commandline: abc -d new new/VoidAround.java 
Abc started on Fri Jul 30 10:08:17 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at VoidAround.java:11,15-16: Can't apply around advice with void return type to a non void shadow.***  Shadow type: java.lang.Object Advice Type: void ShadowMatch: abc.weaving.matching.MethodCallShadowMatch@f9b4ac Type: abc.weaving.matching.MethodCallShadowMatch
FAIL: Test "new/void around advice without proceed" failed


Running test new/PR852/declaring method on superclass and subclass
Commandline: abc -d new/PR852 new/PR852/aspectPack/Aspect.java new/PR852/target/SubClass.java new/PR852/target/SuperClass.java 
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming target.SubClass... 
Transforming target.SuperClass... 
Transforming aspectPack.Aspect... 
Abc finished on Fri Jul 30 10:08:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 188 millisec.)
------------------------------------------------
[ 29.255% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.468% ] Polyglot phases:  46
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.660% ] Retrieving bodies:  5
[ 07.447% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.064% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.532% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.532% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.745% ] Soot Packs:  39
[ 13.298% ] Soot Writing Output:  25
================================================
SuperClass ok
SubClass ok
PASS: new/PR852: Test "declaring method on superclass and subclass" passed.


Running test new/PR852/declaring method on superclass and subclass
Commandline: abc -d new/PR852 new/PR852/aspect/Aspect.java new/PR852/target/SubClass.java new/PR852/target/SuperClass.java 
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 0
Actual errors found: 
Syntax Error at new/PR852/aspect/Aspect.java:1,8-14: Syntax error.
Semantic Error at new/PR852/aspect/Aspect.java:8,9-19: Could not find type "SuperClass".
Semantic Error at new/PR852/aspect/Aspect.java:9,9-17: Could not find type "SubClass".
FAIL: Test "new/PR852/declaring method on superclass and subclass" failed


Running test bugs/privileged access to code outside the control of the compiler
Commandline: abc -d bugs -Xlint:warning bugs/PrivilegeBeyondScope.java 
*** Option -Xlint:warning ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Encountered error of unexpected type - should be error, but was warning.
Semantic Error at bugs/PrivilegeBeyondScope.java:23,8-31: No valid method call found for setChanged() in java.util.Observable.
FAIL: Test "bugs/privileged access to code outside the control of the compiler" failed


Running test new/PR862/import any inner from interface implementor
Commandline: abc -d new/PR862 new/PR862/pack/ImportInnerFromInterfaceImplementor.java 
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at new/PR862/pack/ImportInnerFromInterfaceImplementor.java:5,0-16: Package "pack.C" not found.
FAIL: Test "new/PR862/import any inner from interface implementor" failed


Running test new/finalfield/introducing final fields (simple)
Commandline: abc -d new/finalfield new/finalfield/Introducer.java new/finalfield/Receiver.java new/finalfield/User1.java 
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Receiver... 
Transforming Introducer... 
Transforming User1... 
Abc finished on Fri Jul 30 10:08:18 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 275 millisec.)
------------------------------------------------
[ 27.636% ] Init. of Soot:  76
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 38.182% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.364% ] Declare Parents:  1
[ 00.000% ] Intertype Adjuster:  0
[ 01.455% ] Retrieving bodies:  4
[ 08.727% ] Update pattern matcher:  24
[ 00.364% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 00.727% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.364% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.364% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.455% ] Soot Packs:  37
[ 08.364% ] Soot Writing Output:  23
================================================
PASS: new/finalfield: Test "introducing final fields (simple)" passed.


Running test new/finalfield/introducing final fields and using as constants
Commandline: abc -d new/finalfield new/finalfield/Introducer.java new/finalfield/Receiver.java new/finalfield/User2.java 
Abc started on Fri Jul 30 10:08:18 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Receiver... 
Transforming Introducer... 
Transforming User2... 
Abc finished on Fri Jul 30 10:08:19 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 270 millisec.)
------------------------------------------------
[ 20.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.370% ] Create polyglot compiler:  1
[ 45.185% ] Polyglot phases:  122
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.852% ] Retrieving bodies:  5
[ 08.889% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.111% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.370% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.074% ] Soot Packs:  38
[ 08.148% ] Soot Writing Output:  22
================================================
PASS: new/finalfield: Test "introducing final fields and using as constants" passed.


Running test new/finalfield/introducing final fields and checking errors
Commandline: abc -d new/finalfield new/finalfield/Introducer.java new/finalfield/Receiver.java new/finalfield/UserCf.java 
Abc started on Fri Jul 30 10:08:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new/finalfield: Test "introducing final fields and checking errors" passed.


Running test bugs/Static inner aspects cannot reference user defined pointcuts 1
Commandline: abc -d bugs bugs/PcdLookup.java 
Abc started on Fri Jul 30 10:08:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PcdLookup... 
Transforming PcdLookup$Referencer... 
Abc finished on Fri Jul 30 10:08:19 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 172 millisec.)
------------------------------------------------
[ 32.558% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.884% ] Polyglot phases:  60
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.581% ] Intertype Adjuster:  1
[ 01.163% ] Retrieving bodies:  2
[ 06.977% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.163% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.581% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.953% ] Soot Packs:  24
[ 08.140% ] Soot Writing Output:  14
================================================
PASS: bugs: Test "Static inner aspects cannot reference user defined pointcuts 1" passed.


Running test bugs/Static inner aspects cannot reference user defined pointcuts 2
Commandline: abc -d bugs bugs/SoftWithin.java 
Abc started on Fri Jul 30 10:08:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming SoftWithin... 
Transforming Soften... 
Abc finished on Fri Jul 30 10:08:19 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 381 millisec.)
------------------------------------------------
[ 14.173% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 46.719% ] Polyglot phases:  178
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.887% ] Retrieving bodies:  11
[ 19.423% ] Update pattern matcher:  74
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.525% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.525% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.236% ] Soot Packs:  39
[ 05.512% ] Soot Writing Output:  21
================================================
PASS: bugs: Test "Static inner aspects cannot reference user defined pointcuts 2" passed.


Running test bugs/Declare precedence should not allow multiple * patterns
Commandline: abc -d bugs bugs/CircularPrecedence.java 
Abc started on Fri Jul 30 10:08:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Declare precedence should not allow multiple * patterns" passed.


Running test bugs/VerifyError on accessing objects not accessible to the weaver
Commandline: abc -d bugs bugs/AroundAccess.java 
Abc started on Fri Jul 30 10:08:19 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AroundAccess... 
Transforming Foo... 
Transforming FinalizeContract... 
Transforming Abc$access$FinalizeContract$around$2477... 
Abc finished on Fri Jul 30 10:08:20 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 347 millisec.)
------------------------------------------------
[ 15.274% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.288% ] Create polyglot compiler:  1
[ 46.398% ] Polyglot phases:  161
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.882% ] Retrieving bodies:  10
[ 06.628% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.305% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.865% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 14.697% ] Soot Packs:  51
[ 10.663% ] Soot Writing Output:  37
================================================
PASS: bugs: Test "VerifyError on accessing objects not accessible to the weaver" passed.


Running test new/aspect static initializers should run before instance constructed
Commandline: abc -d new new/AspectStaticInit.java 
Abc started on Fri Jul 30 10:08:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectStaticInit... 
Transforming A... 
Abc finished on Fri Jul 30 10:08:20 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 268 millisec.)
------------------------------------------------
[ 20.149% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.328% ] Polyglot phases:  92
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.239% ] Retrieving bodies:  6
[ 23.134% ] Update pattern matcher:  62
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.119% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.373% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 11.194% ] Soot Packs:  30
[ 07.463% ] Soot Writing Output:  20
================================================
PASS: new: Test "aspect static initializers should run before instance constructed" passed.


Running test bugs/super call in intertype method declaration body causes VerifyError
Commandline: abc -d bugs bugs/SuperToIntro.java 
Abc started on Fri Jul 30 10:08:20 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming Foo... 
Transforming SuperToIntro... 
Transforming B... 
Abc finished on Fri Jul 30 10:08:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 356 millisec.)
------------------------------------------------
[ 15.449% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.933% ] Polyglot phases:  103
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.281% ] Intertype Adjuster:  1
[ 03.371% ] Retrieving bodies:  12
[ 06.461% ] Update pattern matcher:  23
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.966% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.281% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 14.045% ] Exceptions check:  50
[ 00.000% ] Validate jimple:  0
[ 17.978% ] Soot Packs:  64
[ 11.236% ] Soot Writing Output:  40
================================================
PASS: bugs: Test "super call in intertype method declaration body causes VerifyError" passed.


Running test bugs/crashes/Error with certain combination of advice
Commandline: abc -d bugs/crashes bugs/crashes/test/Test3.java 
Abc started on Fri Jul 30 10:08:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming test.Test3... 
Transforming test.Log... 
Abc finished on Fri Jul 30 10:08:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 370 millisec.)
------------------------------------------------
[ 14.595% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.324% ] Polyglot phases:  127
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.270% ] Intertype Adjuster:  1
[ 01.892% ] Retrieving bodies:  7
[ 03.784% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.892% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 23.243% ] Weaving advice:  86
[ 00.270% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.622% ] Soot Packs:  43
[ 08.108% ] Soot Writing Output:  30
================================================
test.Test3@1d990c2.x:=-3
call(void test.Test3.foo(int))
PASS: bugs/crashes: Test "Error with certain combination of advice" passed.


Running test bugs/Pointcut adviceexecution() does not work
Commandline: abc -d bugs bugs/AdviceExec.java 
Abc started on Fri Jul 30 10:08:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect2... 
Transforming Aspect1... 
Transforming AdviceExec... 
Transforming Abc$access$Aspect1$around$2492... 
Abc finished on Fri Jul 30 10:08:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 334 millisec.)
------------------------------------------------
[ 16.467% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 30.240% ] Polyglot phases:  101
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.395% ] Retrieving bodies:  8
[ 07.186% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.198% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.299% ] Add aspect code:  1
[ 00.898% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 31.138% ] Soot Packs:  104
[ 10.180% ] Soot Writing Output:  34
================================================
PASS: bugs: Test "Pointcut adviceexecution() does not work" passed.


Running test bugs/problems with finalize call
Commandline: abc -d bugs bugs/Finalizer.java 
Abc started on Fri Jul 30 10:08:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Finalizer... 
Transforming FinalizeContract... 
Transforming Abc$access$FinalizeContract$around$2495... 
Abc finished on Fri Jul 30 10:08:21 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 177 millisec.)
------------------------------------------------
[ 30.508% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.565% ] Create polyglot compiler:  1
[ 24.294% ] Polyglot phases:  43
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.260% ] Retrieving bodies:  4
[ 06.780% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.695% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.130% ] Weaving advice:  2
[ 00.565% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 20.339% ] Soot Packs:  36
[ 11.864% ] Soot Writing Output:  21
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "bugs/problems with finalize call" failed


Running test bugs/Negation of if pointcut does not work
Commandline: abc -d bugs bugs/NotIf.java 
Abc started on Fri Jul 30 10:08:21 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Aspect2... 
Transforming NotIf... 
Transforming Aspect1... 
Abc finished on Fri Jul 30 10:08:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 376 millisec.)
------------------------------------------------
[ 29.255% ] Init. of Soot:  110
[ 00.000% ] Loading Jars:  0
[ 00.266% ] Create polyglot compiler:  1
[ 27.660% ] Polyglot phases:  104
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.723% ] Retrieving bodies:  14
[ 06.383% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.128% ] Compute advice lists:  8
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.532% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 19.149% ] Soot Packs:  72
[ 10.904% ] Soot Writing Output:  41
================================================
PASS: bugs: Test "Negation of if pointcut does not work" passed.


Running test bugs/ajc reports error when encountering static declaration of nested classes
Commandline: abc -d bugs bugs/WeaveLocal.java 
Abc started on Fri Jul 30 10:08:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming WeaveLocal... 
Transforming WeaveLocal$1StaticNestedClass... 
Transforming Abc$access$A$around$2507... 
Abc finished on Fri Jul 30 10:08:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 249 millisec.)
------------------------------------------------
[ 35.341% ] Init. of Soot:  88
[ 00.000% ] Loading Jars:  0
[ 00.402% ] Create polyglot compiler:  1
[ 26.104% ] Polyglot phases:  65
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.410% ] Retrieving bodies:  6
[ 05.221% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.205% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.402% ] Add aspect code:  1
[ 00.803% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.867% ] Soot Packs:  42
[ 11.245% ] Soot Writing Output:  28
================================================
DUMMY inserted by ASPECT
PASS: bugs: Test "ajc reports error when encountering static declaration of nested classes" passed.


Running test bugs/can't use pointcuts defined in inner aspects 
Commandline: abc -d bugs bugs/InnerPointcut.java 
Abc started on Fri Jul 30 10:08:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming InnerPointcut... 
Transforming InnerPointcut$TrackTestCase... 
Abc finished on Fri Jul 30 10:08:22 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 267 millisec.)
------------------------------------------------
[ 20.225% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 50.562% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.375% ] Declare Parents:  1
[ 00.000% ] Intertype Adjuster:  0
[ 01.124% ] Retrieving bodies:  3
[ 08.989% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.749% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.375% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.375% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.487% ] Soot Packs:  28
[ 06.742% ] Soot Writing Output:  18
================================================
PASS: bugs: Test "can't use pointcuts defined in inner aspects " passed.


Running test bugs/interfaceNames/can't resolve nested public interfaces (also PR#32399)
Commandline: abc -d bugs/interfaceNames bugs/interfaceNames/TransactionTest.java bugs/interfaceNames/sub/ExecutionMonitor.java bugs/interfaceNames/sub/ObserverProtocol.aj 
Abc started on Fri Jul 30 10:08:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: unhandled exception during compilation
polyglot.util.InternalCompilerError: unhandled exception during compilation
	at abc.main.Main.run(Main.java:476)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NullPointerException
	at polyglot.util.TypedList.tryIns(TypedList.java:178)
	at polyglot.util.TypedList.add(TypedList.java:106)
	at abc.aspectj.ast.DeclareParentsImpl_c.disambiguate(DeclareParentsImpl_c.java:61)
	at abc.aspectj.visit.DeclareParentsAmbiguityRemover.leaveCall(DeclareParentsAmbiguityRemover.java:43)
	at polyglot.visit.ErrorHandlingVisitor.leaveCall(ErrorHandlingVisitor.java:127)
	at polyglot.visit.ErrorHandlingVisitor.leave(ErrorHandlingVisitor.java:251)
	at polyglot.visit.ContextVisitor.leave(ContextVisitor.java:121)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:131)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at polyglot.ext.jl.ast.Node_c.visitList(Node_c.java:205)
	at polyglot.ext.jl.ast.ClassBody_c.visitChildren(ClassBody_c.java:61)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at abc.aspectj.ast.AspectDecl_c.visitChildren(AspectDecl_c.java:207)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at polyglot.ext.jl.ast.Node_c.visitList(Node_c.java:205)
	at polyglot.ext.jl.ast.ClassBody_c.visitChildren(ClassBody_c.java:61)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at abc.aspectj.ast.AspectDecl_c.visitChildren(AspectDecl_c.java:207)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visitChild(Node_c.java:148)
	at polyglot.ext.jl.ast.Node_c.visitList(Node_c.java:205)
	at polyglot.ext.jl.ast.SourceFile_c.visitChildren(SourceFile_c.java:108)
	at polyglot.visit.NodeVisitor.visitEdge(NodeVisitor.java:124)
	at polyglot.ext.jl.ast.Node_c.visit(Node_c.java:152)
	at polyglot.frontend.VisitorPass.run(VisitorPass.java:48)
	at polyglot.frontend.AbstractExtensionInfo.runPass(AbstractExtensionInfo.java:286)
	at polyglot.frontend.AbstractExtensionInfo.runToPass(AbstractExtensionInfo.java:222)
	at polyglot.frontend.AbstractExtensionInfo.runAllPasses(AbstractExtensionInfo.java:190)
	at polyglot.frontend.AbstractExtensionInfo.runToCompletion(AbstractExtensionInfo.java:109)
	at polyglot.frontend.Compiler.compile(Compiler.java:95)
	at abc.main.Main.compile(Main.java:573)
	at abc.main.Main.run(Main.java:426)
	... 3 more
FAIL: Test "bugs/interfaceNames/can't resolve nested public interfaces (also PR#32399)" failed


Running test bugs/thisJoinPoint.getArgs() causes IncompatibleClassChangeError
Commandline: abc -d bugs bugs/ThisJoinPointAndVerifier.java 
Abc started on Fri Jul 30 10:08:22 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Log1... 
Transforming ThisJoinPointAndVerifier... 
Abc finished on Fri Jul 30 10:08:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 266 millisec.)
------------------------------------------------
[ 20.677% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.376% ] Create polyglot compiler:  1
[ 13.534% ] Polyglot phases:  36
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.008% ] Retrieving bodies:  8
[ 19.173% ] Update pattern matcher:  51
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.632% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 09.398% ] Weaving advice:  25
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.301% ] Soot Packs:  54
[ 10.902% ] Soot Writing Output:  29
================================================
Executed method
Log1a: leaving void ThisJoinPointAndVerifier.method()
Log1b: leaving void ThisJoinPointAndVerifier.method()
PASS: bugs: Test "thisJoinPoint.getArgs() causes IncompatibleClassChangeError" passed.


Running test errors/inter-type declaration of void field
Commandline: abc -d errors errors/VoidFieldDeclarationCE.java 
Abc started on Fri Jul 30 10:08:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "inter-type declaration of void field" passed.


Running test binding/no such constructor for proceed argument (error)
Commandline: abc -d binding binding/UnfoundConstructor.java 
Abc started on Fri Jul 30 10:08:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: binding: Test "no such constructor for proceed argument (error)" passed.


Running test new/declare/omnibus declare warning context with no initializer/constructor
Commandline: abc -d new/declare new/declare/DeclareWarningEmpty.java 
Abc started on Fri Jul 30 10:08:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming A... 
Transforming DeclareWarningEmpty... 
Abc finished on Fri Jul 30 10:08:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 134 millisec.)
------------------------------------------------
[ 41.791% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.746% ] Create polyglot compiler:  1
[ 17.164% ] Polyglot phases:  23
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.493% ] Retrieving bodies:  2
[ 09.701% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.493% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.746% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.164% ] Soot Packs:  23
[ 09.701% ] Soot Writing Output:  13
================================================
Found an unexpected error - should be on line -1, but is on line 3.
Errors found during this compilation:
Warning at DeclareWarningEmpty.java: 1 - staticinitialization(DeclareWarningEmpty) in method <DeclareWarningEmpty: void <clinit>()>
Warning at DeclareWarningEmpty.java:3,7-9:1: 2 - initialization(DeclareWarningEmpty)
FAIL: Test "new/declare/omnibus declare warning context with no initializer/constructor" failed


Running test new/declare/omnibus declare warning context
Commandline: abc -d new/declare new/declare/DeclareWarning.java 
Abc started on Fri Jul 30 10:08:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming A... 
Transforming DeclareWarning... 
Abc finished on Fri Jul 30 10:08:23 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 261 millisec.)
------------------------------------------------
[ 21.073% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.690% ] Polyglot phases:  54
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.663% ] Retrieving bodies:  20
[ 06.130% ] Update pattern matcher:  16
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 18.008% ] Compute advice lists:  47
[ 00.000% ] Intertype weave:  0
[ 00.383% ] Add aspect code:  1
[ 00.383% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.326% ] Soot Packs:  40
[ 10.345% ] Soot Writing Output:  27
================================================
Found an unexpected error - should be on line -1, but is on line 5.
Errors found during this compilation:
Warning at DeclareWarning.java: execution(void run()) in method <DeclareWarning: void run()>
Warning at DeclareWarning.java: execution(void irun()) in method <DeclareWarning: void irun()>
Warning at DeclareWarning.java:5,20-48: staticinitialization(DeclareWarning)
Warning at DeclareWarning.java:12,28-48: call(DeclareWarning.new())
Warning at DeclareWarning.java:13,12-13: get staticInt
Warning at DeclareWarning.java:14,8-26: get instanceInt
Warning at DeclareWarning.java:15,8-21: set staticInt
Warning at DeclareWarning.java:16,8-26: set instanceInt
Warning at DeclareWarning.java:17,8-13: call(void run())
Warning at DeclareWarning.java:18,8-17: call(void irun())
Warning at DeclareWarning.java:23,28-43:5: execution(DeclareWarning.new())
Warning at DeclareWarning.java:23,11-43:5: initialization(DeclareWarning)
Warning at DeclareWarning.java:33,17-35: handler(OutOfMemoryError) && within(DeclareWarning)
Warning at DeclareWarning.java:36,17-24: handler(Error)
Warning at DeclareWarning.java:39,17-35: handler(RuntimeException) && withincode(DeclareWarning.new())
Warning at DeclareWarning.java:74,13-14: adviceExecution() && within(A)
FAIL: Test "new/declare/omnibus declare warning context" failed


Running test new/can't apply around advice to the execution of around advice
Commandline: abc -d new new/CflowCycles.java 
Abc started on Fri Jul 30 10:08:23 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CflowCycles... 
Transforming A1... 
Transforming Target... 
Transforming A2... 
Transforming Abc$access$A1$around$2515... 
Transforming Abc$access$A2$around$2516... 
Abc finished on Fri Jul 30 10:08:24 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 452 millisec.)
------------------------------------------------
[ 11.947% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 24.115% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.549% ] Retrieving bodies:  7
[ 05.310% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.327% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 05.531% ] Weaving advice:  25
[ 00.221% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 35.841% ] Soot Packs:  162
[ 14.159% ] Soot Writing Output:  64
================================================
PASS: new: Test "can't apply around advice to the execution of around advice" passed.


Running test new/incompatible advice throws clause are a compile-time error
Commandline: abc -d new new/AdviceThrowsCf.java 
Abc started on Fri Jul 30 10:08:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Compilation produced an unexpected number of errors: 13, should be 10
Actual errors found: 
Semantic Error at AdviceThrowsCf.java: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here in method <C: void <clinit>()>
Semantic Error at AdviceThrowsCf.java:7,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:13,20-24: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:13,20-24: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:19,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:28,20-24: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:28,20-24: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:28,20-24: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:48,10-11: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:48,10-11: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:50,8-14: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:50,8-14: Advice from aspect A applies here, and throws exception CheckedExc which is not already thrown here
Semantic Error at AdviceThrowsCf.java:50,8-14: Advice from aspect A applies here, and throws exception UncheckedExc which is not already thrown here
FAIL: Test "new/incompatible advice throws clause are a compile-time error" failed


Running test bugs/cflow binding issues with ignoring state
Commandline: abc -d bugs bugs/CflowBinding.java 
Abc started on Fri Jul 30 10:08:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: unhandled exception during compilation
polyglot.util.InternalCompilerError: unhandled exception during compilation
	at abc.main.Main.run(Main.java:476)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: Advice formal pcvar$17 not found
	at abc.weaving.aspectinfo.AdviceDecl.getFormalIndex(AdviceDecl.java:56)
	at abc.weaving.matching.AdviceFormals.getWeavingVar(AdviceFormals.java:24)
	at abc.weaving.aspectinfo.Cflow.matchesAt(Cflow.java:69)
	at abc.weaving.aspectinfo.AndPointcut.matchesAt(AndPointcut.java:45)
	at abc.weaving.matching.AdviceApplication.doShadows(AdviceApplication.java:87)
	at abc.weaving.matching.AdviceApplication.doMethod(AdviceApplication.java:178)
	at abc.weaving.matching.AdviceApplication.computeAdviceLists(AdviceApplication.java:247)
	at abc.weaving.aspectinfo.GlobalAspectInfo.computeAdviceLists(GlobalAspectInfo.java:398)
	at abc.main.Main.weave(Main.java:640)
	at abc.main.Main.run(Main.java:430)
	... 3 more
FAIL: Test "bugs/cflow binding issues with ignoring state" failed


Running test bugs/cflow binding -- original weaver crash
Commandline: abc -d bugs bugs/CflowBindingOrig.java 
Abc started on Fri Jul 30 10:08:24 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CflowBindingOrig... 
Transforming CflowBindingOrig$MockProcessing... 
Transforming Bar... 
Transforming DummyConfiguration... 
Transforming Abc$access$CflowBindingOrig$MockProcessing$around$2537... 
Abc finished on Fri Jul 30 10:08:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 225 millisec.)
------------------------------------------------
[ 24.000% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 21.333% ] Polyglot phases:  48
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.222% ] Retrieving bodies:  5
[ 05.778% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.778% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 08.000% ] Weaving advice:  18
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.778% ] Soot Packs:  49
[ 15.111% ] Soot Writing Output:  34
================================================
PASS: bugs: Test "cflow binding -- original weaver crash" passed.


Running test errors/type not imported in around advice
Commandline: abc -d errors errors/TypeNotImportedInAroundCE.java 
Abc started on Fri Jul 30 10:08:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "type not imported in around advice" passed.


Running test errors/type not imported in aspect
Commandline: abc -d errors errors/TypeInAspectNotImportedCE.java 
Abc started on Fri Jul 30 10:08:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "type not imported in aspect" passed.


Running test errors/class extending abstract aspect
Commandline: abc -d errors errors/ClassExtendingAbstractAspectCE.java 
Abc started on Fri Jul 30 10:08:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: errors: Test "class extending abstract aspect" passed.


Running test new/illegal name binding in around cflow
Commandline: abc -d new new/ArgsInCflowCf.java 
Abc started on Fri Jul 30 10:08:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ArgsInCflowCf... 
Transforming Test... 
Transforming Abc$access$Test$around$2543... 
Transforming Abc$access$Test$around$2542... 
Transforming Abc$access$Test$around$2541... 
Abc finished on Fri Jul 30 10:08:25 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 422 millisec.)
------------------------------------------------
[ 12.559% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.237% ] Create polyglot compiler:  1
[ 35.782% ] Polyglot phases:  151
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.607% ] Retrieving bodies:  11
[ 05.687% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.607% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.237% ] Add aspect code:  1
[ 04.976% ] Weaving advice:  21
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.327% ] Soot Packs:  90
[ 13.981% ] Soot Writing Output:  59
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/illegal name binding in around cflow" failed


Running test bugs/before():execution(new(..)) does not throw NoAspectBoundException
Commandline: abc -d bugs bugs/AspectInitError.java 
Abc started on Fri Jul 30 10:08:25 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectInitError... 
Transforming Watchcall... 
Abc finished on Fri Jul 30 10:08:26 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 199 millisec.)
------------------------------------------------
[ 47.236% ] Init. of Soot:  94
[ 00.503% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 14.070% ] Polyglot phases:  28
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.010% ] Retrieving bodies:  4
[ 07.035% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.005% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.503% ] Add aspect code:  1
[ 00.503% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.588% ] Soot Packs:  35
[ 09.548% ] Soot Writing Output:  19
================================================
InvocationTargetException while trying to run compiled class: org.aspectj.lang.NoAspectBoundException: Exception while initializing Watchcall: org.aspectj.lang.NoAspectBoundException: Watchcall
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: org.aspectj.lang.NoAspectBoundException: Exception while initializing Watchcall: org.aspectj.lang.NoAspectBoundException: Watchcall
	at Watchcall.aspectOf(AspectInitError.java)
	at AspectInitError.<init>(AspectInitError.java:5)
	at AspectInitError.main(AspectInitError.java:8)
	... 7 more
Caused by: org.aspectj.lang.NoAspectBoundException: Watchcall
	at Watchcall.aspectOf(AspectInitError.java)
	at Watchcall.<init>(AspectInitError.java:13)
	at Watchcall.abc$postClinit(AspectInitError.java)
	at Watchcall.<clinit>(AspectInitError.java)
	... 9 more
FAIL: Test "bugs/before():execution(new(..)) does not throw NoAspectBoundException" failed


Running test bugs/declare soft and throw statements
Commandline: abc -d bugs bugs/ConvertToUnchecked.java 
Abc started on Fri Jul 30 10:08:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Syntax Error at bugs/ConvertToUnchecked.java:25,18-19: Syntax error.
FAIL: Test "bugs/declare soft and throw statements" failed


Running test bugs/interAbstract/inter-type declaration bug with abstract classes
Commandline: abc -d bugs/interAbstract bugs/interAbstract/Driver.java 
Abc started on Fri Jul 30 10:08:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Derived... 
Transforming ExecutionMonitor... 
Transforming ExecutionMonitor$MonitoredItem... 
Transforming Driver... 
Transforming Driver$MonitorBase... 
Transforming Base... 
Abc finished on Fri Jul 30 10:08:26 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 251 millisec.)
------------------------------------------------
[ 21.912% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.131% ] Polyglot phases:  43
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.789% ] Retrieving bodies:  7
[ 05.179% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.195% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.398% ] Weaving advice:  1
[ 00.398% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 35.060% ] Soot Packs:  88
[ 15.936% ] Soot Writing Output:  40
================================================
0
PASS: bugs/interAbstract: Test "inter-type declaration bug with abstract classes" passed.


Running test bugs/interInherit/Inter type declaration to base class not seen by derived class
Commandline: abc -d bugs/interInherit bugs/interInherit/a_impl/AImpl.java bugs/interInherit/a_impl/Af.java bugs/interInherit/a_intf/A.java bugs/interInherit/b_impl/BImpl.java bugs/interInherit/b_intf/B.java 
Abc started on Fri Jul 30 10:08:26 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming a_intf.A... 
Transforming b_impl.BImpl... 
Transforming b_intf.B... 
Transforming a_impl.AImpl... 
Transforming a_impl.Af... 
Abc finished on Fri Jul 30 10:08:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 229 millisec.)
------------------------------------------------
[ 23.581% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 35.808% ] Polyglot phases:  82
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.620% ] Retrieving bodies:  6
[ 05.677% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.310% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.437% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.437% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.031% ] Soot Packs:  39
[ 13.100% ] Soot Writing Output:  30
================================================
g called
f called
PASS: bugs/interInherit: Test "Inter type declaration to base class not seen by derived class" passed.


Running test new/declareParents/Declare parents with intermediate ancestor
Commandline: abc -d new/declareParents new/declareParents/Driver.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 0
Actual errors found: 
Semantic Error at new/declareParents/Driver.java:15,15-16: Expression operand incompatible with type in "instanceof".
Semantic Error at new/declareParents/Driver.java:16,15-16: Expression operand incompatible with type in "instanceof".
FAIL: Test "new/declareParents/Declare parents with intermediate ancestor" failed


Running test new/declareParents/Declare parents removing ancestor
Commandline: abc -d new/declareParents new/declareParents/IllegalAdoption.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming IllegalAdoption... 
Transforming IllegalAdoption$E... 
Transforming IllegalAdoption$Adoption... 
Transforming IllegalAdoption$C... 
Transforming IllegalAdoption$D... 
Transforming IllegalAdoption$B... 
Transforming IllegalAdoption$A... 
Abc finished on Fri Jul 30 10:08:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 198 millisec.)
------------------------------------------------
[ 27.778% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 20.707% ] Polyglot phases:  41
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.525% ] Retrieving bodies:  5
[ 06.566% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.010% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.505% ] Add aspect code:  1
[ 00.505% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.212% ] Soot Packs:  42
[ 19.192% ] Soot Writing Output:  38
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/declareParents/Declare parents removing ancestor" failed


Running test options/injars/simple/options -injars checking declare parents interactions
Commandline: abc -d options/injars/simple -injars main.jar options/injars/simple/DecParents.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at options/injars/simple/DecParents.java:20,15-19: Could not find type "Main".
FAIL: Test "options/injars/simple/options -injars checking declare parents interactions" failed


Running test bugs/interSpecials/IllegalAccessError while accessing introduced variable / 1.1rc1
Commandline: abc -d bugs/interSpecials bugs/interSpecials/p1/C.java bugs/interSpecials/p2/A1.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.C... 
Transforming p2.InterClass... 
Transforming p2.A1... 
Transforming Abc$access$p2_d_InterClass$around$2558... 
Abc finished on Fri Jul 30 10:08:27 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 210 millisec.)
------------------------------------------------
[ 26.190% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.476% ] Create polyglot compiler:  1
[ 16.667% ] Polyglot phases:  35
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.476% ] Intertype Adjuster:  1
[ 04.286% ] Retrieving bodies:  9
[ 06.190% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.714% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.476% ] Add aspect code:  1
[ 00.952% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 22.381% ] Soot Packs:  47
[ 16.190% ] Soot Writing Output:  34
================================================
class: class p1.C
class: class p1.C
PASS: bugs/interSpecials: Test "IllegalAccessError while accessing introduced variable / 1.1rc1" passed.


Running test bugs/interSpecials/testing that assert works like .class
Commandline: abc -d bugs/interSpecials -source 1.4 bugs/interSpecials/p1/C.java bugs/interSpecials/p2/A2.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <p2.InterClass: void p2$InterClass$foo$2564(p1.C)>
polyglot.util.InternalCompilerError: Exception while processing <p2.InterClass: void p2$InterClass$foo$2564(p1.C)>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: 
Aborting: can't find classfile java.lang.AssertionError
	at soot.Scene.getSootClass(Scene.java:335)
	at soot.javaToJimple.JimpleBodyBuilder.createAssert(JimpleBodyBuilder.java:1161)
	at soot.javaToJimple.JimpleBodyBuilder.createStmt(JimpleBodyBuilder.java:547)
	at soot.javaToJimple.JimpleBodyBuilder.createBlock(JimpleBodyBuilder.java:302)
	at soot.javaToJimple.JimpleBodyBuilder.createJimpleBody(JimpleBodyBuilder.java:103)
	at soot.javaToJimple.PolyglotMethodSource.getBody(PolyglotMethodSource.java:35)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "bugs/interSpecials/testing that assert works like .class" failed


Running test new/implemented abstract pointcut
Commandline: abc -d new new/AbstractImplementedPointcut.java 
Abc started on Fri Jul 30 10:08:27 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new: Test "implemented abstract pointcut" passed.


Running test new/verifyError/privileged aspect main verify error
Commandline: abc -d new/verifyError new/verifyError/Privilege.java 
Abc started on Fri Jul 30 10:08:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 3, should be 0
Actual errors found: 
Semantic Error at new/verifyError/Privilege.java:21,23-26: Cannot access j in C from Privilege.
Semantic Error at new/verifyError/Privilege.java:22,29-32: Cannot access s in C from Privilege.
Semantic Error at new/verifyError/Privilege.java:23,30-35: No valid method call found for m() in C.
FAIL: Test "new/verifyError/privileged aspect main verify error" failed


Running test bugs/Internal compiler error with thisJoinPoint.getStaticPart()
Commandline: abc -d bugs bugs/tjpStaticPart/Test.java bugs/tjpStaticPart/Exceptions.java 
Abc started on Fri Jul 30 10:08:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 0
Actual errors found: 
Semantic Error at Test.java:9,24-66: The exception java.io.FileNotFoundException must be either caught or declared to be thrown
FAIL: Test "bugs/Internal compiler error with thisJoinPoint.getStaticPart()" failed


Running test bugs/Inconsistant stack height with around
Commandline: abc -d bugs bugs/StackError.java 
Abc started on Fri Jul 30 10:08:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming StackError... 
Transforming EqualsContract... 
Transforming Abc$access$EqualsContract$around$2579... 
Abc finished on Fri Jul 30 10:08:28 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 327 millisec.)
------------------------------------------------
[ 16.820% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.306% ] Create polyglot compiler:  1
[ 30.275% ] Polyglot phases:  99
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.306% ] Intertype Adjuster:  1
[ 04.893% ] Retrieving bodies:  16
[ 05.505% ] Update pattern matcher:  18
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.529% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.306% ] Add aspect code:  1
[ 00.612% ] Weaving advice:  2
[ 00.306% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.679% ] Soot Packs:  48
[ 24.465% ] Soot Writing Output:  80
================================================
PASS: bugs: Test "Inconsistant stack height with around" passed.


Running test bugs/messyAround/Ajc 1.1 rc1 java.lang.VerifyError with messy arounds
Commandline: abc -d bugs/messyAround bugs/messyAround/aspects/Trace.aj bugs/messyAround/cap/OptionList.java bugs/messyAround/DebugTrace.aj 
Abc started on Fri Jul 30 10:08:28 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 27, should be 3
Actual errors found: 
Semantic Error at bugs/messyAround/DebugTrace.aj:11,37-42: Could not find type "Trace".
Syntax Error at bugs/messyAround/aspects/Trace.aj:200,38-51: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:212,26-27: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:217,26-27: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:225,8-10: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:229,12-15: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:235,20-22: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:237,36-37: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:238,36-37: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:239,36-37: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:240,36-37: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:245,24-27: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:247,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:248,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:249,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:250,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:251,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:253,44-45: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:254,60-61: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:255,40-41: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:262,32-33: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:263,32-33: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:264,32-33: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:267,36-37: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:269,54-55: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:280,32-33: Syntax error.
Syntax Error at bugs/messyAround/aspects/Trace.aj:287,12-16: Syntax error.
FAIL: Test "bugs/messyAround/Ajc 1.1 rc1 java.lang.VerifyError with messy arounds" failed


Running test new/try/finally in around advice (same as ...messy arounds?)
Commandline: abc -d new new/TryFinallyInAround.java 
Abc started on Fri Jul 30 10:08:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming TryFinallyInAround... 
Transforming C... 
Transforming Abc$access$A$around$2586... 
Abc finished on Fri Jul 30 10:08:29 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 394 millisec.)
------------------------------------------------
[ 13.452% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.254% ] Create polyglot compiler:  1
[ 35.533% ] Polyglot phases:  140
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.315% ] Retrieving bodies:  17
[ 06.599% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.269% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.254% ] Add aspect code:  1
[ 07.107% ] Weaving advice:  28
[ 00.254% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 18.528% ] Soot Packs:  73
[ 12.437% ] Soot Writing Output:  49
================================================
InvocationTargetException while trying to run compiled class: java.lang.NoSuchFieldError: abc$cflowCounter$1
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.NoSuchFieldError: abc$cflowCounter$1
	at C.<clinit>(TryFinallyInAround.java)
	at TryFinallyInAround.main(TryFinallyInAround.java:8)
	... 7 more
FAIL: Test "new/try/finally in around advice (same as ...messy arounds?)" failed


Running test new/advise join points in subclass of empty interface
Commandline: abc -d new new/EmptyInterface.java 
Abc started on Fri Jul 30 10:08:29 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming C... 
Transforming Log... 
Transforming Log$LoggedType... 
Transforming EmptyInterface... 
Abc finished on Fri Jul 30 10:08:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 439 millisec.)
------------------------------------------------
[ 12.528% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.228% ] Create polyglot compiler:  1
[ 24.829% ] Polyglot phases:  109
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.595% ] Retrieving bodies:  7
[ 05.695% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.911% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.228% ] Add aspect code:  1
[ 06.606% ] Weaving advice:  29
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 35.308% ] Soot Packs:  155
[ 12.073% ] Soot Writing Output:  53
================================================
PASS: new: Test "advise join points in subclass of empty interface" passed.


Running test new/can't put around advice on interface static initializer
Commandline: abc -d new new/EmptyInterfaceCE.java 
Abc started on Fri Jul 30 10:08:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming EmptyInterfaceCE... 
Transforming Log... 
Transforming Log$LoggedType... 
Transforming C... 
Transforming Abc$access$Log: not supported by cvs2svn $around$2589... 
Abc finished on Fri Jul 30 10:08:30 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 389 millisec.)
------------------------------------------------
[ 13.882% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.257% ] Create polyglot compiler:  1
[ 26.221% ] Polyglot phases:  102
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.057% ] Retrieving bodies:  8
[ 06.170% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.028% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.257% ] Add aspect code:  1
[ 27.506% ] Weaving advice:  107
[ 00.257% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.853% ] Soot Packs:  50
[ 09.512% ] Soot Writing Output:  37
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "new/can't put around advice on interface static initializer" failed


Running test bugs/cflow concretization causing assertion failure
Commandline: abc -d bugs bugs/CflowConcrete.java 
Abc started on Fri Jul 30 10:08:30 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Transforming TestAjc... 
Transforming CflowConcrete... 
Abc finished on Fri Jul 30 10:08:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 350 millisec.)
------------------------------------------------
[ 15.714% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.143% ] Polyglot phases:  60
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.143% ] Retrieving bodies:  4
[ 04.000% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.857% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.286% ] Add aspect code:  1
[ 12.286% ] Weaving advice:  43
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 39.143% ] Soot Packs:  137
[ 09.429% ] Soot Writing Output:  33
================================================
InvocationTargetException while trying to run compiled class: java.lang.ExceptionInInitializerError
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.ExceptionInInitializerError
	at CflowConcrete.main(CflowConcrete.java)
	... 7 more
Caused by: java.lang.NullPointerException
	at TestAjc.<clinit>(CflowConcrete.java)
	... 8 more
FAIL: Test "bugs/cflow concretization causing assertion failure" failed


Running test new/options11/The compiler crashes when using aspect libraries created without using -noweave
Commandline: abc -d new/options11 -injars injar.jar:aspectlib1.jar:aspectlib2.jar new/options11/Main.java new/options11/Aspect.java 
Abc started on Fri Jul 30 10:08:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 1
Actual errors found: 
Semantic Error at new/options11/Aspect.java: Class "library1.Library1" not found.
Semantic Error at new/options11/Main.java:8,12-23: Could not find type "Injar".
FAIL: Test "new/options11/The compiler crashes when using aspect libraries created without using -noweave" failed


Running test bugs/lame error message: negation doesn't allow binding
Commandline: abc -d bugs bugs/BadBindingError.java 
Abc started on Fri Jul 30 10:08:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "lame error message: negation doesn't allow binding" passed.


Running test bugs/interSpecials/Error when introducing members of type Class
Commandline: abc -d bugs/interSpecials bugs/interSpecials/Trg.java bugs/interSpecials/Asp.java 
Abc started on Fri Jul 30 10:08:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Asp... 
Transforming Trg... 
Abc finished on Fri Jul 30 10:08:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 210 millisec.)
------------------------------------------------
[ 46.190% ] Init. of Soot:  97
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.619% ] Polyglot phases:  37
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.476% ] Intertype Adjuster:  1
[ 02.381% ] Retrieving bodies:  5
[ 05.714% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 04.286% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.476% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.476% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.333% ] Soot Packs:  28
[ 09.048% ] Soot Writing Output:  19
================================================
All ok
PASS: bugs/interSpecials: Test "Error when introducing members of type Class" passed.


Running test new/arrays via Class.forName()
Commandline: abc -d new new/ClassForName.java 
Abc started on Fri Jul 30 10:08:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $r0 = <ClassForName: java.lang.Class array$Ljava$lang$String>
Transforming A... 
Transforming ClassForName... 
Abc finished on Fri Jul 30 10:08:31 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 397 millisec.)
------------------------------------------------
[ 13.602% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 54.156% ] Polyglot phases:  215
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.763% ] Retrieving bodies:  7
[ 06.549% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.771% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 06.045% ] Weaving advice:  24
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.564% ] Soot Packs:  34
[ 06.549% ] Soot Writing Output:  26
================================================
execution(void ClassForName.main(String[]))
PASS: new: Test "arrays via Class.forName()" passed.


Running test new/binaryWarnings/src/declare warnings on main
Commandline: abc -d new/binaryWarnings/src new/binaryWarnings/src/aspects/MainWarnings.java new/binaryWarnings/src/app/Main.java 
Abc started on Fri Jul 30 10:08:31 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $r0 = ".."
Transforming aspects.MainWarnings... 
Transforming app.Main... 
Transforming app.C... 
Transforming app.D... 
Abc finished on Fri Jul 30 10:08:32 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 273 millisec.)
------------------------------------------------
[ 20.147% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.366% ] Create polyglot compiler:  1
[ 20.513% ] Polyglot phases:  56
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.326% ] Retrieving bodies:  20
[ 05.861% ] Update pattern matcher:  16
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 16.484% ] Compute advice lists:  45
[ 00.000% ] Intertype weave:  0
[ 00.366% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.366% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 15.751% ] Soot Packs:  43
[ 12.821% ] Soot Writing Output:  35
================================================
Found an unexpected error - should be on line -1, but is on line 6.
Errors found during this compilation:
Warning at Main.java: execution(void Main.go(String)) in method <app.Main: void go(java.lang.String)>
Warning at Main.java:6,33-40: staticinitialization(Main)
Warning at Main.java:6,33-40: set(String Main.staticString)
Warning at Main.java:8,15-19: set(String Main.s)
Warning at Main.java:12,15-19: get(String Main.staticString)
Warning at Main.java:14,8-39: set(String Main.staticString)
Warning at Main.java:16,20-30: call(Main.new())
Warning at Main.java:19,12-28: call(void Main.go(String))
Warning at Main.java:23,4-24:5: initialization(Main.new())
Warning at Main.java:23,14-15: get(String Main.s)
Warning at Main.java:23,14-45: set(String Main.s)
Warning at Main.java:29,19-23: get(String Main.s)
Warning at Main.java:31,12-36: set(String Main.s)
Warning at Main.java:32,12-18: D.go withincode(void Main.go(String))
Warning at Main.java:33,17-35: handler(RuntimeException) && within(Main)
Warning at Main.java:35,12-18: Main.stop withincode(void Main.go(String))
Warning at Main.java:42,8-14: withincode(void Main.stop())
Warning at Main.java:50,4-52:5: preinitialization(app.C.new())
FAIL: Test "new/binaryWarnings/src/declare warnings on main" failed


Running test new/binaryWarnings/src/declare warnings on binary javac 1.4 classes
Commandline: abc -d new/binaryWarnings/src -injars ../injars/app-javac-1.4.jar new/binaryWarnings/src/aspects/MainWarnings.java 
Abc started on Fri Jul 30 10:08:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 18
Actual errors found: 
Semantic Error at new/binaryWarnings/src/aspects/MainWarnings.java:4,0-16: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare warnings on binary javac 1.4 classes" failed


Running test new/binaryWarnings/src/declare warnings on binary ajc 1.1 classes
Commandline: abc -d new/binaryWarnings/src -injars ../injars/app-ajc-1.1.jar new/binaryWarnings/src/aspects/MainWarnings.java 
Abc started on Fri Jul 30 10:08:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 18
Actual errors found: 
Semantic Error at new/binaryWarnings/src/aspects/MainWarnings.java:4,0-16: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare warnings on binary ajc 1.1 classes" failed


Running test new/binaryWarnings/src/declare error on handler/method execution with no code on binary ajc 1.1 classes
Commandline: abc -d new/binaryWarnings/src -injars ../injars/appStartLines-ajc-1.1.jar new/binaryWarnings/src/aspects/MainExecStartLinesErrors.java 
Abc started on Fri Jul 30 10:08:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at new/binaryWarnings/src/aspects/MainExecStartLinesErrors.java:4,0-30: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare error on handler/method execution with no code on binary ajc 1.1 classes" failed


Running test new/binaryWarnings/src/declare error on handler/method execution with no code on binary javac 1.4 classes
Commandline: abc -d new/binaryWarnings/src -injars ../injars/appStartLines-javac-1.4.jar new/binaryWarnings/src/aspects/MainExecStartLinesErrors.java 
Abc started on Fri Jul 30 10:08:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 1, should be 2
Actual errors found: 
Semantic Error at new/binaryWarnings/src/aspects/MainExecStartLinesErrors.java:4,0-30: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare error on handler/method execution with no code on binary javac 1.4 classes" failed


Running test incremental/initialTests/expClasses/expected class tree
Commandline: abc -d incremental/initialTests/expClasses incremental/initialTests/expClasses/Main.java 
Abc started on Fri Jul 30 10:08:32 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Main... 
Abc finished on Fri Jul 30 10:08:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 104 millisec.)
------------------------------------------------
[ 63.462% ] Init. of Soot:  66
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 12.500% ] Polyglot phases:  13
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 00.962% ] Retrieving bodies:  1
[ 11.538% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.962% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 05.769% ] Soot Packs:  6
[ 04.808% ] Soot Writing Output:  5
================================================
PASS: incremental/initialTests/expClasses: Test "expected class tree" passed.


Running test bugs/inlineAround/perthis and inline arounds
Commandline: abc -d bugs/inlineAround bugs/inlineAround/aspect1/Base.java bugs/inlineAround/aspect2/Concrete.java bugs/inlineAround/p1/Main.java 
Abc started on Fri Jul 30 10:08:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p1.C... 
Transforming p1.Main... 
Transforming aspect1.Base... 
Transforming aspect1.Base$Inner... 
Transforming aspect1.Helper... 
Transforming aspect2.Concrete... 
Transforming aspect2.Concrete$abc$PerThis... 
Transforming Abc$access$aspect1_d_Base$around$2601... 
Abc finished on Fri Jul 30 10:08:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 416 millisec.)
------------------------------------------------
[ 13.221% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 19.231% ] Polyglot phases:  80
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.240% ] Intertype Adjuster:  1
[ 04.327% ] Retrieving bodies:  18
[ 03.606% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.885% ] Compute advice lists:  12
[ 00.000% ] Intertype weave:  0
[ 00.240% ] Add aspect code:  1
[ 03.365% ] Weaving advice:  14
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 35.096% ] Soot Packs:  146
[ 17.788% ] Soot Writing Output:  74
================================================
helperhelperhelper3.1423
85
PASS: bugs/inlineAround: Test "perthis and inline arounds" passed.


Running test bugs/Weaver fails with NPE for very large source files 
Commandline: abc -d bugs bugs/LongFile.java 
Abc started on Fri Jul 30 10:08:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LongFile... 
Transforming LongFile$A... 
Abc finished on Fri Jul 30 10:08:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 340 millisec.)
------------------------------------------------
[ 16.765% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 47.941% ] Polyglot phases:  163
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.471% ] Retrieving bodies:  5
[ 08.235% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.882% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.294% ] Add aspect code:  1
[ 07.059% ] Weaving advice:  24
[ 00.294% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 10.000% ] Soot Packs:  34
[ 07.059% ] Soot Writing Output:  24
================================================
line: 33000
done it
PASS: bugs: Test "Weaver fails with NPE for very large source files " passed.


Running test harness/CLE: -help usage
Commandline: abc -d harness -help 
Usage:  java <java_options> abc.main.Main <abc_options> <filenames> 
   -or- abc <abc_options> <filenames>

   where a useful <java_option> is -Xmx512M, to provide a large heap
     and <filenames> should end in .java or .aj .

   <abc_options> are listed below, where 
      [ajc] indicates an option also available for ajc, and 
      [abc] indicates an option specific to abc.


General Options [ajc]: 
---------------------- 
  -h -help --help        Print options.  
  -v -version --version  Print abc, Soot and Polyglot versions.

Input Options [ajc]: 
-------------------- 
  -injars  <jarList>     Use classes in <jarList> as source.
  -classpath -cp         Class path of zip/jar and directories.

Output Options [ajc]: 
--------------------- 
  -d <dir>               Destination directory for generated files.

Warning/Error Reporting Options [ajc]: 
-------------------------------------- 
  -Xlint -Xlint:warning  Report Xlint (weaving-related) warnings/errors.
  -Xlint:error           Report Xlint errors only, not warnings.
  -Xlint:ignore          Don't report Xlint warnings or errors . 
  -nowarn -warn:none     Don't report normal (non-weaving-related) warnings.

Utility Options [ajc]:  
----------------------  
  -time                  Report total times and times for each phase.

Debug Options [abc]: 
-------------------- 
  -debug <FlagName>      Set abc.main.Debug.v().FlagName to true.
  -nodebug <FlagName>    Set abc.main.Debug.v().FlagName to false.

Optimization Options [abc]: 
--------------------------- 
  -O0                    Disable all optimizations.
  -O, -O1                Enable basic optimizations on generated code.
                         (this is the default setting)

Polyglot (front-end) and Soot (back-end) Options [abc]: 
------------------------------------------------------- 
  +polyglot <polyglot_options> -polyglot   Set polyglot options. 
  -help:polyglot                           List polyglot options. 
  +soot <soot_options> -soot               Set soot options.
  -help:soot                               List soot options. 
PASS: harness: Test "CLE: -help usage" passed.


Running test harness/CLE: no sources
Commandline: abc -d harness 
Abc started on Fri Jul 30 10:08:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Abc finished on Fri Jul 30 10:08:33 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 55 millisec.)
------------------------------------------------
[ 98.182% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 01.818% ] Create polyglot compiler:  1
[ 00.000% ] Polyglot phases:  0
[ 00.000% ] Resolve class names:  0
================================================
Compilation succeeded but was expected to fail.
FAIL: Test "harness/CLE: no sources" failed


Running test harness/CLE: bad filename
Commandline: abc -d harness harness/NoSuchFile.java 
Abc started on Fri Jul 30 10:08:33 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Error position is null; assuming error matches current expected error with no line number. Error message: Cannot find source file "harness/NoSuchFile.java".
WARNING: This test was probably not really passed!!
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: harness: Test "CLE: bad filename" passed.


Running test harness/CLE: no dir specified for sourceroots
Commandline: abc -d harness -sourceroots harness/ErrorTest.java 
Illegal arguments: Unknown option -sourceroots
FAIL: Test "harness/CLE: no dir specified for sourceroots" failed


Running test bugs/Unexpected Xlint:unresolvableMember warning with withincode
Commandline: abc -d bugs bugs/CatchSig.java 
Abc started on Fri Jul 30 10:08:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming CatchSig... 
Transforming C... 
Transforming B... 
Transforming Abc$access$C$around$2604... 
Abc finished on Fri Jul 30 10:08:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 287 millisec.)
------------------------------------------------
[ 19.164% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.348% ] Create polyglot compiler:  1
[ 15.679% ] Polyglot phases:  45
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.226% ] Retrieving bodies:  15
[ 05.226% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 05.575% ] Compute advice lists:  16
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 09.408% ] Weaving advice:  27
[ 00.697% ] Exceptions check:  2
[ 00.000% ] Validate jimple:  0
[ 22.997% ] Soot Packs:  66
[ 15.679% ] Soot Writing Output:  45
================================================
from: call(Class B.findClass())
from B.new()
from: call(Class B.findClass())
from B.new()
test from test2
from: execution(void CatchSig.main(String[]))
PASS: bugs: Test "Unexpected Xlint:unresolvableMember warning with withincode" passed.


Running test bugs/public static fields being ignored
Commandline: abc -d bugs bugs/FinalFields.java 
Abc started on Fri Jul 30 10:08:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FinalFields... 
Abc finished on Fri Jul 30 10:08:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 234 millisec.)
------------------------------------------------
[ 23.504% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 45.726% ] Polyglot phases:  107
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.427% ] Intertype Adjuster:  1
[ 05.556% ] Retrieving bodies:  13
[ 07.692% ] Update pattern matcher:  18
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.282% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.427% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.120% ] Soot Packs:  19
[ 07.265% ] Soot Writing Output:  17
================================================
modifers are: public static final
PASS: bugs: Test "public static fields being ignored" passed.


Running test bugs/lines/Weaving rt.jar results in stack overflow
Commandline: abc -d bugs/lines -injars big.jar bugs/lines/A.java 
Abc started on Fri Jul 30 10:08:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Abc finished on Fri Jul 30 10:08:34 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 159 millisec.)
------------------------------------------------
[ 35.849% ] Init. of Soot:  57
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 31.447% ] Polyglot phases:  50
[ 00.629% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.258% ] Retrieving bodies:  2
[ 09.434% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.258% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.629% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.208% ] Soot Packs:  21
[ 06.289% ] Soot Writing Output:  10
================================================
Failed to find class Big
FAIL: Test "bugs/lines/Weaving rt.jar results in stack overflow" failed


Running test harness/XLint:ignore suppresses XLint warnings
Commandline: abc -d harness -Xlint:ignore harness/XLintWarningTest.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:34 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming XLintWarningTest... 
Abc finished on Fri Jul 30 10:08:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 137 millisec.)
------------------------------------------------
[ 39.416% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.730% ] Create polyglot compiler:  1
[ 24.088% ] Polyglot phases:  33
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.460% ] Retrieving bodies:  2
[ 10.219% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.730% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.730% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.058% ] Soot Packs:  22
[ 06.569% ] Soot Writing Output:  9
================================================
PASS: harness: Test "XLint:ignore suppresses XLint warnings" passed.


Running test new/binaryWarnings/src/declare warnings on main - constructor execution
Commandline: abc -d new/binaryWarnings/src new/binaryWarnings/src/aspects/ConstructorExecutionWarning.java new/binaryWarnings/src/app/Main.java 
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming app.Main... 
Transforming app.D... 
Transforming app.C... 
Transforming aspects.ConstructorExecutionWarning... 
Abc finished on Fri Jul 30 10:08:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 245 millisec.)
------------------------------------------------
[ 22.449% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.571% ] Polyglot phases:  70
[ 00.408% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 07.755% ] Retrieving bodies:  19
[ 05.714% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.041% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.408% ] Add aspect code:  1
[ 00.408% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.959% ] Soot Packs:  44
[ 14.286% ] Soot Writing Output:  35
================================================
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new/binaryWarnings/src: Test "declare warnings on main - constructor execution" passed.


Running test new/binaryWarnings/src/declare warnings on binary javac 1.4 main - constructor execution
Commandline: abc -d new/binaryWarnings/src -injars ../injars/app-javac-1.4.jar new/binaryWarnings/src/aspects/ConstructorExecutionWarning.java 
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 4, but is on line 23.
Errors found during this compilation:
Semantic Error at new/binaryWarnings/src/aspects/ConstructorExecutionWarning.java:4,0-16: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare warnings on binary javac 1.4 main - constructor execution" failed


Running test new/binaryWarnings/src/declare warnings on binary ajc 1.1 main - constructor execution
Commandline: abc -d new/binaryWarnings/src -injars ../injars/app-ajc-1.1.jar new/binaryWarnings/src/aspects/ConstructorExecutionWarning.java 
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 4, but is on line 23.
Errors found during this compilation:
Semantic Error at new/binaryWarnings/src/aspects/ConstructorExecutionWarning.java:4,0-16: Package "app" not found.
FAIL: Test "new/binaryWarnings/src/declare warnings on binary ajc 1.1 main - constructor execution" failed


Running test bugs/handlers/advice on handler join points should not throw unpermitted checked exceptions
Commandline: abc -d bugs/handlers bugs/handlers/ExceptionCheckCE.java 
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 3
Actual errors found: 
Warning at ExceptionCheckCE.java:8,17-35: expected warning
Semantic Error at ExceptionCheckCE.java:8,17-35: Advice from aspect A applies here, and throws exception java.lang.Exception which is not already thrown here
FAIL: Test "bugs/handlers/advice on handler join points should not throw unpermitted checked exceptions" failed


Running test harness/-nowarn suppresses XLint warnings
Commandline: abc -d harness -nowarn harness/XLintWarningTest.java 
*** Option -nowarn ignored: warnings not disabled.
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming XLintWarningTest... 
Abc finished on Fri Jul 30 10:08:35 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 157 millisec.)
------------------------------------------------
[ 33.758% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.637% ] Create polyglot compiler:  1
[ 14.013% ] Polyglot phases:  22
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.274% ] Retrieving bodies:  2
[ 29.299% ] Update pattern matcher:  46
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.637% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.637% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.376% ] Soot Packs:  21
[ 06.369% ] Soot Writing Output:  10
================================================
PASS: harness: Test "-nowarn suppresses XLint warnings" passed.


Running test harness/warn:none suppresses XLint warnings
Commandline: abc -d harness -warn:none harness/XLintWarningTest.java 
*** Option -warn:none ignored:  warning flags not implemented yet.
Abc started on Fri Jul 30 10:08:35 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming XLintWarningTest... 
Abc finished on Fri Jul 30 10:08:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 126 millisec.)
------------------------------------------------
[ 43.651% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.460% ] Polyglot phases:  22
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.794% ] Intertype Adjuster:  1
[ 01.587% ] Retrieving bodies:  2
[ 10.317% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.794% ] Compute advice lists:  1
[ 00.000% ] Intertype weave:  0
[ 00.794% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.667% ] Soot Packs:  21
[ 07.937% ] Soot Writing Output:  10
================================================
PASS: harness: Test "warn:none suppresses XLint warnings" passed.


Running test bugs/accessMethods/can not resolve this member warning
Commandline: abc -d bugs/accessMethods bugs/accessMethods/p1/Base.java bugs/accessMethods/p2/Derived.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming p2.Derived... 
Transforming p2.Derived$A... 
Transforming p2.Derived$Inner... 
Transforming p1.Base... 
Abc finished on Fri Jul 30 10:08:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 254 millisec.)
------------------------------------------------
[ 21.654% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 19.291% ] Polyglot phases:  49
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.394% ] Intertype Adjuster:  1
[ 03.150% ] Retrieving bodies:  8
[ 17.717% ] Update pattern matcher:  45
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.969% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.394% ] Add aspect code:  1
[ 00.787% ] Weaving advice:  2
[ 00.394% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.291% ] Soot Packs:  49
[ 14.961% ] Soot Writing Output:  38
================================================
InvocationTargetException while trying to run compiled class: java.lang.IllegalAccessError: tried to access method p1.Base.getName()Ljava/lang/String; from class p2.Derived$Inner
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.IllegalAccessError: tried to access method p1.Base.getName()Ljava/lang/String; from class p2.Derived$Inner
	at p2.Derived$Inner.getFullName(Derived.java:12)
	at p2.Derived.main(Derived.java:7)
	... 7 more
FAIL: Test "bugs/accessMethods/can not resolve this member warning" failed


Running test bugs/try switch VerifyError, InconsistentStackHeight
Commandline: abc -d bugs bugs/TrySwitch.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TrySwitch... 
Abc finished on Fri Jul 30 10:08:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 137 millisec.)
------------------------------------------------
[ 39.416% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.730% ] Create polyglot compiler:  1
[ 20.438% ] Polyglot phases:  28
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 08.759% ] Retrieving bodies:  12
[ 10.949% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.460% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.000% ] Weaving advice:  0
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.219% ] Soot Packs:  14
[ 08.029% ] Soot Writing Output:  11
================================================
caught: java.lang.RuntimeException
PASS: bugs: Test "try switch VerifyError, InconsistentStackHeight" passed.


Running test bugs/Compiler crash in ajc 1.1 - terrible error for inaccessible constructor
Commandline: abc -d bugs bugs/NewVoid.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 2, should be 6
Actual errors found: 
Semantic Error at bugs/NewVoid.java:20,3-6: Could not find type "Xyz".
Semantic Error at bugs/NewVoid.java:28,2-5: Could not find type "Xyz".
FAIL: Test "bugs/Compiler crash in ajc 1.1 - terrible error for inaccessible constructor" failed


Running test bugs/Missing import crashes compiler
Commandline: abc -d bugs bugs/MissingImport.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Missing import crashes compiler" passed.


Running test bugs/NPE in bcel.LazyMethodGen when delegating from one ctor to a second that includes a switch
Commandline: abc -d bugs bugs/NewSwitch.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming FFDC... 
Transforming NewSwitch... 
Abc finished on Fri Jul 30 10:08:36 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 263 millisec.)
------------------------------------------------
[ 20.913% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.319% ] Polyglot phases:  85
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.521% ] Retrieving bodies:  4
[ 05.323% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.141% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.380% ] Add aspect code:  1
[ 01.141% ] Weaving advice:  3
[ 00.380% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 28.897% ] Soot Packs:  76
[ 07.985% ] Soot Writing Output:  21
================================================
PASS: bugs: Test "NPE in bcel.LazyMethodGen when delegating from one ctor to a second that includes a switch" passed.


Running test bugs/switch statement in aspects crashes weaving
Commandline: abc -d bugs bugs/SwitchInAround.java 
Abc started on Fri Jul 30 10:08:36 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming SwitchInAround... 
Transforming Abc$access$A$around$2619... 
Abc finished on Fri Jul 30 10:08:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 261 millisec.)
------------------------------------------------
[ 20.690% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.383% ] Create polyglot compiler:  1
[ 36.782% ] Polyglot phases:  96
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.916% ] Retrieving bodies:  5
[ 09.195% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.533% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.533% ] Weaving advice:  4
[ 00.383% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 17.625% ] Soot Packs:  46
[ 09.962% ] Soot Writing Output:  26
================================================
PASS: bugs: Test "switch statement in aspects crashes weaving" passed.


Running test bugs/ajc stack trace on declaring hashcode() method in aspect
Commandline: abc -d bugs bugs/OverridingInterfaceObjectMethod.java 
Abc started on Fri Jul 30 10:08:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Base... 
Transforming OverridingInterfaceObjectMethod... 
Transforming Id... 
Transforming Identifiable... 
Transforming C... 
Transforming IdentifiableAspect... 
Abc finished on Fri Jul 30 10:08:37 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 476 millisec.)
------------------------------------------------
[ 11.555% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.210% ] Create polyglot compiler:  1
[ 22.059% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.420% ] Intertype Adjuster:  2
[ 01.891% ] Retrieving bodies:  9
[ 05.252% ] Update pattern matcher:  25
[ 00.210% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.050% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.210% ] Weaving advice:  1
[ 00.210% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 36.765% ] Soot Packs:  175
[ 20.168% ] Soot Writing Output:  96
================================================
PASS: bugs: Test "ajc stack trace on declaring hashcode() method in aspect" passed.


Running test bugs/using super in method introduced on interface with multiple supertypes
Commandline: abc -d bugs bugs/MultipleSuperCf.java 
Abc started on Fri Jul 30 10:08:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "using super in method introduced on interface with multiple supertypes" passed.


Running test bugs/cflowAndJar/Compiler crashes in jar and cflow (with no .jar)
Commandline: abc -d bugs/cflowAndJar bugs/cflowAndJar/TestAspect.aj bugs/cflowAndJar/Test.java bugs/cflowAndJar/AbstractAspect.aj 
Abc started on Fri Jul 30 10:08:37 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Test... 
Transforming TestAspect... 
Transforming AbstractAspect... 
Abc finished on Fri Jul 30 10:08:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 379 millisec.)
------------------------------------------------
[ 13.984% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 32.982% ] Polyglot phases:  125
[ 00.264% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.847% ] Retrieving bodies:  7
[ 26.913% ] Update pattern matcher:  102
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.319% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 03.166% ] Weaving advice:  12
[ 00.264% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.873% ] Soot Packs:  45
[ 07.388% ] Soot Writing Output:  28
================================================
Compilation failed with 1 errors, which were matched and verified against the expected errors.
hello.
hello.
PASS: bugs/cflowAndJar: Test "Compiler crashes in jar and cflow (with no .jar)" passed.


Running test bugs/Default method impl for interface causes internal exception.
Commandline: abc -d bugs bugs/CloneMethod.java 
Abc started on Fri Jul 30 10:08:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AspectA... 
Transforming CloneMethod... 
Transforming AspectA$I... 
Transforming MyString... 
Abc finished on Fri Jul 30 10:08:38 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 296 millisec.)
------------------------------------------------
[ 18.243% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 17.905% ] Polyglot phases:  53
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.338% ] Intertype Adjuster:  1
[ 05.743% ] Retrieving bodies:  17
[ 05.068% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.689% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.338% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 37.500% ] Soot Packs:  111
[ 13.176% ] Soot Writing Output:  39
================================================
... done.
PASS: bugs: Test "Default method impl for interface causes internal exception." passed.


Running test bugs/Class Literals as non final fields (also assert, and this$0)
Commandline: abc -d bugs -source 1.4 bugs/ClassLiteralField.java 
Abc started on Fri Jul 30 10:08:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Unexpected exception while compiling: polyglot.util.InternalCompilerError: Exception while processing <ClassLiteralField: void main(java.lang.String[])>
polyglot.util.InternalCompilerError: Exception while processing <ClassLiteralField: void main(java.lang.String[])>
	at abc.main.Main.weave(Main.java:622)
	at abc.main.Main.run(Main.java:430)
	at abc.testing.TestCase.runTest(TestCase.java:263)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: java.lang.RuntimeException: 
Aborting: can't find classfile java.lang.AssertionError
	at soot.Scene.getSootClass(Scene.java:335)
	at soot.javaToJimple.JimpleBodyBuilder.createAssert(JimpleBodyBuilder.java:1161)
	at soot.javaToJimple.JimpleBodyBuilder.createStmt(JimpleBodyBuilder.java:547)
	at soot.javaToJimple.JimpleBodyBuilder.createBlock(JimpleBodyBuilder.java:302)
	at soot.javaToJimple.JimpleBodyBuilder.createJimpleBody(JimpleBodyBuilder.java:103)
	at soot.javaToJimple.PolyglotMethodSource.getBody(PolyglotMethodSource.java:35)
	at soot.SootMethod.getBodyFromMethodSource(SootMethod.java:79)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:302)
	at abc.main.Main.weave(Main.java:618)
	... 4 more
FAIL: Test "bugs/Class Literals as non final fields (also assert, and this$0)" failed


Running test errors/compile error expected for abstract pointcut outside abstract aspect
Commandline: abc -d errors errors/AbstractPointcutCE.java 
Abc started on Fri Jul 30 10:08:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: errors: Test "compile error expected for abstract pointcut outside abstract aspect" passed.


Running test bugs/subtype-qualified pointcut reference
Commandline: abc -d bugs bugs/PointcutLibraryTest.java 
Abc started on Fri Jul 30 10:08:38 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PointcutLibraryTest... 
Transforming CPL... 
Transforming PrivatePointcutLibrary... 
Transforming PointcutLibrary... 
Transforming Test... 
Transforming ExternalClientOfCPL... 
Transforming CPL$A... 
Abc finished on Fri Jul 30 10:08:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 474 millisec.)
------------------------------------------------
[ 11.814% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 16.456% ] Polyglot phases:  78
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.211% ] Intertype Adjuster:  1
[ 02.110% ] Retrieving bodies:  10
[ 03.376% ] Update pattern matcher:  16
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.899% ] Compute advice lists:  9
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 09.916% ] Weaving advice:  47
[ 00.211% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 27.004% ] Soot Packs:  128
[ 27.004% ] Soot Writing Output:  128
================================================
Test.prun()
PASS: bugs: Test "subtype-qualified pointcut reference" passed.


Running test bugs/weaver trace on mis-qualified pointcut reference
Commandline: abc -d bugs bugs/SuperPointcutCE.java 
Abc started on Fri Jul 30 10:08:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "weaver trace on mis-qualified pointcut reference" passed.


Running test bugs/compile error expected for interface pointcuts
Commandline: abc -d bugs bugs/AbstractPointcutCE.java 
Abc started on Fri Jul 30 10:08:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 4 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "compile error expected for interface pointcuts" passed.


Running test bugs/interface call signatures when declaring method in aspect
Commandline: abc -d bugs bugs/DeclareWarningAndInterfaceMethodCW.java 
Abc started on Fri Jul 30 10:08:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming DeclareWarningAndInterfaceMethodCW... 
Transforming ICanGetSomething... 
Transforming A... 
Transforming B... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 242 millisec.)
------------------------------------------------
[ 22.727% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.413% ] Create polyglot compiler:  1
[ 11.983% ] Polyglot phases:  29
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 06.612% ] Retrieving bodies:  16
[ 06.198% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 21.901% ] Compute advice lists:  53
[ 00.000% ] Intertype weave:  0
[ 00.413% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.413% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 16.529% ] Soot Packs:  40
[ 12.810% ] Soot Writing Output:  31
================================================
Compilation failed with 10 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "interface call signatures when declaring method in aspect" passed.


Running test new/interfaceLibrary/aspect-declared interface members in libraries - baseline
Commandline: abc -d new/interfaceLibrary new/interfaceLibrary/lib/LibraryInterface.java new/interfaceLibrary/Client.java new/interfaceLibrary/LibraryAspect.java 
Abc started on Fri Jul 30 10:08:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Client... 
Transforming C... 
Transforming lib.LibraryInterface... 
Transforming LibraryAspect... 
Abc finished on Fri Jul 30 10:08:39 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 192 millisec.)
------------------------------------------------
[ 28.125% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 28.646% ] Polyglot phases:  55
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.521% ] Intertype Adjuster:  1
[ 02.604% ] Retrieving bodies:  5
[ 06.771% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.562% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.521% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.750% ] Soot Packs:  36
[ 12.500% ] Soot Writing Output:  24
================================================
LibraryAspect-defined run() for C@13910f2
PASS: new/interfaceLibrary: Test "aspect-declared interface members in libraries - baseline" passed.


Running test new/interfaceLibrary/aspect-declared interface members in libraries - aspectedInterfaceOnly.jar
Commandline: abc -cp new/interfaceLibrary/aspectedInterfaceOnly.jar -d new/interfaceLibrary new/interfaceLibrary/Client.java 
Abc started on Fri Jul 30 10:08:39 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: new/interfaceLibrary: Test "aspect-declared interface members in libraries - aspectedInterfaceOnly.jar" passed.


Running test new/interfaceLibrary/aspect-declared interface members in libraries - aspectedInterfaceOnly.jar,aspectOnly.jar
Commandline: abc -cp new/interfaceLibrary/aspectedInterfaceOnly.jar:new/interfaceLibrary/aspectOnly.jar -d new/interfaceLibrary new/interfaceLibrary/Client.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 9, but is on line 14.
Errors found during this compilation:
Semantic Error at new/interfaceLibrary/Client.java:9,0-42: C should be declared abstract; it does not define run(), which is declared in lib.LibraryInterface
FAIL: Test "new/interfaceLibrary/aspect-declared interface members in libraries - aspectedInterfaceOnly.jar,aspectOnly.jar" failed


Running test new/interfaceLibrary/aspect-declared interface members in libraries - aspectedInterfaceOnlyBinary.jar,aspectOnly.jar
Commandline: abc -cp new/interfaceLibrary/aspectedInterfaceOnlyBinary.jar:new/interfaceLibrary/aspectOnly.jar -d new/interfaceLibrary new/interfaceLibrary/Client.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Found an unexpected error - should be on line 9, but is on line 14.
Errors found during this compilation:
Semantic Error at new/interfaceLibrary/Client.java:9,0-42: C should be declared abstract; it does not define run(), which is declared in lib.LibraryInterface
FAIL: Test "new/interfaceLibrary/aspect-declared interface members in libraries - aspectedInterfaceOnlyBinary.jar,aspectOnly.jar" failed


Running test bugs/interfaceLibrary/exception clause for aspect-declared interface methods - positive
Commandline: abc -d bugs/interfaceLibrary bugs/interfaceLibrary/Client.java bugs/interfaceLibrary/LibraryAspect.java bugs/interfaceLibrary/lib/LibraryInterface.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Client... 
Transforming C... 
Transforming lib.LibraryInterface... 
Transforming LibraryAspect... 
Abc finished on Fri Jul 30 10:08:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 230 millisec.)
------------------------------------------------
[ 23.478% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.435% ] Create polyglot compiler:  1
[ 24.783% ] Polyglot phases:  57
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.435% ] Intertype Adjuster:  1
[ 05.217% ] Retrieving bodies:  12
[ 17.826% ] Update pattern matcher:  41
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.304% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.435% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.435% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.913% ] Soot Packs:  32
[ 11.739% ] Soot Writing Output:  27
================================================
PASS: bugs/interfaceLibrary: Test "exception clause for aspect-declared interface methods - positive" passed.


Running test bugs/interfaceLibrary/exception clause for aspect-declared interface methods - negative
Commandline: abc -d bugs/interfaceLibrary bugs/interfaceLibrary/ClientCE.java bugs/interfaceLibrary/LibraryAspect.java bugs/interfaceLibrary/lib/LibraryInterface.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/interfaceLibrary: Test "exception clause for aspect-declared interface methods - negative" passed.


Running test bugs/interfaceLibrary/exception clause for aspect-declared class methods - positive
Commandline: abc -d bugs/interfaceLibrary bugs/interfaceLibrary/ClassClient.java bugs/interfaceLibrary/LibraryClassAspect.java bugs/interfaceLibrary/lib/LibraryClass.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming LibraryClassAspect... 
Transforming lib.LibraryClass... 
Transforming ClassClient... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:40 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 225 millisec.)
------------------------------------------------
[ 24.444% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 23.111% ] Polyglot phases:  52
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 11.111% ] Intertype Adjuster:  25
[ 05.778% ] Retrieving bodies:  13
[ 06.222% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.778% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.444% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 15.111% ] Soot Packs:  34
[ 12.000% ] Soot Writing Output:  27
================================================
PASS: bugs/interfaceLibrary: Test "exception clause for aspect-declared class methods - positive" passed.


Running test bugs/interfaceLibrary/exception clause for aspect-declared class methods - negative
Commandline: abc -d bugs/interfaceLibrary bugs/interfaceLibrary/ClassClientCE.java bugs/interfaceLibrary/LibraryClassAspect.java bugs/interfaceLibrary/lib/LibraryClass.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/interfaceLibrary: Test "exception clause for aspect-declared class methods - negative" passed.


Running test bugs/reflective check of declared exceptions from aspect-declared methods
Commandline: abc -d bugs bugs/DeclaredExceptions.java 
Abc started on Fri Jul 30 10:08:40 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming DeclaredExceptions... 
Transforming C... 
Transforming A... 
Abc finished on Fri Jul 30 10:08:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 383 millisec.)
------------------------------------------------
[ 14.621% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 52.742% ] Polyglot phases:  202
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.261% ] Intertype Adjuster:  1
[ 02.089% ] Retrieving bodies:  8
[ 07.050% ] Update pattern matcher:  27
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.872% ] Compute advice lists:  11
[ 00.000% ] Intertype weave:  0
[ 00.261% ] Add aspect code:  1
[ 00.000% ] Weaving advice:  0
[ 00.261% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 11.227% ] Soot Packs:  43
[ 08.616% ] Soot Writing Output:  33
================================================
PASS: bugs: Test "reflective check of declared exceptions from aspect-declared methods" passed.


Running test bugs/moreInterfaceLibrary/Weaving failure when using injars (no jars)
Commandline: abc -d bugs/moreInterfaceLibrary bugs/moreInterfaceLibrary/lib/ExecutionMonitor.aj bugs/moreInterfaceLibrary/model/BusObj.java bugs/moreInterfaceLibrary/model/MonitorBusObj.java 
Abc started on Fri Jul 30 10:08:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming model.MonitorBusObj... 
Transforming model.BusObj... 
Transforming lib.ExecutionMonitor... 
Transforming lib.ExecutionMonitor$MonitoredItem... 
Abc finished on Fri Jul 30 10:08:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 225 millisec.)
------------------------------------------------
[ 42.222% ] Init. of Soot:  95
[ 00.000% ] Loading Jars:  0
[ 00.444% ] Create polyglot compiler:  1
[ 17.333% ] Polyglot phases:  39
[ 00.444% ] Resolve class names:  1
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.778% ] Retrieving bodies:  4
[ 05.333% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.889% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.444% ] Add aspect code:  1
[ 00.444% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 18.222% ] Soot Packs:  41
[ 12.444% ] Soot Writing Output:  28
================================================
PASS: bugs/moreInterfaceLibrary: Test "Weaving failure when using injars (no jars)" passed.


Running test bugs/perCflowAndJar/percflow aspects compiled from jars share one instance for all entry points
Commandline: abc -d bugs/perCflowAndJar bugs/perCflowAndJar/PerCFlowCompileFromJar.java bugs/perCflowAndJar/PerCFlowCompileFromJarTest.java 
Abc started on Fri Jul 30 10:08:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming PerCFlowTestHelper... 
Transforming PerCFlowCompileFromJar... 
Transforming PerCFlowCompileFromJarTest... 
Transforming MyTestPerCFlowEntryPoint... 
Abc finished on Fri Jul 30 10:08:41 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 281 millisec.)
------------------------------------------------
[ 19.217% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.356% ] Create polyglot compiler:  1
[ 10.320% ] Polyglot phases:  29
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.356% ] Intertype Adjuster:  1
[ 04.982% ] Retrieving bodies:  14
[ 04.982% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.779% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 27.046% ] Add aspect code:  76
[ 01.423% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.082% ] Soot Packs:  48
[ 12.456% ] Soot Writing Output:  35
================================================
PASS: bugs/perCflowAndJar: Test "percflow aspects compiled from jars share one instance for all entry points" passed.


Running test bugs/throwsSignature/throw derivative pointcuts not advised
Commandline: abc -d bugs/throwsSignature bugs/throwsSignature/ExceptionBugTest.java bugs/throwsSignature/ExceptionAspect.java 
Abc started on Fri Jul 30 10:08:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: bugs/throwsSignature: Test "throw derivative pointcuts not advised" passed.


Running test bugs/perthis and signature bad interaction
Commandline: abc -d bugs bugs/InterPerCall.java 
Abc started on Fri Jul 30 10:08:41 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming InterPerCall... 
Transforming A... 
Transforming C... 
Transforming A$abc$PerThis... 
Abc finished on Fri Jul 30 10:08:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 240 millisec.)
------------------------------------------------
[ 22.917% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.417% ] Create polyglot compiler:  1
[ 29.583% ] Polyglot phases:  71
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.083% ] Retrieving bodies:  5
[ 05.833% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.250% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.417% ] Add aspect code:  1
[ 00.417% ] Weaving advice:  1
[ 00.417% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 22.917% ] Soot Packs:  55
[ 13.750% ] Soot Writing Output:  33
================================================
PASS: bugs: Test "perthis and signature bad interaction" passed.


Running test bugs/declareBinding/declare error fails on pointcuts composed from multiple classes
Commandline: abc -d bugs/declareBinding bugs/declareBinding/SampleExceptionHandling1.java 
Abc started on Fri Jul 30 10:08:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/declareBinding: Test "declare error fails on pointcuts composed from multiple classes" passed.


Running test bugs/declareSoftWithin/declare error fails on pointcuts composed from multiple classes
Commandline: abc -d bugs/declareSoftWithin bugs/declareSoftWithin/aspects/Softener.aj bugs/declareSoftWithin/test/NoSoftener.java 
Abc started on Fri Jul 30 10:08:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming test.NoSoftener... 
Transforming aspects.Softener... 
Transforming aspects.SoftLib... 
Abc finished on Fri Jul 30 10:08:42 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 367 millisec.)
------------------------------------------------
[ 23.161% ] Init. of Soot:  85
[ 00.000% ] Loading Jars:  0
[ 00.272% ] Create polyglot compiler:  1
[ 38.692% ] Polyglot phases:  142
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.815% ] Retrieving bodies:  14
[ 08.174% ] Update pattern matcher:  30
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.090% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.272% ] Add aspect code:  1
[ 00.272% ] Weaving advice:  1
[ 00.272% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 13.351% ] Soot Packs:  49
[ 10.627% ] Soot Writing Output:  39
================================================
PASS: bugs/declareSoftWithin: Test "declare error fails on pointcuts composed from multiple classes" passed.


Running test bugs/Interaction between pointcut binding and declare parents
Commandline: abc -d bugs bugs/ParentsAndPointcuts.java 
Abc started on Fri Jul 30 10:08:42 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Key... 
Transforming ContainerLoader... 
Transforming ContainerDescriptor... 
Transforming AbstractCaching... 
Transforming ParentsAndPointcuts... 
Transforming AspectBug... 
Transforming AbstractCaching$Key... 
Transforming ActiveContainer... 
Transforming AspectBug$abc$PerThis... 
Abc finished on Fri Jul 30 10:08:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 458 millisec.)
------------------------------------------------
[ 22.052% ] Init. of Soot:  101
[ 00.000% ] Loading Jars:  0
[ 00.218% ] Create polyglot compiler:  1
[ 24.017% ] Polyglot phases:  110
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.528% ] Retrieving bodies:  7
[ 05.240% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.873% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.218% ] Add aspect code:  1
[ 00.437% ] Weaving advice:  2
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 17.904% ] Soot Packs:  82
[ 27.511% ] Soot Writing Output:  126
================================================
PASS: bugs: Test "Interaction between pointcut binding and declare parents" passed.


Running test bugs/Non-functional concretezation of ReferencePointcut
Commandline: abc -d bugs bugs/AdviceInteraction.java 
Abc started on Fri Jul 30 10:08:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming AdviceInteraction... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 166 millisec.)
------------------------------------------------
[ 31.928% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.602% ] Create polyglot compiler:  1
[ 13.253% ] Polyglot phases:  22
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.012% ] Retrieving bodies:  5
[ 07.831% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 03.012% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.602% ] Add aspect code:  1
[ 00.602% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 25.904% ] Soot Packs:  43
[ 13.253% ] Soot Writing Output:  22
================================================
PASS: bugs: Test "Non-functional concretezation of ReferencePointcut" passed.


Running test bugs/concretizeNpe/NPE in concretization error path
Commandline: abc -d bugs/concretizeNpe bugs/concretizeNpe/base/ExceptionHandling.java bugs/concretizeNpe/model/ModelExceptionHandling.java 
Abc started on Fri Jul 30 10:08:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 1
Actual errors found: 
Syntax Error at null: Couldn't repair and continue parse
Syntax Error at null: Unable to recover from previous errors.
Syntax Error at null: Couldn't repair and continue parse
Syntax Error at bugs/concretizeNpe/model/ModelExceptionHandling.java:13,0-1: Syntax error.
FAIL: Test "bugs/concretizeNpe/NPE in concretization error path" failed


Running test bugs/jpOptimization/JoinPoint Optimization when targetting 1.4
Commandline: abc -d bugs/jpOptimization -1.4 bugs/jpOptimization/de/test/MyMain.java bugs/jpOptimization/de/test/MyAspect.java 
*** Option -1.4 ignored: abc should be able to handle both 1.3 and 1.4.
Abc started on Fri Jul 30 10:08:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming de.test.MyMain... 
Transforming de.test.MyAspect... 
Abc finished on Fri Jul 30 10:08:43 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 245 millisec.)
------------------------------------------------
[ 39.184% ] Init. of Soot:  96
[ 00.408% ] Loading Jars:  1
[ 00.000% ] Create polyglot compiler:  0
[ 18.367% ] Polyglot phases:  45
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.041% ] Retrieving bodies:  5
[ 06.122% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.224% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 10.204% ] Weaving advice:  25
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 13.878% ] Soot Packs:  34
[ 08.571% ] Soot Writing Output:  21
================================================
before: void de.test.MyMain.sayHello()
hello
PASS: bugs/jpOptimization: Test "JoinPoint Optimization when targetting 1.4" passed.


Running test bugs/privilege/packageProtected/priviledged aspects calling methods from advice
Commandline: abc -d bugs/privilege/packageProtected bugs/privilege/packageProtected/concern/ContextUser.java bugs/privilege/packageProtected/concern/BaseTarget.java bugs/privilege/packageProtected/core/Base.java 
Abc started on Fri Jul 30 10:08:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 28, should be 0
Actual errors found: 
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:12,14-30: Cannot access private_int in packageProtected.core.Base from packageProtected.concern.ContextUser.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:16,6-27: No valid method call found for private_method() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:17,6-27: No valid method call found for default_method() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:18,6-29: No valid method call found for protected_method() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:21,6-31: No valid method call found for private_method(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:22,6-31: No valid method call found for default_method(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:23,6-33: No valid method call found for protected_method(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:26,6-37: No valid method call found for private_method(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:27,6-37: No valid method call found for default_method(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:28,6-39: No valid method call found for protected_method(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:32,10-32: Cannot access private_staticInt in packageProtected.core.Base from packageProtected.concern.ContextUser.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:36,6-33: No valid method call found for private_staticMethod() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:37,6-33: No valid method call found for default_staticMethod() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:38,6-35: No valid method call found for protected_staticMethod() in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:41,6-37: No valid method call found for private_staticMethod(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:42,6-37: No valid method call found for default_staticMethod(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:43,6-39: No valid method call found for protected_staticMethod(type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:46,6-43: No valid method call found for private_staticMethod(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:47,6-43: No valid method call found for default_staticMethod(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:48,6-45: No valid method call found for protected_staticMethod(type(null), type(null)) in packageProtected.core.Base.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:57,14-30: Cannot access private_int in packageProtected.concern.BaseTarget from packageProtected.concern.ContextUser.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:61,6-27: No valid method call found for private_method() in packageProtected.concern.BaseTarget.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:66,6-31: No valid method call found for private_method(type(null)) in packageProtected.concern.BaseTarget.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:71,6-37: No valid method call found for private_method(type(null), type(null)) in packageProtected.concern.BaseTarget.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:76,10-38: Cannot access private_staticInt in packageProtected.concern.BaseTarget from packageProtected.concern.ContextUser.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:80,6-39: No valid method call found for private_staticMethod() in packageProtected.concern.BaseTarget.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:85,6-43: No valid method call found for private_staticMethod(type(null)) in packageProtected.concern.BaseTarget.
Semantic Error at bugs/privilege/packageProtected/concern/ContextUser.java:90,6-49: No valid method call found for private_staticMethod(type(null), type(null)) in packageProtected.concern.BaseTarget.
FAIL: Test "bugs/privilege/packageProtected/priviledged aspects calling methods from advice" failed


Running test bugs/No error on overloaded pointcuts in class
Commandline: abc -d bugs bugs/OverloadedPointcutsInClass.java 
Abc started on Fri Jul 30 10:08:43 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "No error on overloaded pointcuts in class" passed.


Running test bugs/No error on overloaded pointcuts unless binding variables
Commandline: abc -d bugs bugs/OverloadedPointcutsInAspect.java 
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 5 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "No error on overloaded pointcuts unless binding variables" passed.


Running test bugs/alias getCause for getWrappedThrowable in SoftException
Commandline: abc -d bugs -Xlint:warning bugs/GetCauseOnSoftException.java 
*** Option -Xlint:warning ignored: abc does not yet support Xlint
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming MyException... 
Transforming Softner... 
Transforming GetCauseOnSoftException... 
Abc finished on Fri Jul 30 10:08:44 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 319 millisec.)
------------------------------------------------
[ 17.241% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 26.959% ] Polyglot phases:  86
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.389% ] Retrieving bodies:  14
[ 16.928% ] Update pattern matcher:  54
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.254% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.940% ] Weaving advice:  3
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 21.317% ] Soot Packs:  68
[ 10.972% ] Soot Writing Output:  35
================================================
MyException: secret
PASS: bugs: Test "alias getCause for getWrappedThrowable in SoftException" passed.


Running test bugs/Declare soft softening other exception types
Commandline: abc -d bugs bugs/SofteningTooMuch.java 
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Declare soft softening other exception types" passed.


Running test bugs/static method introduction on interfaces, should not be allowed
Commandline: abc -d bugs bugs/StaticInterfaceMethods.java 
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "static method introduction on interfaces, should not be allowed" passed.


Running test bugs/External pointcut refs not resolved if named pointcut used by declare
Commandline: abc -d bugs bugs/DeclareErrorNamedPointcutCE.java 
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "External pointcut refs not resolved if named pointcut used by declare" passed.


Running test bugs/XLint warning for call PCD's using subtype of defining type (-1.3 -Xlint:ignore)
Commandline: abc -d bugs -Xlint:ignore -1.3 bugs/DeclaringTypeWarning.java 
*** Option -Xlint:ignore ignored: abc does not yet support Xlint
*** Option -1.3 ignored: abc should be able to handle both 1.3 and 1.4.
Abc started on Fri Jul 30 10:08:44 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming C... 
Transforming A... 
Transforming DeclaringTypeWarning... 
Transforming B... 
Abc finished on Fri Jul 30 10:08:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 226 millisec.)
------------------------------------------------
[ 24.779% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 11.062% ] Polyglot phases:  25
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.097% ] Retrieving bodies:  7
[ 07.080% ] Update pattern matcher:  16
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.327% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.442% ] Add aspect code:  1
[ 00.442% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 38.053% ] Soot Packs:  86
[ 13.717% ] Soot Writing Output:  31
================================================
PASS: bugs: Test "XLint warning for call PCD's using subtype of defining type (-1.3 -Xlint:ignore)" passed.


Running test bugs/Appropriate message for 'after() thowing(Throwable th)' syntax error
Commandline: abc -d bugs bugs/AfterThrowingAdviceSyntaxError.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 3 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Appropriate message for 'after() thowing(Throwable th)' syntax error" passed.


Running test bugs/faultingInSource/Ensure we don't look for source on the classpath when binary not found
Commandline: abc -cp bugs/faultingInSource/. -d bugs/faultingInSource -verbose bugs/faultingInSource/SimpleTracing.java 
Illegal arguments: Unknown option -verbose
FAIL: Test "bugs/faultingInSource/Ensure we don't look for source on the classpath when binary not found" failed


Running test bugs/inner aspect containing declare soft
Commandline: abc -d bugs bugs/TestSoftening.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming TestSoftening... 
Transforming TestSoftening$SofteningTestAspect... 
Abc finished on Fri Jul 30 10:08:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 187 millisec.)
------------------------------------------------
[ 28.877% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 12.299% ] Polyglot phases:  23
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.348% ] Retrieving bodies:  10
[ 08.021% ] Update pattern matcher:  15
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.604% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.535% ] Add aspect code:  1
[ 03.209% ] Weaving advice:  6
[ 00.535% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.299% ] Soot Packs:  23
[ 27.273% ] Soot Writing Output:  51
================================================
PASS: bugs: Test "inner aspect containing declare soft" passed.


Running test bugs/Bad parser error recovery in advice
Commandline: abc -d bugs bugs/ParserRecoveryTest.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Bad parser error recovery in advice" passed.


Running test bugs/Bad parser error recovery in java source
Commandline: abc -d bugs bugs/ParserRecoveryTestPureJava.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 2 errors, which were matched and verified against the expected errors.
PASS: bugs: Test "Bad parser error recovery in java source" passed.


Running test bugs/compiler issues error on inner aspects when privilieged
Commandline: abc -d bugs bugs/PrivilegedParsing.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation produced an unexpected number of errors: 4, should be 0
Actual errors found: 
Semantic Error at bugs/PrivilegedParsing.java:19,3-27:4: Cannot declare a member class with flag(s) privilegedaspect.
Semantic Error at bugs/PrivilegedParsing.java:25,9-23: Cannot access hidden in PrivilegedParsing from Outer.Inner.
Semantic Error at bugs/PrivilegedParsing.java:32,3-40:4: Cannot declare a member class with flag(s) privilegedaspect.
Semantic Error at bugs/PrivilegedParsing.java:38,9-23: Cannot access hidden in PrivilegedParsing from Marker.Inner.
FAIL: Test "bugs/compiler issues error on inner aspects when privilieged" failed


Running test bugs/After throwing advice on ctors doesn't execute for inter-type decl field inits
Commandline: abc -d bugs bugs/AfterThrowingCtor.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Foo1... 
Transforming AfterThrowingCtor... 
Transforming AfterThrowingCtor$AdviceRanException... 
Transforming Foo... 
Abc finished on Fri Jul 30 10:08:45 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 313 millisec.)
------------------------------------------------
[ 25.240% ] Init. of Soot:  79
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 33.546% ] Polyglot phases:  105
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 05.112% ] Retrieving bodies:  16
[ 08.307% ] Update pattern matcher:  26
[ 00.319% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.597% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.319% ] Weaving advice:  1
[ 00.319% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.377% ] Soot Packs:  45
[ 10.863% ] Soot Writing Output:  34
================================================
InvocationTargetException while trying to run compiled class: AfterThrowingCtor$AdviceRanException
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at abc.testing.TestCase.runTest(TestCase.java:360)
	at abc.testing.Main.doCase(Main.java:252)
	at abc.testing.Main.main(Main.java:102)
Caused by: AfterThrowingCtor$AdviceRanException
	at AfterThrowingCtor.afterThrowing$2687(AfterThrowingCtor.java:5)
	at Foo.<init>(AfterThrowingCtor.java:33)
	at AfterThrowingCtor.main(AfterThrowingCtor.java:10)
	... 7 more
FAIL: Test "bugs/After throwing advice on ctors doesn't execute for inter-type decl field inits" failed


Running test bugs/abstractMethods/Introduced abstract method on interface not implemented by subtype (weave altogether)
Commandline: abc -d bugs/abstractMethods bugs/abstractMethods/interface/C.java bugs/abstractMethods/interface/A.java bugs/abstractMethods/interface/B.java 
Abc started on Fri Jul 30 10:08:45 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming B... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 206 millisec.)
------------------------------------------------
[ 49.515% ] Init. of Soot:  102
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 15.049% ] Polyglot phases:  31
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.942% ] Retrieving bodies:  4
[ 05.825% ] Update pattern matcher:  12
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.456% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.485% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 16.019% ] Soot Packs:  33
[ 09.709% ] Soot Writing Output:  20
================================================
PASS: bugs/abstractMethods: Test "Introduced abstract method on interface not implemented by subtype (weave altogether)" passed.


Running test bugs/abstractMethods/Introduced abstract method on interface not implemented by subtype (injars)
Commandline: abc -d bugs/abstractMethods -injars interface/jars/AandB.jar bugs/abstractMethods/interface/C.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/abstractMethods: Test "Introduced abstract method on interface not implemented by subtype (injars)" passed.


Running test bugs/abstractMethods/Introduced abstract method on abstract class not implemented by subtype (single source file)
Commandline: abc -d bugs/abstractMethods bugs/abstractMethods/singlesource/C.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/abstractMethods: Test "Introduced abstract method on abstract class not implemented by subtype (single source file)" passed.


Running test bugs/abstractMethods/Introduced abstract method on abstract class with introduced concrete method (single source file)
Commandline: abc -d bugs/abstractMethods bugs/abstractMethods/singlesource/C1.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming B... 
Transforming A1... 
Transforming C1... 
Abc finished on Fri Jul 30 10:08:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 209 millisec.)
------------------------------------------------
[ 43.541% ] Init. of Soot:  91
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 09.091% ] Polyglot phases:  19
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.478% ] Intertype Adjuster:  1
[ 02.392% ] Retrieving bodies:  5
[ 06.220% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.957% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.478% ] Add aspect code:  1
[ 00.478% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 22.967% ] Soot Packs:  48
[ 13.397% ] Soot Writing Output:  28
================================================
PASS: bugs/abstractMethods: Test "Introduced abstract method on abstract class with introduced concrete method (single source file)" passed.


Running test bugs/abstractMethods/Introduced abstract method on abstract class with existing concrete method (single source file)
Commandline: abc -d bugs/abstractMethods bugs/abstractMethods/singlesource/C2.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming C2... 
Transforming B... 
Transforming A... 
Abc finished on Fri Jul 30 10:08:46 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 146 millisec.)
------------------------------------------------
[ 38.356% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 11.644% ] Polyglot phases:  17
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.740% ] Retrieving bodies:  4
[ 08.904% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.370% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.685% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 22.603% ] Soot Packs:  33
[ 13.699% ] Soot Writing Output:  20
================================================
PASS: bugs/abstractMethods: Test "Introduced abstract method on abstract class with existing concrete method (single source file)" passed.


Running test bugs/interAbstract/aspect declares interface method (no modifiers)
Commandline: abc -d bugs/interAbstract bugs/interAbstract/InterfaceMethodDeclarationNone.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/interAbstract: Test "aspect declares interface method (no modifiers)" passed.


Running test bugs/interAbstract/aspect declares interface method (abstract)
Commandline: abc -d bugs/interAbstract bugs/interAbstract/InterfaceMethodDeclarationAbstract.java 
Abc started on Fri Jul 30 10:08:46 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming A... 
Transforming InterfaceMethodDeclarationAbstract... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 305 millisec.)
------------------------------------------------
[ 17.705% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.328% ] Create polyglot compiler:  1
[ 31.803% ] Polyglot phases:  97
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.967% ] Retrieving bodies:  6
[ 08.197% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.311% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.328% ] Add aspect code:  1
[ 00.328% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 29.180% ] Soot Packs:  89
[ 08.852% ] Soot Writing Output:  27
================================================
PASS: bugs/interAbstract: Test "aspect declares interface method (abstract)" passed.


Running test bugs/interAbstract/aspect declares interface method (public abstract)
Commandline: abc -d bugs/interAbstract bugs/interAbstract/InterfaceMethodDeclarationFull.java 
Abc started on Fri Jul 30 10:08:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming I... 
Transforming InterfaceMethodDeclarationFull... 
Transforming A... 
Transforming C... 
Abc finished on Fri Jul 30 10:08:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 333 millisec.)
------------------------------------------------
[ 16.517% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.129% ] Polyglot phases:  97
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.802% ] Retrieving bodies:  6
[ 07.207% ] Update pattern matcher:  24
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.502% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.300% ] Weaving advice:  1
[ 00.300% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 12.012% ] Soot Packs:  40
[ 31.231% ] Soot Writing Output:  104
================================================
PASS: bugs/interAbstract: Test "aspect declares interface method (public abstract)" passed.


Running test bugs/interfaceDefinition/Use class implementing interface via aspect (weave all together)
Commandline: abc -d bugs/interfaceDefinition bugs/interfaceDefinition/pack/DefineInterface.java bugs/interfaceDefinition/pack/InterfaceDefinition.java bugs/interfaceDefinition/pack/MyInterface.java bugs/interfaceDefinition/Main.java 
Abc started on Fri Jul 30 10:08:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming pack.InterfaceDefinition... 
Transforming pack.InterfaceDefinition$C... 
Transforming pack.MyInterface... 
Transforming Main... 
Transforming pack.DefineInterface... 
Abc finished on Fri Jul 30 10:08:47 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 422 millisec.)
------------------------------------------------
[ 13.033% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.237% ] Create polyglot compiler:  1
[ 35.071% ] Polyglot phases:  148
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.237% ] Intertype Adjuster:  1
[ 01.896% ] Retrieving bodies:  8
[ 05.924% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.185% ] Compute advice lists:  5
[ 00.000% ] Intertype weave:  0
[ 00.711% ] Add aspect code:  3
[ 00.237% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 12.559% ] Soot Packs:  53
[ 28.910% ] Soot Writing Output:  122
================================================
hello
PASS: bugs/interfaceDefinition: Test "Use class implementing interface via aspect (weave all together)" passed.


Running test bugs/Erroneous exception conversion
Commandline: abc -d bugs bugs/ErroneousExceptionConversion.java 
Abc started on Fri Jul 30 10:08:47 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming A... 
Transforming ErroneousExceptionConversion... 
Abc finished on Fri Jul 30 10:08:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 387 millisec.)
------------------------------------------------
[ 14.470% ] Init. of Soot:  56
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 34.625% ] Polyglot phases:  134
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.134% ] Retrieving bodies:  16
[ 06.718% ] Update pattern matcher:  26
[ 00.258% ] Weave Initializers:  1
[ 00.000% ] Load shadow types:  0
[ 01.034% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.258% ] Weaving advice:  1
[ 00.258% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 31.783% ] Soot Packs:  123
[ 06.460% ] Soot Writing Output:  25
================================================
boom in 5...
PASS: bugs: Test "Erroneous exception conversion" passed.


Running test bugs/before():execution(new(..)) does not throw NoAspectBoundException
Commandline: abc -d bugs bugs/ErroneousExceptionConversion1.java 
Abc started on Fri Jul 30 10:08:48 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming ErroneousExceptionConversion1... 
Transforming Watchcall... 
Abc finished on Fri Jul 30 10:08:48 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 286 millisec.)
------------------------------------------------
[ 18.881% ] Init. of Soot:  54
[ 00.000% ] Loading Jars:  0
[ 00.350% ] Create polyglot compiler:  1
[ 47.203% ] Polyglot phases:  135
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 04.196% ] Retrieving bodies:  12
[ 09.091% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.098% ] Compute advice lists:  6
[ 00.000% ] Intertype weave:  0
[ 00.350% ] Add aspect code:  1
[ 00.350% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 10.839% ] Soot Packs:  31
[ 06.643% ] Soot Writing Output:  19
================================================
PASS: bugs: Test "before():execution(new(..)) does not throw NoAspectBoundException" passed.


Running test bugs/Anomalous handling of inter-type declarations to abstract base classes in aspectj 1.1
Commandline: abc -d bugs bugs/AbstractBaseAndInterTypeInterface.java 
Abc started on Fri Jul 30 10:08:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AbstractBaseAndInterTypeInterface... 
Transforming AbstractBaseAndInterTypeInterface$B... 
Transforming AbstractBaseAndInterTypeInterface$Test... 
Transforming AbstractBaseAndInterTypeInterface$Test$ITest... 
Transforming AbstractBaseAndInterTypeInterface$I... 
Transforming AbstractBaseAndInterTypeInterface$A... 
Abc finished on Fri Jul 30 10:08:50 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 200 millisec.)
------------------------------------------------
[ 29.000% ] Init. of Soot:  58
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.500% ] Polyglot phases:  45
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 02.500% ] Retrieving bodies:  5
[ 07.000% ] Update pattern matcher:  14
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.500% ] Compute advice lists:  3
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 00.500% ] Weaving advice:  1
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.000% ] Soot Packs:  40
[ 17.000% ] Soot Writing Output:  34
================================================
PASS: bugs: Test "Anomalous handling of inter-type declarations to abstract base classes in aspectj 1.1" passed.


Running test bugs/caseSensitivity/NPE When compiling intertype declaration
Commandline: abc -d bugs/caseSensitivity bugs/caseSensitivity/uniqueId/Numbered.java bugs/caseSensitivity/uniqueId/Bug.aj 
Abc started on Fri Jul 30 10:08:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Compilation failed with 1 errors, which were matched and verified against the expected errors.
PASS: bugs/caseSensitivity: Test "NPE When compiling intertype declaration" passed.


Running test bugs/declare warning on subtype constructor
Commandline: abc -d bugs bugs/SubtypeConstructorCW.java 
Abc started on Fri Jul 30 10:08:50 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming D... 
Transforming SubtypeConstructorCW... 
Transforming F... 
Transforming A... 
Transforming C... 
Transforming E... 
Abc finished on Fri Jul 30 10:08:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 430 millisec.)
------------------------------------------------
[ 17.209% ] Init. of Soot:  74
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.209% ] Polyglot phases:  117
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.023% ] Retrieving bodies:  13
[ 05.814% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.628% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.233% ] Add aspect code:  1
[ 05.814% ] Weaving advice:  25
[ 00.233% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.884% ] Soot Packs:  64
[ 23.953% ] Soot Writing Output:  103
================================================
Compilation failed with 2 errors, which were matched and verified against the expected errors.
    "before execution(C())",
    "before execution(F(int))",
PASS: bugs: Test "declare warning on subtype constructor" passed.


Running test bugs/CatchClauseSignature has broken operation
Commandline: abc -d bugs bugs/HandlerSig.java 
Abc started on Fri Jul 30 10:08:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line $r2 := @caughtexception
Transforming AppMonitor... 
Transforming HandlerSig... 
Transforming BusinessException... 
Abc finished on Fri Jul 30 10:08:51 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 444 millisec.)
------------------------------------------------
[ 11.937% ] Init. of Soot:  53
[ 00.000% ] Loading Jars:  0
[ 00.225% ] Create polyglot compiler:  1
[ 34.459% ] Polyglot phases:  153
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.378% ] Retrieving bodies:  15
[ 06.306% ] Update pattern matcher:  28
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.901% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.225% ] Add aspect code:  1
[ 05.180% ] Weaving advice:  23
[ 00.225% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 29.279% ] Soot Packs:  130
[ 07.883% ] Soot Writing Output:  35
================================================
PASS: bugs: Test "CatchClauseSignature has broken operation" passed.


Running test new/after returning with parameter: matching rules
Commandline: abc -d new new/AfterReturningParamMatching.java 
Abc started on Fri Jul 30 10:08:51 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming AfterReturningParamMatching... 
Transforming A... 
Abc finished on Fri Jul 30 10:08:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 535 millisec.)
------------------------------------------------
[ 10.280% ] Init. of Soot:  55
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 27.477% ] Polyglot phases:  147
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 03.551% ] Retrieving bodies:  19
[ 19.439% ] Update pattern matcher:  104
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 07.103% ] Compute advice lists:  38
[ 00.000% ] Intertype weave:  0
[ 00.000% ] Add aspect code:  0
[ 01.495% ] Weaving advice:  8
[ 00.187% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 19.065% ] Soot Packs:  102
[ 11.402% ] Soot Writing Output:  61
================================================
PASS: new: Test "after returning with parameter: matching rules" passed.


Running test bugs/protectedvf/mail list VerifyError with protected access
Commandline: abc -d bugs/protectedvf bugs/protectedvf/main/Driver.java bugs/protectedvf/main/p2/AbstractTest.aj bugs/protectedvf/main/p1/ConcreteTest.aj 
Abc started on Fri Jul 30 10:08:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming main.Driver... 
Transforming main.p2.AbstractTest... 
Transforming main.p1.ConcreteTest... 
Transforming Abc$access$main_d_p1_d_ConcreteTest$around$2744... 
Transforming Abc$access$main_d_p2_d_AbstractTest$around$2745... 
Abc finished on Fri Jul 30 10:08:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 319 millisec.)
------------------------------------------------
[ 29.781% ] Init. of Soot:  95
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 22.884% ] Polyglot phases:  73
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.313% ] Intertype Adjuster:  1
[ 03.762% ] Retrieving bodies:  12
[ 04.075% ] Update pattern matcher:  13
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 02.194% ] Compute advice lists:  7
[ 00.000% ] Intertype weave:  0
[ 00.313% ] Add aspect code:  1
[ 01.254% ] Weaving advice:  4
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 20.690% ] Soot Packs:  66
[ 14.734% ] Soot Writing Output:  47
================================================
The value of the field is 1
test: test-1, test-1, test-1
The value of the field when replacing is 1
PASS: bugs/protectedvf: Test "mail list VerifyError with protected access" passed.


Running test abctests/design/reflection/thisJoinPoint etc inside if pointcut
Commandline: abc -d abctests/design/reflection abctests/design/reflection/InsideIf.java 
Abc started on Fri Jul 30 10:08:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Getting position for a untagged source line return
Getting position for a untagged source line return
Transforming InsideIfAspect... 
Transforming InsideIf... 
Abc finished on Fri Jul 30 10:08:52 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 354 millisec.)
------------------------------------------------
[ 26.271% ] Init. of Soot:  93
[ 00.000% ] Loading Jars:  0
[ 00.000% ] Create polyglot compiler:  0
[ 29.096% ] Polyglot phases:  103
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.000% ] Intertype Adjuster:  0
[ 01.695% ] Retrieving bodies:  6
[ 07.062% ] Update pattern matcher:  25
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 01.130% ] Compute advice lists:  4
[ 00.000% ] Intertype weave:  0
[ 00.282% ] Add aspect code:  1
[ 07.627% ] Weaving advice:  27
[ 00.282% ] Exceptions check:  1
[ 00.000% ] Validate jimple:  0
[ 14.972% ] Soot Packs:  53
[ 11.582% ] Soot Writing Output:  41
================================================
PASS: abctests/design/reflection: Test "thisJoinPoint etc inside if pointcut" passed.


Running test abctests/design/cflow/cflow at handler joinpoints
Commandline: abc -d abctests/design/cflow abctests/design/cflow/Handler.java 
Abc started on Fri Jul 30 10:08:52 BST 2004
If this was actually implemented, Soot would be using the FAST resolver now.
Transforming Handler... 
Transforming HandlerAspect... 
Abc finished on Fri Jul 30 10:08:53 BST 2004. ( 0 min. 0 sec. )
================================================
Breakdown of abc phases  (total: 323 millisec.)
------------------------------------------------
[ 37.771% ] Init. of Soot:  122
[ 00.000% ] Loading Jars:  0
[ 00.310% ] Create polyglot compiler:  1
[ 30.341% ] Polyglot phases:  98
[ 00.000% ] Resolve class names:  0
[ 00.000% ] Declare Parents:  0
[ 00.310% ] Intertype Adjuster:  1
[ 03.406% ] Retrieving bodies:  11
[ 08.050% ] Update pattern matcher:  26
[ 00.000% ] Weave Initializers:  0
[ 00.000% ] Load shadow types:  0
[ 00.619% ] Compute advice lists:  2
[ 00.000% ] Intertype weave:  0
[ 00.310% ] Add aspect code:  1
[ 03.715% ] Weaving advice:  12
[ 00.000% ] Exceptions check:  0
[ 00.000% ] Validate jimple:  0
[ 08.978% ] Soot Packs:  29
[ 06.192% ] Soot Writing Output:  20
================================================
PASS: abctests/design/cflow: Test "cflow at handler joinpoints" passed.


