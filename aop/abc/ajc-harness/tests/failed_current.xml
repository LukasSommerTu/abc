<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="DEPRECATED: Introduce of constructors" keywords="from-base" dir="base/test118" abccomment="this fails because we don't match I.new(..) correctly. ODM 4/7/04">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="State is passed correctly across nested annonymous inners" keywords="from-java" dir="pureJava">
        <compile files="NestedInners.java"></compile>
        <run class="NestedInners"></run>
    </ajc-test>
<ajc-test title="Calls to methods in outer annonymous classes are being qual's incorrectly with 'this'" keywords="from-java" dir="pureJava">
        <compile files="MisplacedThisInAnnonymousInnerClasses.java"></compile>
        <run class="MisplacedThisInAnnonymousInnerClasses"></run>
    </ajc-test>
<ajc-test title="Not binding constructor when using more than one compilation" pr="408" keywords="from-java,purejava" dir="new" abccomment="Need to compile second file, loading the CLASS file                    produced by the first compile.  Requires modifying                    behaviour of polyglot loader.  Aske looking into this                   as of July 1/04.  LJH                   Aske has made it so it can load a class file, but now                   abc cannot resolve InnerAspect when compiling the                    second file.  j2j seems to be able to do it, but                   not abc. July 6/04. LJH">
        <compile files="OuterAbstract_PR408.java"></compile>
        <compile files="ExtendsOuterAbstract_PR408.java"></compile>
        <compile files="ConstructorNotFound_PR408.java"></compile>
        <run class="ConstructorNotFound_PR408"></run>
    </ajc-test>
<ajc-test title="Default constructors have same access as their enclosing type" keywords="from-java" dir="pureJava/innerDefaultConstructors" abccomment="jlc doesn't report expected error.                   Reported to Nate on July 1/04.  LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="pkg1/Main.java,pkg2/Foo.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="packages and generated inner types (for I.class)" keywords="from-java" dir="pureJava" abccomment="InterfaceAndClass.java not in directory p.  javac                     and jlc can compile without it being in correct directory.                   abc requires it to be in the directory p. July 1/04  LJH">
        <compile files="InterfaceAndClass.java"></compile>
        <run class="p.InterfaceAndClass"></run>
    </ajc-test>
<ajc-test title="Inners can reference protected fields of their outer's super." keywords="from-java" dir="pureJava" abccomment="runs ok without harness ... July 1/04 LJH">
        <compile files="protectedFieldRefInInner/Main.java,protectedFieldRefInInner/p1/C.java"></compile>
        <run class="protectedFieldRefInInner.Main"></run>
    </ajc-test>
<ajc-test title="invalid numeric literals" keywords="from-java" dir="pureJava" abccomment="abc doesn't do a good job on these,  needs a parser                   that doesn't give up after the first error, and                   then each case needs to be check.  jlc probably does                   not catch all of them either.  July 1/04 LJH">
        <compile files="LiteralsCf.java">
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type and package name conflicts caught as errors (1)" keywords="from-java,purejava" dir="pureJava/nameConflicts" abccomment="this is missing in jlc, but it seems less important                   than other problems, so won't report it to Nate                     just yet.  July 2/04 LJH">
        <compile files="p1/p2.java,p1/Main1.java,p1/Foo.java,p1/p2/Foo.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="classes that are package prefixes are illegal" pr="574" keywords="from-java,purejava,messages-vary" dir="new/packagePrefix" abccomment="ajc doesn't find this error, send to Nate July 5/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile options="!eclipse" files="p/prefix.java,p/prefix/SomeClass.java">
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested finally blocks have interesting frame location problems" keywords="from-java" dir="pureJava" abccomment="jlc finds an error of return expected, but should                   compile without error.  Reported to Nate July 2/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NestedFinally.java"></compile>
        <run class="NestedFinally"></run>
    </ajc-test>
<ajc-test title="private super access in inners" keywords="from-java,purejava" dir="pureJava" abccomment="runs fine when not in harness, July 5/04 LJH">
        <compile files="PrivateSuperInnerAccess.java"></compile>
        <run class="PrivateSuperInnerAccess"></run>
    </ajc-test>
<ajc-test title="mismatched parens on advice (wasn't binding Tester)" pr="213" keywords="from-errors" dir="errors" abccomment="difference in line number between abc and ajc message. ODM July 5, 2004                   abc parser throws additional errors when giving up. PA/AGS">
        <compile files="MismatchedParens.java">
            <ajcmessage line="16" kind="error"></ajcmessage>
            <message kind="error"></message>
            <message kind="error"></message>
            <message kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="decent errors for around return type not matching target point" pr="244" keywords="from-errors" dir="errors" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundReturnType.java">
            <message line="3" kind="error"></message>
            <message line="7" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good error for bad field and inner class references" keywords="from-errors,purejava" dir="errors" abccomment="not pure java July 5/04 LJH                   polyglot does not find this error, sent to Nate,                        July 5/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="BadReferences.java">
            <message line="3" kind="error"></message>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="circular dominates leading to irresolvable advice precedence" keywords="from-errors" dir="errors" abccomment="Correct error, but thrown as a RuntimeException. ODM July 7, 2004">
        <compile files="CircularDominates.java">
            <message line="12" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="two classes with the same fully-qualified names [eachjvm]" pr="388" keywords="from-errors" dir="errors" comment="XXX error not flagging initial type" abccomment="Bogus test, as it contains a syntax error that causes abc to bail out. ODM July 7, 2004">
        <compile files="DuplicatedNames.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <ajcmessage line="5" kind="error"></ajcmessage>
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <message line="9" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class and interface extension" keywords="from-errors,purejava,messages-vary" dir="errors">
        <compile options="!eclipse" files="BadExtension.java">
            <message line="7" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="38" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="protected accessibility" keywords="from-errors,purejava" dir="errors">
        <compile files="protectedAccess/Main.java,protectedAccess/p1/C1.java">
            <message line="26" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="31" kind="error"></message>
            <message line="37" kind="error"></message>
            <message line="45" kind="error"></message>
            <message line="46" kind="error"></message>
            <message line="54" kind="error"></message>
            <message line="55" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="parse-time illegal modifiers" keywords="from-errors,purejava" dir="errors" abccomment="Third error not found by jlc, file Modifiers1LJH.java                   sent to Nate.  July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="Modifiers1.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="good errors (and not too many) for missing members" keywords="from-errors,purejava" dir="errors" comment="XXX import of class in default package" abccomment="jlc doesn't find 2 and should.  jlc exits after finding                   1.  If 1 is commented out then 2,6,10 are not found, but                   this is probably due to other errors that stop jlc from                   looking for them.   Reported this case to Nate,                   July 6/04 LJH">
        <compile files="NotFound.java">
            <message line="1" kind="error"></message>
            <message line="2" kind="error"></message>
            <message line="6" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="14" kind="error"></message>
            <message line="16" kind="error"></message>
            <ajcmessage line="1" kind="error"></ajcmessage>
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="6" kind="error"></ajcmessage>
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="10" kind="error"></ajcmessage>
            <ajcmessage line="14" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
        </compile>
    </ajc-test>
<ajc-test title="introduced inner interfaces - compile should fail to bind interface name outside of Aspect or if implementing method is not public" pr="494" keywords="from-errors" dir="new" abccomment="abc gets most of these, but some of the messages are wrong. This is related to the class conformance                   check bug that I reported to polyglot today. 07/07/04">
        <compile options="-Xlint:ignore" files="IntroduceInnerInterfaceCF.java">
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="42" kind="error"></message>
            <message line="45" kind="error"></message>
            <message line="48" kind="error"></message>
            <message line="50" kind="error"></message>
            <message line="58" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inner classes may not have static non-constant members" keywords="from-errors,purejava" dir="errors">
        <compile files="InnerMembers.java">
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 1" pr="570" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF1.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="46" kind="error"></message>
            <message line="42" kind="error"></message>
            <message line="42" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="errors in inheritance of multiple concrete methods 4" pr="570" keywords="from-design" dir="abctests/design/intro" abccomment="abc bails out early, split into several cases. ODM 08/07/04">
        <compile files="MultiInheritCF4.java">
            <ajcmessage line="21" kind="error"></ajcmessage>
            <ajcmessage line="41" kind="error"></ajcmessage>
            <ajcmessage line="42" kind="error"></ajcmessage>
            <ajcmessage line="43" kind="error"></ajcmessage>
            <ajcmessage line="45" kind="error"></ajcmessage>
            <ajcmessage line="46" kind="error"></ajcmessage>
            <message line="41" kind="error"></message>        
        </compile>
    </ajc-test>
<ajc-test title="introducing extends and implements" keywords="from-resolved_10x" dir="new" abccomment="Need to support I1 extends I2,I3,I4. ODM 09/07/04">
        <compile files="HierarchyIntroductions.java"></compile>
        <run class="HierarchyIntroductions"></run>
    </ajc-test>
<ajc-test title="non-static advice on inner class defined inside of method body" keywords="from-resolved_10x" dir="new" abccomment="fails on use of thisJoinPoint when advice applies inside inner class;                  generates verify error. error goes away when use of thisJoinPoint is                  commented out. Emailed Ganesh. ODM 09/07/04">
        <compile files="MethodInner.java"></compile>
        <run class="MethodInner"></run>
    </ajc-test>
<ajc-test title="generating the right throws clause for call-site advice (and around)" pr="242" keywords="from-resolved_10x" dir="new" abccomment="exception checker does not work in the presence of around.                   ODM 09/07/04">
        <compile files="ComputedThrows.java"></compile>
        <run class="ComputedThrows"></run>
    </ajc-test>
<ajc-test title="advice on calls to static methods using several syntax" pr="246" keywords="from-resolved_10x" dir="new" abccomment="reachability checker needs to be hacked so that proceed may throw                   any exception. On Ganesh's list. ODM 09/07/04">
        <compile files="StaticCalls.java"></compile>
        <run class="StaticCalls"></run>
    </ajc-test>
<ajc-test title=", PR#249, PR#250 advice on constructor sites" pr="248" keywords="from-resolved_10x" dir="new" abccomment="reachability checker needs to be hacked so that proceed may throw                   any exception. On Ganesh's list. ODM 09/07/04">
        <compile files="NewSiteAdvice.java"></compile>
        <run class="NewSiteAdvice"></run>
    </ajc-test>
<ajc-test title="test after throwing advice in several ways" keywords="from-resolved_10x" dir="new" abccomment="the usual problem with around and exception checker. ODM 09/07/04">
        <compile files="AfterThrowing.java"></compile>
        <run class="AfterThrowing"></run>
    </ajc-test>
<ajc-test title="throws Exception clause is unnecessarily added to Driver.main method" pr="259" keywords="from-resolved_10x" dir="new/extraThrows">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Compiler can compile correct strictfp modifiers" keywords="from-resolved_10x" dir="new">
        <compile files="StrictFpCompile.java"></compile>
        <run class="StrictFpCompile"></run>
    </ajc-test>
<ajc-test title="Ensuring backdoor methods are produced." keywords="from-resolved_10x" dir="new">
        <compile files="BackdoorMethods.java"></compile>
        <run class="BackdoorMethods"></run>
    </ajc-test>
<ajc-test title="Make sure that names of lifted local classes are right when referenced in call-site advice" keywords="from-resolved_10x" dir="new">
        <compile files="CallsAndLocalClasses.java"></compile>
        <run class="CallsAndLocalClasses"></run>
    </ajc-test>
<ajc-test title="holding onto proceed calls in a closure-like way" keywords="from-resolved_10x,knownLimitation" dir="new">
        <compile files="HoldProceed.java"></compile>
        <run class="HoldProceed"></run>
    </ajc-test>
<ajc-test title="basic test of declare soft" keywords="from-resolved_10x" dir="new">
        <compile files="DeclareSoft.java"></compile>
        <run class="DeclareSoft"></run>
    </ajc-test>
<ajc-test title="join points exist in the execution of field initializers" keywords="from-resolved_10x" dir="new">
        <compile files="FieldInitializerJoinPoints.java"></compile>
        <run class="FieldInitializerJoinPoints"></run>
    </ajc-test>
<ajc-test title="privileged aspects" keywords="from-resolved_10x" dir="new/privilegedAspects">
        <compile files="main/Main.java,fish/PrivateClass.java,fish/B.java,fowl/C.java,fowl/D.java"></compile>
        <run class="main.Main"></run>
    </ajc-test>
<ajc-test title="basic tests for initializer and staticinitializer PCDs" keywords="from-resolved_10x" dir="new">
        <compile files="InitializerTest.java"></compile>
        <run class="InitializerTest"></run>
    </ajc-test>
<ajc-test title="calls advice on array objects causes error in code generation" keywords="from-resolved_10x" dir="new">
        <compile files="CallsToArray.java"></compile>
        <run class="CallsToArray"></run>
    </ajc-test>
<ajc-test title="within and withincode (doesn't all work due to local class name issues)" keywords="from-resolved_10x" dir="new">
        <compile files="WithinInners.java"></compile>
        <run class="WithinInners"></run>
    </ajc-test>
<ajc-test title="around advice on calls within inner classes (including protected method calls)" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4" files="AroundInnerCalls.java"></compile>
        <run class="AroundInnerCalls"></run>
    </ajc-test>
<ajc-test title="different version of aspect inheritance, particularly empty pointcuts and abstract cflows [eachcflow]" keywords="from-resolved_10x,fail-unimplemented" dir="new">
        <compile files="AspectInheritance.java"></compile>
        <run class="AspectInheritance"></run>
    </ajc-test>
<ajc-test title="Crashing when looking up the type of array members." keywords="from-resolved_10x" dir="new">
        <compile files="ArrayCasts.java"></compile>
        <run class="ArrayCasts"></run>
    </ajc-test>
<ajc-test title="PostfixExprs to various synthetic things are fixed correctly [eachobject]" keywords="from-resolved_10x" dir="new">
        <compile files="Fixes.java"></compile>
        <run class="Fixes"></run>
    </ajc-test>
<ajc-test title="advice on an inherited method" pr="105" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnInheritedMethod.java"></compile>
        <run class="AdviceOnInheritedMethod"></run>
    </ajc-test>
<ajc-test title="various declared exception permutations" keywords="from-resolved_10x" dir="new">
        <compile files="DeclaredExcs.java"></compile>
        <run class="DeclaredExcs"></run>
    </ajc-test>
<ajc-test title="advice on default constructor for a class only referenced via reflection" pr="241" keywords="from-resolved_10x" dir="new">
        <compile files="OddConstructors.java"></compile>
        <run class="OddConstructors"></run>
    </ajc-test>
<ajc-test title="primitive parameters coercable to Object just like return values are" pr="322" keywords="from-resolved_10x" dir="new">
        <compile files="ObjectForInt.java"></compile>
        <run class="ObjectForInt"></run>
    </ajc-test>
<ajc-test title="Does the matrix coverage thing for the new method signatures" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="MethodSignatures.java"></compile>
        <run vm="1.4" class="MethodSignatures"></run>
    </ajc-test>
<ajc-test title="correct types of parameters at call-sites" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="CallTypes.java"></compile>
        <run vm="1.4" class="CallTypes"></run>
    </ajc-test>
<ajc-test title="Reception based on strictfp modifier" keywords="from-resolved_10x" dir="new">
        <compile files="StrictFpReceptions.java"></compile>
        <run class="StrictFpReceptions"></run>
    </ajc-test>
<ajc-test title="Priviledged aspect methods are missing for privates. [eachobject]" keywords="from-resolved_10x" dir="new/foemmel">
        <compile files="TheAspect.java,TheObject.java">
        </compile>
        <run class="TheObject"></run>
    </ajc-test>
<ajc-test title="exceptions thrown and caught in advice, particularly try+proceed" keywords="from-resolved_10x" dir="new">
        <compile files="TryAndProceed.java"></compile>
        <run class="TryAndProceed"></run>
    </ajc-test>
<ajc-test title="pcd if() expression visibility at compile-time  (minimal operation)" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="IfPCDExprVisibility.java"></compile>
        <run class="IfPCDExprVisibility"></run>
    </ajc-test>
<ajc-test title="private inner interfaces and bytecode visibility" pr="494" keywords="from-resolved_10x" dir="new/innerInterfaces">
        <compile files="p/Driver.java,p/InnerTest.java,other/Test.java"></compile>
        <run class="p.Driver"></run>
    </ajc-test>
<ajc-test title="elaborated into testing of around on all join points" pr="490" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundAll.java"></compile>
        <run class="AroundAll"></run>
    </ajc-test>
<ajc-test title="target type matching with messy interface hierarchies" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="CallTypesI.java"></compile>
        <run vm="1.4" class="CallTypesI"></run>
    </ajc-test>
<ajc-test title="anonymous inner class with aspect" pr="297" keywords="from-resolved_10x" dir="new/anonInnerClass">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="interfaces as mixins with introduction" keywords="from-resolved_10x" dir="design/intro" abccomment="fails because we don't match I.new(..) correctly. ODM 04/07/04">
        <compile files="Interfaces.java"></compile>
        <run class="Interfaces"></run>
    </ajc-test>
<ajc-test title="functional modifiers work correctly with introduced members" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducedModifiers.java"></compile>
        <run class="IntroducedModifiers"></run>
    </ajc-test>
<ajc-test title="compile errors boolean using cflow and unimplemented method using around advice on methods introduced by interface" pr="528" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="PR528.java"></compile>
        <run class="PR528"></run>
    </ajc-test>
<ajc-test title="missing method name to synthetic invocation" pr="535" keywords="from-resolved_10x,new-messages-vary" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="PR535.java"></compile>
        <run class="PR535"></run>
    </ajc-test>
<ajc-test title="introduced inner interfaces accessible inside aspect" pr="494" keywords="from-resolved_10x" dir="new">
        <compile files="IntroduceInnerInterfaceCP.java"></compile>
        <run class="IntroduceInnerInterfaceCP"></run>
    </ajc-test>
<ajc-test title="validate (enclosing) join point and source locations" pr="525" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="NegativeSourceLocation.java"></compile>
        <run class="NegativeSourceLocation"></run>
    </ajc-test>
<ajc-test title="advice formals produce errors just like method formals" pr="544" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceFormalsCf.java">
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="36" kind="error"></message>
            <message line="37" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="advice throws clauses must be compatible with joinpoints they apply to" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceThrowsCp.java"></compile>
        <run class="AdviceThrowsCp"></run>
    </ajc-test>
<ajc-test title="illegal method conflicts with introductions and interfaces and PR#561" pr="570" keywords="from-resolved_10x" dir="new">
        <compile files="MethodConflictsCF.java">
            <message line="8" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="28" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="AspectOf available for different aspect types" keywords="from-resolved_10x" dir="new">
        <compile files="AspectOf.java"></compile>
        <run class="AspectOf"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to instanceof expressions in introduced methods" keywords="from-resolved_10x,knownLimitation" dir="new/introTypeMissing">
        <compile files="InstanceOf.java,TargetClass.java,Util.java">
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="24" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="26" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="variable slots and finally/catch causing verify errors" pr="595" keywords="from-resolved_10final,from-resolved_10x" dir="new">
        <compile files="AfterFinally.java"></compile>
        <run class="AfterFinally"></run>
    </ajc-test>
<ajc-test title="enclosing join point not exported properly in pre-initialization join point" keywords="from-resolved_10x,knownLimitation" dir="new">
        <compile files="PreInitialization.java"></compile>
        <run class="PreInitialization"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 1)" pr="600" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,A.java,B.java,C.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 2)" pr="600" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,C.java,A.java,B.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 3)" pr="600" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="My_error.java,A.java,B.java,C.java,Main.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 4)" pr="600" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,C.java,Main.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 5)" pr="600" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,Main.java,C.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="VerifyError after around advice falls off end of tryCatch" keywords="from-resolved_10x" dir="new">
        <compile files="TryOffEnd.java">
            <message line="13" kind="warning"></message>
            <message line="21" kind="warning"></message>
        </compile>
        <run class="TryOffEnd"></run>
    </ajc-test>
<ajc-test title="aspect with private abstract pointcut" pr="647" keywords="from-resolved_10x,fail-unimplemented" dir="new/subaspects">
        <compile files="PrivatePointcutCE.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="concrete aspect unable to access abstract package-private pointcut in parent for overriding" pr="647" keywords="from-resolved_10x" dir="new/subaspects" comment="XXX getting error - confirm line numbers">
        <compile files="parent/ParentCE.java,child/ChildCE.java">
            <message line="21" kind="error" file="child/ChildCE.java"></message>
            <message line="31" kind="error" file="child/ChildCE.java"></message>
            <message line="8" kind="error" file="parent/ParentCE.java"></message>
            <message line="10" kind="error" file="parent/ParentCE.java"></message>
            <message line="12" kind="error" file="parent/ParentCE.java"></message>
            <message line="22" kind="error" file="parent/ParentCE.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="private inner interface accessible in scope when declared on outer class" keywords="from-resolved_10x" dir="new" abccomment="likely the polyglot class conformance check bug too                     July 8/04 LJH">
        <compile files="DeclareAccess.java"></compile>
        <run class="DeclareAccess"></run>
    </ajc-test>
<ajc-test title="accessing protected superclass members in and outside CCC from body of method introduction" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroduction.java"></compile>
        <run class="SuperInIntroduction"></run>
    </ajc-test>
<ajc-test title="subclass advice not run for join points selected by superclass cflow-based pointcuts" pr="559" keywords="from-resolved_10rc3" dir="new">
        <compile files="PR559.java"></compile>
        <run class="PR559"></run>
    </ajc-test>
<ajc-test title="anon class written to wrong directory" pr="569" keywords="from-resolved_104,from-resolved_104" dir="new/PR569">
        <compile files="a/IntroAnon.java,a/MyInterface.java,b/Dest.java"></compile>
        <run class="a.IntroAnon"></run>
    </ajc-test>
<ajc-test title="around name-binding in cflows using factorial" pr="677" keywords="from-resolved_104" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="FactorialCflow.java"></compile>
        <run class="FactorialCflow"></run>
    </ajc-test>
<ajc-test title="incrementing objects, arrays CE" pr="715" keywords="from-resolved_104,purejava,messages-vary" dir="new" abccomment="We don't report all errors at once, but if some are                   commented out, the others are reported, so all cases                   are covered.  July 7/04 LJH">
        <compile options="!eclipse" files="ArrayIncCE.java">
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="16" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <ajcmessage line="18" kind="error"></ajcmessage>
            <ajcmessage line="19" kind="error"></ajcmessage>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="after returning from initialization and after executing constructor" keywords="from-resolved_104" dir="new">
        <compile files="ConstructorExecInit.java"></compile>
        <run class="ConstructorExecInit"></run>
    </ajc-test>
<ajc-test title="after returning from initialization causes ExceptionInInitializer in aspect" dir="new">
        <compile files="ConstructorExecInitFails.java"></compile>
        <run class="ConstructorExecInitFails"></run>
    </ajc-test>
<ajc-test title="name binding in before cflow containing cflowbelow" pr="659" keywords="from-resolved_104" dir="new">
        <compile options="!eclipse" files="ArgsInCflow.java">
            <message line="29" kind="error"></message>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (1)" pr="737" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="works for abc, but with 1 more error message (ok),                   causes jlc not to terminate.  Reported to Nate July 7/04                   LJH">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test1CF.java">
            <ajcmessage line="7" kind="error"></ajcmessage>
            <ajcmessage line="15" kind="error"></ajcmessage>
            <ajcmessage line="17" kind="error"></ajcmessage>
            <message line="7" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="15" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="should have circular inheritance errors (2)" pr="737" keywords="from-resolved_105,purejava,messages-vary" dir="pureJava" abccomment="missing error in jlc, reported to Nate on July 7/04 LJH">
      <abckeywords> <nate></nate><laurie></laurie></abckeywords>
        <compile options="!eclipse" files="circle/Test2CF.java">
            <message line="6" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="15" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="interface using preceding subinterface in its definition" pr="728" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="in abc get IncompatibleClassChangeError. Example sent                   to Jennifer.  July 6/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile files="ParentUsingChild.java"></compile>
        <run class="ParentUsingChild"></run>
    </ajc-test>
<ajc-test title="final local variables may be accessed from inner class" pr="739" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="LocalsFromInnerCP.java"></compile>
        <run class="LocalsFromInnerCP"></run>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two files in package)" pr="701" keywords="from-resolved_105,purejava" dir="new" abccomment="jlc doesn't find error when two classes in same package                   have same name.  Reported to Nate July 6/04. LJH">
     <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile files="ambiguousClass/AmbiguousReferent.java,ambiguousClass/AmbiguousClassReference.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="interfaces may not contain initializers (bug found by jacks)" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="syntax errors, abc gives up after the first one, but                   when the first is commented out, it finds the second                   one.  I think this test case is fine.  July 6/04 LJH">
        <compile files="InterfaceMembersCf.java">
            <ajcmessage line="2" kind="error"></ajcmessage>
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="2" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Incrementing interface-introduced field" pr="757" keywords="from-resolved_105" dir="new">
        <compile files="IntroducedFieldInc.java"></compile>
        <run class="IntroducedFieldInc"></run>
    </ajc-test>
<ajc-test title="more tests of super alone" keywords="from-resolved_105,purejava" dir="pureJava" abccomment="abc (and javac) find syntax errors on lines 13 and 21                   and then don't do the semantic check that finds errors                   on lines 9 and 20.  If the syntax errors on 13 and 21 are                   commented out, then both javac and abc find the illegal                   uses of super on lines 9 and 20.  So this test case looks                   fine.  July 6/04 LJH">
        <compile files="SuperIsWeird.java">
            <ajcmessage line="9" kind="error"></ajcmessage>
            <ajcmessage line="13" kind="error"></ajcmessage>
            <ajcmessage line="20" kind="error"></ajcmessage>
            <ajcmessage line="21" kind="error"></ajcmessage>
            <message line="13" kind="error"></message>
            <message line="21" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type pattern matching for inner classes (from Ken Horn)" keywords="from-resolved_105" dir="new">
        <compile files="TypePat.java"></compile>
        <run class="test.TypePat"></run>
    </ajc-test>
<ajc-test title="flag errors when binding args with indeterminate prefix and suffix" pr="764" keywords="from-resolved_105,knownLimitation" dir="new">
        <compile files="IndeterminateArgsCE.java">
            <message line="67" kind="error"></message>
            <message line="68" kind="error"></message>
            <message line="70" kind="error"></message>
            <message line="72" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="subclass access to enclosing super class private members" pr="752" keywords="from-resolved_105,purejava,fail-unimplemented" dir="pureJava">
        <compile files="SubclassAccessToEnclosingSuperClassPrivate.java"></compile>
        <run class="SubclassAccessToEnclosingSuperClassPrivate"></run>
    </ajc-test>
<ajc-test title="Compiling java.lang.Object with ajc yields non-verifying bytecode" pr="762" keywords="from-resolved_105" dir="new/nolang" comment="XXX weak/bad test">
	    <compile files="java/lang/Object.java,java/lang/String.java">
	    </compile>
	</ajc-test>
<ajc-test title="CE expected for assignment to arg in if pcd" keywords="from-resolved_105" dir="new">
        <compile files="IfPCDAssignmentCE.java">
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare interface extends class" pr="853" dir="new">
        <compile files="DeclareInterfaceExtendsClass.java">
           <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert flow" keywords="from-14tests,purejava" dir="pureJava" abccomment="assert b=false  should not definitely assign to b,         so jlc does not give a later var not assigned error.  Reported         to Polyglot bugzilla July 7/04 LJH">
        <compile options="-source,1.4" files="AssertsCF.java">
            <message line="8" kind="error"></message>
            <message line="11" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert coverage tests in one package [requires 1.4]" keywords="from-14tests,purejava,fail-unimplemented" dir="pureJava" abccomment="seems to be broken in j2j, sent to Jennifer July 7/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile options="-source,1.4" files="AssertInOnePackage.java"></compile>
        <run vm="1.4" class="AssertInOnePackage"></run>
    </ajc-test>
<ajc-test title="import of a class in the default package" pr="134" keywords="from-broken14usejavac,purejava" dir="new" abccomment="javac expects an import to have a packagename followed                   by a dot.  Polyglot has been changed to also do this and                   should also give an error.  We may temporily 'lose' this                   case until our Polygot is updated (needs a Polyglot                    more recent than July 8/04).   Ajc gives a 'cannot resolve'                   error on line 2, even though their original test case                   did not indicate an error.  July 9/04 LJH">
        <compile files="ImportFromUnnamed.java,DeclaredExcs.java">
          <message line="2" kind="error"></message>
        </compile>
        <ajcrun class="ImportFromUnnamed"></ajcrun>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements" pr="386" keywords="from-broken14usejavac,purejava" dir="pureJava">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile files="ImportingStaticInnerInterfaces_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfaces_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile files="ImportingStaticInnerInterfacesStars_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars 2" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile files="ImportingStaticInnerInterfacesStars2_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars2_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars 3" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile files="ImportingStaticInnerInterfacesStars3_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars3_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfaces_PR386.java"></compile>
        <run class="ImportingInnerInterfaces_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars 2" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars2_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars2_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars 3" pr="386" keywords="purejava,from-broken14usejavac" dir="pureJava">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars3_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars3_PR386"></run>
    </ajc-test>
<ajc-test title="declaring a private method on an inner interface" pr="823" keywords="tofix" dir="new">
        <compile files="PrivateMethodOnInnerInterface.java"></compile>
        <run class="PrivateMethodOnInnerInterface"></run>
    </ajc-test>
<ajc-test title="source locations within expressions (hard case of constructor start)" pr="885" keywords="knownLimitation" dir="new" comment="this behaves differently in 1.3 from 1.4 for unknown reasons, merge with above when resolved">
        <compile files="SourceLocationWithinExprHard.java"></compile>
        <run class="SourceLocationWithinExprHard"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor" pr="889" dir="new">
        <compile files="AfterReturningInterfaceConstructor.java"></compile>
        <run class="AfterReturningInterfaceConstructor"></run>
    </ajc-test>
<ajc-test title="options negative -Xlint args()" keywords="lint" dir="options">
        <compile options="-Xlint:ignore" files="XLintTypeArgsPCD.java"></compile>
    </ajc-test>
<ajc-test title="options negative -Xlint target()" keywords="lint" dir="options">
        <compile options="-Xlint:ignore" files="XLintTypeTargetPCD.java"></compile>
    </ajc-test>
<ajc-test title="options negative -Xlint this()" keywords="lint" dir="options">
        <compile options="-Xlint:ignore" files="XLintTypeThisPCD.java"></compile>
    </ajc-test>
<ajc-test title="options -injars" dir="options/injars/simple">
        <compile options="!eclipse" files="Simple.java,main.jar"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="self-reference from (aspect-declared) method-local class" pr="776" dir="new">
        <compile files="MethodSelfReference.java"></compile>
        <run class="MethodSelfReference"></run>
    </ajc-test>
<ajc-test title="expect CE for unterminated declare error" dir="new">
        <compile files="UnterminatedDeclareErrorCE.java">
            <message line="4" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="expect CE for declaration collision between subaspects instead of domination order" dir="new">
        <compile files="DeclarationCollisionCE.java">
            <message line="10" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="27" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="subtype pattern in dominates should pick out aspect subtypes" dir="new">
        <compile files="DominatesTypePattern.java"></compile>
        <run class="DominatesTypePattern"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface and implementation constructor" pr="827" keywords="tofix" dir="new">
        <compile files="AfterReturningConstructor.java"></compile>
        <run class="AfterReturningConstructor"></run>
    </ajc-test>
<ajc-test title="prohibit declaring new aspect constructor with arguments" pr="851" dir="new">
        <compile files="DeclareAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="prohibit declaring only aspect constructor with arguments" pr="851" dir="new">
        <compile files="DeclareOnlyAspectConstructorCE.java">
          <message line="10" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare class extends interface" pr="853" dir="new">
        <compile files="DeclareClassExtendsInterface.java">
        </compile>
    </ajc-test>
<ajc-test title="declare class implements class" pr="853" dir="new">
        <compile files="DeclareClassImplementsClass.java">
        </compile>
    </ajc-test>
<ajc-test title="if and cflow arg binding" dir="new">
        <compile files="CflowBinding.java">
          <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="inter-type fields with array types" pr="29113" dir="bugs">
        <compile files="InterFieldArrays.java"></compile>
        <run class="InterFieldArrays"></run>
    </ajc-test>
<ajc-test title="checking around join point for advice return type - numeric" pr="838" dir="new">
        <compile files="AroundNumericCastCE.java">
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="void around advice without proceed" pr="836" dir="new">
        <compile files="VoidAround.java">
            <message line="11" kind="error"></message>
            <message line="29" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declaring method on superclass and subclass" pr="852" keywords="knownLimitation" dir="new/PR852">
        <compile files="aspect/Aspect.java,target/SubClass.java,target/SuperClass.java">
          <dir-changes added="target.SubClass,target.SuperClass"></dir-changes>
        </compile>
        <run class="aspect.Aspect"></run>
    </ajc-test>
<ajc-test title="import any inner from interface implementor" pr="862" keywords="purejava" dir="new/PR862">
        <compile files="pack/ImportInnerFromInterfaceImplementor.java">
          <dir-changes added="pack.ImportInnerFromInterfaceImplementor"></dir-changes>
        </compile>
        <run class="pack.ImportInnerFromInterfaceImplementor"></run>
    </ajc-test>
<ajc-test title="problems with finalize call" pr="30026" dir="bugs">
        <compile files="Finalizer.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="can't resolve nested public interfaces (also PR#32399)" pr="32421" dir="bugs/interfaceNames">
        <compile files="TransactionTest.java,sub/ExecutionMonitor.java,sub/ObserverProtocol.aj"></compile>
        <run class="TransactionTest"></run>
    </ajc-test>
<ajc-test title="omnibus declare warning context with no initializer/constructor" pr="31724" dir="new/declare">
        <compile files="DeclareWarningEmpty.java">
            <message text="2 - initialization(DeclareWarningEmpty)" line="3" kind="warning"></message>
            <message text="1 - staticinitialization(DeclareWarningEmpty)" line="3" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="omnibus declare warning context" pr="31724" dir="new/declare">
        <compile files="DeclareWarning.java">
            <message text="staticinitialization(DeclareWarning)" line="5" kind="warning"></message>
            <message text="call(DeclareWarning.new())" line="12" kind="warning"></message>
            <message text="get staticInt" line="13" kind="warning"></message>
            <message text="get instanceInt" line="14" kind="warning"></message>
            <message text="set staticInt" line="15" kind="warning"></message>
            <message text="set instanceInt" line="16" kind="warning"></message>
            <message text="call(void run())" line="17" kind="warning"></message>
            <message text="call(void irun())" line="18" kind="warning"></message>
            <message text="execution(void run())" line="21" kind="warning"></message>
            <message text="execution(void irun())" line="22" kind="warning"></message>
            <message text="execution(DeclareWarning.new())" line="23" kind="warning"></message>
            <message text="initialization(DeclareWarning)" line="23" kind="warning"></message>
            <message text="handler(OutOfMemoryError) &amp;&amp; within(DeclareWarning)" line="33" kind="warning"></message>
            <message text="handler(Error)" line="36" kind="warning"></message>
            <message text="handler(RuntimeException) &amp;&amp; withincode(DeclareWarning.new())" line="39" kind="warning"></message>
            <message text="adviceExecution() &amp;&amp; within(A)" line="74" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="incompatible advice throws clause are a compile-time error" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceThrowsCf.java">
            <message line="13" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="47" kind="error"></message>
            <message line="48" kind="error"></message>
            <message line="50" kind="error"></message>
            
            <message line="70" kind="error"></message>
            <message line="74" kind="error"></message>
            <message line="76" kind="error"></message>
            <message line="78" kind="error"></message>
            
            <message line="85" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cflow binding issues with ignoring state" pr="34858" dir="bugs">
        <compile files="CflowBinding.java"></compile>
        <run class="CflowBinding"></run>
    </ajc-test>
<ajc-test title="illegal name binding in around cflow" pr="660" keywords="from-resolved_104,knownLimitation" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="ArgsInCflowCf.java">
            <message line="19" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="35" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="before():execution(new(..)) does not throw NoAspectBoundException" pr="34206" keywords="knownLimitation" dir="bugs" comment="correct behavior of this case needs to be thought through">
        <compile files="AspectInitError.java"></compile>
        <run class="AspectInitError"></run>
    </ajc-test>
<ajc-test title="declare soft and throw statements" pr="34925" dir="bugs">
        <compile files="ConvertToUnchecked.java"></compile>
        <run class="ConvertToUnchecked"></run>
    </ajc-test>
<ajc-test title="Declare parents with intermediate ancestor" keywords="from-new" dir="new/declareParents">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Declare parents removing ancestor" keywords="from-new" dir="new/declareParents">
        <compile files="IllegalAdoption.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="options -injars checking declare parents interactions" pr="35865" dir="options/injars/simple">
        <compile options="!eclipse" files="DecParents.java,main.jar"></compile>
        <run class="DecParents"></run>
    </ajc-test>
<ajc-test title="testing that assert works like .class" pr="36110" dir="bugs/interSpecials">
        <compile options="-source,1.4" files="p1/C.java,p2/A2.java"></compile>
        <run vm="1.4" class="p2.A2"></run>
    </ajc-test>
<ajc-test title="Internal compiler error with thisJoinPoint.getStaticPart()" pr="36564" dir="bugs">
        <compile files="tjpStaticPart/Test.java,tjpStaticPart/Exceptions.java"></compile>
        <run class="tjpStaticPart.Test"></run>
    </ajc-test>
<ajc-test title="Ajc 1.1 rc1 java.lang.VerifyError with messy arounds" pr="36056" dir="bugs/messyAround">
        <compile files="aspects/Trace.aj,cap/OptionList.java,DebugTrace.aj">
            <message line="102" kind="warning"></message>
        	<message line="124" kind="warning"></message>
        	<message line="138" kind="warning"></message>
        </compile>
        <run class="cap.OptionList"></run>
    </ajc-test>
<ajc-test title="try/finally in around advice (same as ...messy arounds?)" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="TryFinallyInAround.java"></compile>
        <run class="TryFinallyInAround"></run>
    </ajc-test>
<ajc-test title="can't put around advice on interface static initializer" pr="36778" dir="new" comment="this tests for a nice message given a compiler limitation">
        <compile files="EmptyInterfaceCE.java">
        	<message line="20" kind="error"></message>
        	<message line="23" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="cflow concretization causing assertion failure" pr="36803" dir="bugs">
        <compile files="CflowConcrete.java"></compile>
        <run class="CflowConcrete"></run>
    </ajc-test>
<ajc-test title="The compiler crashes when using aspect libraries created without using -noweave" pr="36329" dir="new/options11" comment="the line number might change, we're really interested only in the files here">
        <compile files="Main.java,injar.jar,Aspect.java,aspectlib1.jar,aspectlib2.jar">
            <message line="0" kind="error"></message>
        </compile>
   </ajc-test>
<ajc-test title="declare warnings on main" pr="37020" dir="new/binaryWarnings/src">
        <compile files="aspects/MainWarnings.java,app/Main.java">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 classes" pr="37020" dir="new/binaryWarnings/src">
        <compile files="aspects/MainWarnings.java,../injars/app-javac-1.4.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 classes" pr="37023" dir="new/binaryWarnings/src">
        <compile files="aspects/MainWarnings.java,../injars/app-ajc-1.1.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
	</ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary ajc 1.1 classes" pr="37020" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-ajc-1.1.jar">
        	<message text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary javac 1.4 classes" pr="37020" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start; XXX need javac inlining example">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-javac-1.4.jar">
        	<message text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="CLE: no sources" keywords="command-line-error" dir="harness" abccomment="abc fails this test because       when invoked without sources, it runs through and does nothing,       while ajc aborts with an error.">
        <compile badInput="true">
            <message text="no sources" kind="error"></message>
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="CLE: no dir specified for sourceroots" keywords="command-line-error" dir="harness" comment="XXX test skipped - harness ignores -sourceroot option">
        <compile options="-sourceroots" files="ErrorTest.java" badInput="true">
            <message text="no sources specified" kind="error"></message>
            <message text="bad sourceroot" kind="error"></message>
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="Weaving rt.jar results in stack overflow" pr="37758" dir="bugs/lines">
        <compile files="A.java,big.jar">
 			
        </compile>
        <run class="Big"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 main - constructor execution" pr="37020" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-javac-1.4.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 main - constructor execution" pr="37020" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-ajc-1.1.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="advice on handler join points should not throw unpermitted checked exceptions" pr="37898" keywords="knownLimitation" dir="bugs/handlers">
        <compile files="ExceptionCheckCE.java">
			<message text="expected" line="8" kind="warning"></message>
			<message text="throw checked exception" line="25" kind="error"></message>
			<message text="throw checked exception" line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="can not resolve this member warning" pr="38212" dir="bugs/accessMethods">
        <compile files="p1/Base.java,p2/Derived.java"></compile>
        <run class="p2.Derived"></run>
    </ajc-test>
<ajc-test title="Compiler crash in ajc 1.1 - terrible error for inaccessible constructor" pr="39458" dir="bugs" abccomment="awaiting Pavel's implementation of privileged. ODM 27/09/04">
        <compile files="NewVoid.java">
            <message line="17" kind="error"></message>        
            <message line="20" kind="error"></message>        
            <message line="21" kind="error"></message>
                  
            <message line="28" kind="error"></message>        
            <message line="29" kind="warning"></message>        
            <message line="30" kind="warning"></message>            
        </compile>
    </ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnly.jar,aspectOnly.jar" dir="new/interfaceLibrary" comment="weaving required for implementations of interface?             XXX Would prefer to support javac compiles of Client here, mimicked with classpath only" abccomment="only type error, but ok. ODM 19/07/04">
		<compile files="Client.java" classpath="aspectedInterfaceOnly.jar,aspectOnly.jar">
			<ajcmessage line="9" kind="error"></ajcmessage>
			<message line="14" kind="error"></message>
                        </compile>
		</ajc-test>
<ajc-test title="aspect-declared interface members in libraries - aspectedInterfaceOnlyBinary.jar,aspectOnly.jar" dir="new/interfaceLibrary" comment="works if aspect is only on the classpath?, i.e., no weaving XXX need javac run" abccomment="abc bails out after type checking, but ok. ODM 19/07/04">
		<compile files="Client.java" classpath="aspectedInterfaceOnlyBinary.jar,aspectOnly.jar">
			<ajcmessage line="9" kind="error"></ajcmessage>
                        <message line="14" kind="error"></message>
			</compile>
		</ajc-test>
<ajc-test title="NPE in concretization error path" pr="43033" keywords="poorErrorMessages" dir="bugs/concretizeNpe" abccomment="parse error location ok. ODM 19/07/04">
		<compile files="base/ExceptionHandling.java,model/ModelExceptionHandling.java">
		
		  <ajcmessage line="12" kind="error"></ajcmessage>		
		  <ajcmessage line="13" kind="error"></ajcmessage>
                  <message line="13" kind="error"></message>
		</compile>
	</ajc-test>
<ajc-test title="Ensure we don't look for source on the classpath when binary not found" pr="46671" dir="bugs/faultingInSource">
        <compile options="-verbose" files="SimpleTracing.java" classpath=".">
		  <message text="no match for this type name: SampleClass" line="4" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="compiler issues error on inner aspects when privilieged" pr="46280" dir="bugs" abccomment="Awaiting Pavel's implementation of privileged. ODM 19/07/04">
        <compile files="PrivilegedParsing.java"></compile>
        <run class="PrivilegedParsing"></run>
    </ajc-test>
<ajc-test title="After throwing advice on ctors doesn't execute for inter-type decl field inits" pr="44586" dir="bugs" abccomment="ITD field initialisers should not appear in the exec jps of host constructors, but                     they do appear in initialisation jps of the same. Need to discuss with Ganesh.                     ODM 19/07/04">
        <compile files="AfterThrowingCtor.java">
        </compile>
  		<run class="AfterThrowingCtor"></run>
    </ajc-test>
<ajc-test title="Introduced abstract method on interface not implemented by subtype (injars)" pr="49784" dir="bugs/abstractMethods">
       <compile files="interface/C.java,interface/jars/AandB.jar"> 
            <message line="1" kind="error"></message>
        </compile>
    </ajc-test>
 
</suite>
