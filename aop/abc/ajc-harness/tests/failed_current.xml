<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="DEPRECATED: Introduce of constructors" num="25" keywords="from-base" dir="base/test118" abccomment="this fails because we don't match I.new(..) correctly. ODM 4/7/04">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Not binding constructor when using more than one compilation" pr="408" num="115" keywords="from-java,purejava" dir="new" abccomment="Need to compile second file, loading the CLASS file                    produced by the first compile.  Requires modifying                    behaviour of polyglot loader.  Aske looking into this                   as of July 1/04.  LJH                   Aske has made it so it can load a class file, but now                   abc cannot resolve InnerAspect when compiling the                    second file.  j2j seems to be able to do it, but                   not abc. July 6/04. LJH">
        <compile files="OuterAbstract_PR408.java"></compile>
        <compile includeClassesDir="true" files="ExtendsOuterAbstract_PR408.java"></compile>
        <compile includeClassesDir="true" files="ConstructorNotFound_PR408.java"></compile>
        <run class="ConstructorNotFound_PR408"></run>
    </ajc-test>
<ajc-test title="Default constructors have same access as their enclosing type" num="129" keywords="from-java" dir="pureJava/innerDefaultConstructors" abccomment="jlc doesn't report expected error.                   Reported to Nate on July 1/04.  LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="pkg1/Main.java,pkg2/Foo.java">
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="invalid numeric literals" num="149" keywords="from-java" dir="pureJava" abccomment="abc doesn't do a good job on these,  needs a parser                   that doesn't give up after the first error, and                   then each case needs to be check.  jlc probably does                   not catch all of them either.  July 1/04 LJH">
        <compile files="LiteralsCf.java">
            <message line="8" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="10" kind="error"></message>
            <message line="11" kind="error"></message>
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="20" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="22" kind="error"></message>
            <message line="23" kind="error"></message>
            <message line="25" kind="error"></message>
            <message line="27" kind="error"></message>
            <message line="28" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="30" kind="error"></message>
            <message line="32" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="type and package name conflicts caught as errors (1)" num="165" keywords="from-java,purejava" dir="pureJava/nameConflicts" abccomment="this is missing in jlc, but it seems less important                   than other problems, so won't report it to Nate                     just yet.  July 2/04 LJH">
        <compile files="p1/p2.java,p1/Main1.java,p1/Foo.java,p1/p2/Foo.java">
            <message line="3" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested finally blocks have interesting frame location problems" num="178" keywords="from-java" dir="pureJava" abccomment="jlc finds an error of return expected, but should                   compile without error.  Reported to Nate July 2/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NestedFinally.java"></compile>
        <run class="NestedFinally"></run>
    </ajc-test>
<ajc-test title="good error for bad field and inner class references" num="265" keywords="from-errors,purejava" dir="errors" abccomment="not pure java July 5/04 LJH                   polyglot does not find this error, sent to Nate,                        July 5/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="BadReferences.java">
            <message line="3" kind="error"></message>
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="class and interface extension" num="285" keywords="from-errors,purejava,messages-vary" dir="errors" abccomment="jlc not catching missing return statements">
        <compile options="!eclipse" files="BadExtension.java">
            <message line="7" kind="error"></message>
            <message line="9" kind="error"></message>
            <message line="16" kind="error"></message>
            <message line="17" kind="error"></message>
            <message line="18" kind="error"></message>
            <message line="19" kind="error"></message>
            <message line="21" kind="error"></message>
            <message line="35" kind="error"></message>
            <message line="38" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="parse-time illegal modifiers" num="307" keywords="from-errors,purejava" dir="errors" abccomment="Third error not found by jlc, file Modifiers1LJH.java                   sent to Nate.  July 6/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="Modifiers1.java">
            <message line="2" kind="error"></message>
            <message line="3" kind="error"></message>
            <message line="6" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="non-static advice on inner class defined inside of method body" num="358" keywords="from-resolved_10x" dir="new" abccomment="fails on use of thisJoinPoint when advice applies inside inner class;                  generates verify error. error goes away when use of thisJoinPoint is                  commented out. Emailed Ganesh. ODM 09/07/04">
        <compile files="MethodInner.java"></compile>
        <run class="MethodInner"></run>
    </ajc-test>
<ajc-test title="holding onto proceed calls in a closure-like way" num="410" keywords="from-resolved_10x,knownLimitation" dir="new">
        <compile files="HoldProceed.java"></compile>
        <run class="HoldProceed"></run>
    </ajc-test>
<ajc-test title="join points exist in the execution of field initializers" num="418" keywords="from-resolved_10x" dir="new">
        <compile files="FieldInitializerJoinPoints.java"></compile>
        <run class="FieldInitializerJoinPoints"></run>
    </ajc-test>
<ajc-test title="privileged aspects" num="419" keywords="from-resolved_10x" dir="new/privilegedAspects">
        <compile files="main/Main.java,fish/PrivateClass.java,fish/B.java,fowl/C.java,fowl/D.java"></compile>
        <run class="main.Main"></run>
    </ajc-test>
<ajc-test title="basic tests for initializer and staticinitializer PCDs" num="422" keywords="from-resolved_10x" dir="new">
        <compile files="InitializerTest.java"></compile>
        <run class="InitializerTest"></run>
    </ajc-test>
<ajc-test title="field patterns and subtyping" num="426" keywords="from-resolved_10x" dir="new">
        <compile files="FieldPatterns.java"></compile>
        <run class="FieldPatterns"></run>
    </ajc-test>
<ajc-test title="advice on an inherited method" pr="105" num="466" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnInheritedMethod.java"></compile>
        <run class="AdviceOnInheritedMethod"></run>
    </ajc-test>
<ajc-test title="advice on default constructor for a class only referenced via reflection" pr="241" num="470" keywords="from-resolved_10x" dir="new">
        <compile files="OddConstructors.java"></compile>
        <run class="OddConstructors"></run>
    </ajc-test>
<ajc-test title="primitive parameters coercable to Object just like return values are" pr="322" num="472" keywords="from-resolved_10x" dir="new">
        <compile files="ObjectForInt.java"></compile>
        <run class="ObjectForInt"></run>
    </ajc-test>
<ajc-test title="Reception based on strictfp modifier" num="478" keywords="from-resolved_10x" dir="new">
        <compile files="StrictFpReceptions.java"></compile>
        <run class="StrictFpReceptions"></run>
    </ajc-test>
<ajc-test title="private inner interfaces and bytecode visibility" pr="494" num="495" keywords="from-resolved_10x" dir="new/innerInterfaces">
        <compile files="p/Driver.java,p/InnerTest.java,other/Test.java"></compile>
        <run class="p.Driver"></run>
    </ajc-test>
<ajc-test title="elaborated into testing of around on all join points" pr="490" num="496" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundAll.java"></compile>
        <run class="AroundAll"></run>
    </ajc-test>
<ajc-test title="target type matching with messy interface hierarchies" num="499" keywords="from-resolved_10x" dir="new">
        <compile options="-1.4,-Xlint:ignore" files="CallTypesI.java"></compile>
        <run vm="1.4" class="CallTypesI"></run>
    </ajc-test>
<ajc-test title="interfaces as mixins with introduction" num="505" keywords="from-resolved_10x" dir="design/intro" abccomment="fails because we don't match I.new(..) correctly. ODM 04/07/04">
        <compile files="Interfaces.java"></compile>
        <run class="Interfaces"></run>
    </ajc-test>
<ajc-test title="functional modifiers work correctly with introduced members" num="50601" keywords="from-resolved_10x" dir="abctests/new" abccomment="test depends on implementation-specific naming convention, via reflection.                   Cloned from 506. ODM 11/08/04">
        <compile files="IntroducedModifiers.java"></compile>
        <run class="IntroducedModifiers"></run>
    </ajc-test>
<ajc-test title="validate (enclosing) join point and source locations" pr="525" num="518" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="NegativeSourceLocation.java"></compile>
        <run class="NegativeSourceLocation"></run>
    </ajc-test>
<ajc-test title="accessing protected superclass members in and outside CCC from body of method introduction" num="555" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroduction.java"></compile>
        <run class="SuperInIntroduction"></run>
    </ajc-test>
<ajc-test title="inner classes of privileged aspects cannot see target class private members" pr="555" num="580" keywords="from-resolved_10rc3" dir="new" abccomment="we give a warning about unspecified init order. ODM 12/08/04">
        <compile files="InnerClassInPrivilegedAspect.java">
             <message line="109" kind="warning"></message>
        </compile>
        <run class="InnerClassInPrivilegedAspect"></run>
    </ajc-test>
<ajc-test title="CE for ambiguous type reference (two files in package)" pr="701" num="634" keywords="from-resolved_105,purejava" dir="new" abccomment="jlc doesn't find error when two classes in same package                   have same name.  Reported to Nate July 6/04. LJH">
     <abckeywords> <nate></nate> <laurie></laurie> </abckeywords>
        <compile files="ambiguousClass/AmbiguousReferent.java,ambiguousClass/AmbiguousClassReference.java">
            <message line="5" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Incrementing interface-introduced field" pr="757" num="639" keywords="from-resolved_105" dir="new">
        <compile files="IntroducedFieldInc.java"></compile>
        <run class="IntroducedFieldInc"></run>
    </ajc-test>
<ajc-test title="flag errors when binding args with indeterminate prefix and suffix" pr="764" num="647" keywords="from-resolved_105,knownLimitation" dir="new">
        <compile files="IndeterminateArgsCE.java">
            <message line="67" kind="error"></message>
            <message line="68" kind="error"></message>
            <message line="70" kind="error"></message>
            <message line="72" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Compiling java.lang.Object with ajc yields non-verifying bytecode" pr="762" num="653" keywords="from-resolved_105" dir="new/nolang" comment="XXX weak/bad test">
	    <compile files="java/lang/Object.java,java/lang/String.java">
	    </compile>
	</ajc-test>
<ajc-test title="CE expected for assignment to arg in if pcd" num="655" keywords="from-resolved_105" dir="new">
        <compile files="IfPCDAssignmentCE.java">
            <message line="16" kind="error"></message>
            <message line="20" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="assert coverage tests in one package [requires 1.4]" num="667" keywords="from-14tests,purejava,fail-unimplemented" dir="pureJava" abccomment="seems to be broken in j2j, sent to Jennifer July 7/04 LJH">
        <abckeywords> <jennifer></jennifer> <laurie></laurie> </abckeywords>
        <compile options="-source,1.4" files="AssertInOnePackage.java"></compile>
        <run vm="1.4" class="AssertInOnePackage"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars" pr="386" num="675" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="tries to import inner classes invalidly,                     but we don't flag the error at import time (cf 679)">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile includeClassesDir="true" files="ImportingStaticInnerInterfacesStars_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars 2" pr="386" num="676" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="tries to import inner classes invalidly,                     but we don't flag the error at import time (cf 679)">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile includeClassesDir="true" files="ImportingStaticInnerInterfacesStars2_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars2_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing static interfaces with import statements stars 3" pr="386" num="677" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="tries to import inner classes invalidly,                     but we don't flag the error at import time (cf 679)">
        <compile files="ClassWithStaticInnerInterfaces.java"></compile>
        <compile includeClassesDir="true" files="ImportingStaticInnerInterfacesStars3_PR386.java"></compile>
        <run class="ImportingStaticInnerInterfacesStars3_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars" pr="386" num="679" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="polyglot should be reporting an error on the import                    statements, as with number 678; once it does, skip this or                    mark them as errors">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars 2" pr="386" num="680" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="polyglot should be reporting an error on the import                    statements, as with number 678; once it does, skip this or                    mark them as errors">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars2_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars2_PR386"></run>
    </ajc-test>
<ajc-test title="Referencing interfaces with import statements stars 3" pr="386" num="681" keywords="purejava,from-broken14usejavac" dir="pureJava" abccomment="polyglot should be reporting an error on the import                    statements, as with number 678; once it does, skip this or                    mark them as errors">
        <compile files="ClassWithInnerInterfaces.java,ImportingInnerInterfacesStars3_PR386.java"></compile>
        <run class="ImportingInnerInterfacesStars3_PR386"></run>
    </ajc-test>
<ajc-test title="declaring a private method on an inner interface" pr="823" num="684" keywords="tofix" dir="new">
        <compile files="PrivateMethodOnInnerInterface.java"></compile>
        <run class="PrivateMethodOnInnerInterface"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor" pr="889" num="691" dir="new">
        <compile files="AfterReturningInterfaceConstructor.java"></compile>
        <run class="AfterReturningInterfaceConstructor"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface constructor - error" pr="889" num="692" dir="new">
        <compile files="AfterReturningInterfaceConstructorCE.java">
        	<message line="26" kind="error"></message>
        	<message line="30" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="self-reference from (aspect-declared) method-local class" pr="776" num="713" dir="new">
        <compile files="MethodSelfReference.java"></compile>
        <run class="MethodSelfReference"></run>
    </ajc-test>
<ajc-test title="after returning advice on interface and implementation constructor" pr="827" num="718" keywords="tofix" dir="new" abccomment="use of before keyword inside an aspect; skip this                   when the test harness no longer reports errors where the                   command-line invocation doesn't (are we resetting the lexer                   state?)">
        <compile files="AfterReturningConstructor.java"></compile>
        <run class="AfterReturningConstructor"></run>
    </ajc-test>
<ajc-test title="declare class implements class" pr="853" num="724" dir="new" abccomment="we should accept implements instead of extends">
        <compile files="DeclareClassImplementsClass.java">
        </compile>
    </ajc-test>
<ajc-test title="inter-type fields with array types" pr="29113" num="733" dir="bugs">
        <compile files="InterFieldArrays.java"></compile>
        <run class="InterFieldArrays"></run>
    </ajc-test>
<ajc-test title="checking around join point for advice return type - numeric" pr="838" num="735" dir="new">
        <compile files="AroundNumericCastCE.java">
            <message line="12" kind="error"></message>
            <message line="17" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="void around advice without proceed" pr="836" num="736" dir="new">
        <compile files="VoidAround.java">
            <message line="11" kind="error"></message>
            <message line="29" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="problems with finalize call" pr="30026" num="752" dir="bugs">
        <compile files="Finalizer.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="can't resolve nested public interfaces (also PR#32399)" pr="32421" num="756" dir="bugs/interfaceNames">
        <compile files="TransactionTest.java,sub/ExecutionMonitor.java,sub/ObserverProtocol.aj"></compile>
        <run class="TransactionTest"></run>
    </ajc-test>
<ajc-test title="cflow binding issues with ignoring state" pr="34858" num="764" dir="bugs">
        <compile files="CflowBinding.java"></compile>
        <run class="CflowBinding"></run>
    </ajc-test>
<ajc-test title="declare soft and throw statements" pr="34925" num="772" dir="bugs">
        <compile files="ConvertToUnchecked.java"></compile>
        <run class="ConvertToUnchecked"></run>
    </ajc-test>
<ajc-test title="Declare parents removing ancestor" num="776" keywords="from-new" dir="new/declareParents">
        <compile files="IllegalAdoption.java">
            <message line="13" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="Ajc 1.1 rc1 java.lang.VerifyError with messy arounds" pr="36056" num="784" dir="bugs/messyAround">
        <compile files="aspects/Trace.aj,cap/OptionList.java,DebugTrace.aj">
            <message line="102" kind="warning"></message>
        	<message line="124" kind="warning"></message>
        	<message line="138" kind="warning"></message>
        </compile>
        <run class="cap.OptionList"></run>
    </ajc-test>
<ajc-test title="try/finally in around advice (same as ...messy arounds?)" num="785" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="TryFinallyInAround.java"></compile>
        <run class="TryFinallyInAround"></run>
    </ajc-test>
<ajc-test title="can not resolve this member warning" pr="38212" num="832" dir="bugs/accessMethods">
        <compile files="p1/Base.java,p2/Derived.java"></compile>
        <run class="p2.Derived"></run>
    </ajc-test>
<ajc-test title="After throwing advice on ctors doesn't execute for inter-type decl field inits" pr="44586" num="898" dir="bugs" abccomment="ITD field initialisers should not appear in the exec jps of host constructors, but                     they do appear in initialisation jps of the same. Need to discuss with Ganesh.                     ODM 19/07/04">
        <compile files="AfterThrowingCtor.java">
        </compile>
  		<run class="AfterThrowingCtor"></run>
    </ajc-test>
<ajc-test title="Regression from 1.1: NPE in CompilationResult" pr="58679" num="963" dir="bugs/tooManyErrors">
        <compile files="Joinpoints101.jar,DecErrors.aj">
         
          <message line="10" kind="error"></message><message line="11" kind="error"></message>
          <message line="12" kind="error"></message><message line="13" kind="error"></message>
          <message line="14" kind="error"></message>

          <message line="16" kind="error"></message><message line="17" kind="error"></message>
          <message line="18" kind="error"></message><message line="19" kind="error"></message>
          <message line="20" kind="error"></message>
 
          <message line="22" kind="error"></message><message line="23" kind="error"></message>
          <message line="24" kind="error"></message><message line="25" kind="error"></message>
          <message line="26" kind="error"></message>
 
          <message line="28" kind="error"></message><message line="29" kind="error"></message>
          <message line="30" kind="error"></message><message line="31" kind="error"></message>
          <message line="32" kind="error"></message>
  
          <message line="34" kind="error"></message><message line="35" kind="error"></message>
          <message line="36" kind="error"></message><message line="37" kind="error"></message>
          <message line="38" kind="error"></message>
 
          <message line="40" kind="error"></message><message line="41" kind="error"></message>
          <message line="42" kind="error"></message><message line="43" kind="error"></message>
          <message line="44" kind="error"></message>
          
          <message line="46" kind="error"></message><message line="47" kind="error"></message>
          <message line="48" kind="error"></message><message line="49" kind="error"></message>
          <message line="50" kind="error"></message>
 
          <message line="52" kind="error"></message><message line="53" kind="error"></message>
          <message line="54" kind="error"></message><message line="55" kind="error"></message>
          <message line="56" kind="error"></message>
  
          <message line="58" kind="error"></message><message line="59" kind="error"></message>
          <message line="60" kind="error"></message><message line="61" kind="error"></message>
          <message line="62" kind="error"></message>
 
          <message line="64" kind="error"></message><message line="65" kind="error"></message>
          <message line="66" kind="error"></message><message line="67" kind="error"></message>
          <message line="68" kind="error"></message>
          
          <message line="70" kind="error"></message><message line="71" kind="error"></message>
          <message line="72" kind="error"></message><message line="73" kind="error"></message>
          <message line="74" kind="error"></message>
 
          <message line="76" kind="error"></message><message line="77" kind="error"></message>
          <message line="78" kind="error"></message><message line="79" kind="error"></message>
          <message line="80" kind="error"></message>
  
          <message line="82" kind="error"></message><message line="83" kind="error"></message>
          <message line="84" kind="error"></message><message line="85" kind="error"></message>
          <message line="86" kind="error"></message>
 
          <message line="88" kind="error"></message><message line="89" kind="error"></message>
          <message line="90" kind="error"></message><message line="91" kind="error"></message>
          <message line="92" kind="error"></message>
          
          <message line="94" kind="error"></message><message line="95" kind="error"></message>
          <message line="96" kind="error"></message><message line="97" kind="error"></message>
          <message line="98" kind="error"></message>
 
          <message line="100" kind="error"></message><message line="101" kind="error"></message>
          <message line="102" kind="error"></message><message line="103" kind="error"></message>
          <message line="104" kind="error"></message>
  
          <message line="106" kind="error"></message><message line="107" kind="error"></message>
          <message line="108" kind="error"></message><message line="109" kind="error"></message>
          <message line="110" kind="error"></message>
 
          <message line="112" kind="error"></message><message line="113" kind="error"></message>
          <message line="114" kind="error"></message><message line="115" kind="error"></message>
          <message line="116" kind="error"></message>
          
          <message line="118" kind="error"></message><message line="119" kind="error"></message>
          <message line="120" kind="error"></message><message line="121" kind="error"></message>
          <message line="122" kind="error"></message>
  
          <message line="124" kind="error"></message><message line="125" kind="error"></message>
          <message line="126" kind="error"></message><message line="127" kind="error"></message>
          <message line="128" kind="error"></message>
 
          <message line="130" kind="error"></message>
          
        </compile>
    </ajc-test>
<ajc-test title="error message for constructor-execution pcd" pr="60936" num="970" dir="bugs">
        <compile files="InterfaceConstructor.java">
          <message text="no interface constructor-execution join point" line="10" kind="warning"></message>
        </compile>
    </ajc-test>
 
</suite>
