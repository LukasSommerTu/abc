<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="DEPRECATED: introductions" num="10" keywords="from-base" dir="base/test103">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="advises on introduced methods and constructors" num="28" keywords="from-base" dir="base/test121" abccomment="test extra parameters introduced by ITDs. Fixed ODM Jul 5">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: Method introduction into interface implemented by abstract class" num="29" keywords="from-base" dir="base/test122">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED:  introduce weaves can use this" num="35" keywords="from-base" dir="base/test128">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="DEPRECATED: introduce of abstract methods works" num="36" keywords="from-base" dir="base/test129">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="aspect inheritance and advice, introduction" num="46" keywords="from-base" dir="base/test140">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="type and package name conflicts caught as errors (1)" num="165" keywords="from-java,purejava" dir="pureJava/nameConflicts" abccomment="this is missing in jlc, but it seems less important                   than other problems, so won't report it to Nate                     just yet.  July 2/04 LJH.                   Has been fixed in polyglot, but gives a different line                   number,  should be ok.  August 26/04 LJH">
        <compile files="p1/p2.java,p1/Main1.java,p1/Foo.java,p1/p2/Foo.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="nested finally blocks have interesting frame location problems" num="178" keywords="from-java" dir="pureJava" abccomment="jlc finds an error of return expected, but should                   compile without error.  Reported to Nate July 2/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NestedFinally.java"></compile>
        <run class="NestedFinally"></run>
    </ajc-test>
<ajc-test title="initial tests for new introduction style" num="320" keywords="from-design" dir="design/intro">
        <compile files="Simple.java"></compile>
        <run class="Simple"></run>
    </ajc-test>
<ajc-test title="overriding of introduced methods and accessibility" num="321" keywords="from-design" dir="design/intro">
        <compile files="Overriding.java"></compile>
        <run class="Overriding"></run>
    </ajc-test>
<ajc-test title="within and introductions behaves correctly" num="322" keywords="from-design" dir="design/intro">
        <compile files="Within.java"></compile>
        <run class="Within"></run>
    </ajc-test>
<ajc-test title="correct inheritance of multiple concrete methods" pr="570" num="324" keywords="from-design" dir="design/intro">
        <compile files="MultiInheritCP.java"></compile>
        <run class="MultiInheritCP"></run>
    </ajc-test>
<ajc-test title="declared exceptions are checked correctly on intros" num="331" dir="design/intro">
        <compile files="ExceptionsCP.java"></compile>
        <run class="ExceptionsCP"></run>
    </ajc-test>
<ajc-test title="make sure advice affects introduced methods and constructors" num="340" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOnIntroduced.java"></compile>
        <run class="AdviceOnIntroduced"></run>
    </ajc-test>
<ajc-test title="checks that methods are introduced on the topmost class implemented" pr="126" num="351" keywords="from-resolved_10x" dir="new">
        <compile files="TopmostImplements.java"></compile>
        <run class="TopmostImplements"></run>
    </ajc-test>
<ajc-test title="Introductions on other introductions" num="381" keywords="from-resolved_10x" dir="new">
        <compile files="IntroOnIntro.java"></compile>
        <run class="IntroOnIntro"></run>
    </ajc-test>
<ajc-test title="Ensures introduction methods can have advice placed on them" num="393" keywords="from-resolved_10x" dir="new">
        <compile files="Dominates.java"></compile>
        <run class="Dominates"></run>
    </ajc-test>
<ajc-test title="Parsing C+ expressions without parens in super introductions." num="403" keywords="from-resolved_10x" dir="new">
        <compile files="ParsingSubtypesIntroductions.java"></compile>
        <run class="ParsingSubtypesIntroductions"></run>
    </ajc-test>
<ajc-test title="Introducing methods on classes that implements inner-interfaces with +implements." num="404" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="IntroducingMethodsOnPlusImplementedInterfaces.java"></compile>
        <run class="IntroducingMethodsOnPlusImplementedInterfaces"></run>
    </ajc-test>
<ajc-test title="implements and extends are introduced before methods and fields" num="415" keywords="from-resolved_10x" dir="new">
        <compile files="IntroOrder.java"></compile>
        <run class="IntroOrder"></run>
    </ajc-test>
<ajc-test title="Crashes with privileged aspect." num="417" keywords="from-resolved_10x" dir="new">
        <compile files="Privileged.java"></compile>
        <run class="Privileged"></run>
    </ajc-test>
<ajc-test title="privileged aspects" num="419" keywords="from-resolved_10x" dir="new/privilegedAspects">
        <compile files="main/Main.java,fish/PrivateClass.java,fish/B.java,fowl/C.java,fowl/D.java"></compile>
        <run class="main.Main"></run>
    </ajc-test>
<ajc-test title="Introducing synchronized methods on interfaces." num="428" keywords="from-resolved_10x" dir="new">
        <compile files="SynchronizedMethodsOnInterfaces.java"></compile>
        <run class="SynchronizedMethodsOnInterfaces"></run>
    </ajc-test>
<ajc-test title="Method introductions" num="443" keywords="from-resolved_10x" dir="new">
        <compile files="MethodIntroductions.java"></compile>
        <run class="MethodIntroductions"></run>
    </ajc-test>
<ajc-test title="Putting an introduced method on each interface" num="444" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducedMethodsOnEachInterface.java"></compile>
        <run class="IntroducedMethodsOnEachInterface"></run>
    </ajc-test>
<ajc-test title="Introducing private methods on interfaces" num="446" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducingPrivateMethodsOnInterfaces.java"></compile>
        <run class="IntroducingPrivateMethodsOnInterfaces"></run>
    </ajc-test>
<ajc-test title="Static references inside of introduced bodies get bound correctly." num="448" keywords="from-resolved_10x" dir="new">
        <compile files="StaticIntroducedReferences.java"></compile>
        <run class="StaticIntroducedReferences"></run>
    </ajc-test>
<ajc-test title="elaborated into testing of around on all join points" pr="490" num="496" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundAll.java"></compile>
        <run class="AroundAll"></run>
    </ajc-test>
<ajc-test title="Unable to bind privately-introduced field name from introduced method in the same aspect" num="502" keywords="from-resolved_10x" dir="new">
        <compile files="IntroducedFieldsNotBinding.java"></compile>
        <run class="IntroducedFieldsNotBinding"></run>
    </ajc-test>
<ajc-test title="compile error using pcd if() with advice on introduced methods." pr="527" num="510" keywords="from-resolved_10x" dir="new">
        <compile files="PR527.java"></compile>
        <run class="PR527"></run>
    </ajc-test>
<ajc-test title="compile errors boolean using cflow and unimplemented method using around advice on methods introduced by interface" pr="528" num="511" keywords="from-resolved_10x" dir="new">
        <compile files="PR528.java"></compile>
        <run class="PR528"></run>
    </ajc-test>
<ajc-test title="potential method conflicts with introductions and interfaces and PR#561" pr="570" num="522" keywords="from-resolved_10x" dir="new">
        <compile files="MethodConflictsCP.java"></compile>
        <run class="MethodConflictsCP"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to cast expressions in introduced methods" num="529" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="Cast.java,TargetClass.java,Util.java"></compile>
        <run class="Cast"></run>
    </ajc-test>
<ajc-test title="Introduced type unavailable to qualified new expressions in introduced methods" num="530" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="Inner.java,TargetClass.java,Util.java"></compile>
        <run class="Inner"></run>
    </ajc-test>
<ajc-test title="Aspect type unavailable to qualified new expressions in body of introduced methods" num="532" keywords="from-resolved_10x" dir="new/introTypeMissing">
        <compile files="AspectInIntroducedMethod.java"></compile>
        <run class="AspectInIntroducedMethod"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 1)" pr="600" num="539" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,A.java,B.java,C.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 2)" pr="600" num="540" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="Main.java,My_error.java,C.java,A.java,B.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 3)" pr="600" num="541" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="My_error.java,A.java,B.java,C.java,Main.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 4)" pr="600" num="542" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,C.java,Main.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="AbstractMethodError for introduced methods (order 5)" pr="600" num="543" keywords="from-resolved_10x" dir="new/PR600">
        <compile files="A.java,B.java,Main.java,C.java,My_error.java"></compile>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="Exercise runtime classes (optionally in 1.1 VM)" num="545" keywords="from-resolved_10x" dir="new/runtime">
        <compile files="AllRuntime.java,TesterDriver.java"></compile>
        <run class="TesterDriver"></run>
    </ajc-test>
<ajc-test title="accessing protected superclass members in and outside CCC from body of method introduction" num="555" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroduction.java"></compile>
        <run class="SuperInIntroduction"></run>
    </ajc-test>
<ajc-test title="Overriding method implementations using introduction on interfaces" pr="654" num="569" keywords="from-resolved_10x,fail-unimplemented" dir="new">
        <compile options="-Xlint:ignore" files="IntroductionsOverriding.java"></compile>
        <run class="IntroductionsOverriding"></run>
    </ajc-test>
<ajc-test title="more coverage for around and concrete methods on interfaces" pr="654" num="570" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="MultiAndAround.java"></compile>
        <run class="MultiAndAround"></run>
    </ajc-test>
<ajc-test title="inner classes of privileged aspects cannot see target class private members" pr="555" num="580" keywords="from-resolved_10rc3" dir="new">
        <compile files="InnerClassInPrivilegedAspect.java"></compile>
        <run class="InnerClassInPrivilegedAspect"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (names)" pr="685" num="590" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceNames.java"></compile>
        <run class="InnerInterfaceNames"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (access)" pr="685" num="591" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceAccess.java"></compile>
        <run class="InnerInterfaceAccess"></run>
    </ajc-test>
<ajc-test title="subaspect method declaration on superaspect inner interface (types)" pr="685" num="592" keywords="from-resolved_104" dir="new">
        <compile files="InnerInterfaceTypes.java,InnerInterfaceTypesHelper.java"></compile>
        <run class="InnerInterfaceTypes"></run>
    </ajc-test>
<ajc-test title="default package for aspect introductions is not the current package" pr="548" num="597" keywords="from-resolved_10rc3,from-resolved_104" dir="new">
        <compile files="introductionPackage/two/C.java,introductionPackage/one/C.java,introductionPackage/one/Aspect.java,introductionPackage/one/TestAspect.java"></compile>
        <run class="one.TestAspect"></run>
    </ajc-test>
<ajc-test title="anon class written to wrong directory" pr="569" num="598" keywords="from-resolved_104,from-resolved_104" dir="new/PR569">
        <compile files="a/IntroAnon.java,a/MyInterface.java,b/Dest.java"></compile>
        <run class="a.IntroAnon"></run>
    </ajc-test>
<ajc-test title="type pattern matching for inner classes (from Ken Horn)" num="64301" keywords="from-resolved_105" dir="abctests/new">
        <compile files="test/TypePat.java"></compile>
        <run class="test.TypePat"></run>
    </ajc-test>
<ajc-test title="assert tests in introduction [requires 1.4]" num="668" keywords="from-14tests,fail-unimplemented" dir="new">
        <compile options="-source,1.4" files="AssertInIntro.java"></compile>
        <run vm="1.4" class="AssertInIntro"></run>
    </ajc-test>
<ajc-test title="assert statement in advice  [requires 1.4]" pr="657" num="683" keywords="from-14tests,fail-in-eclipse" dir="new">
        <compile options="-source,1.4" files="AssertInAdviceBug.java"></compile>
        <run vm="1.4" class="AssertInAdviceBug"></run>
    </ajc-test>
<ajc-test title="declaring a private method on an inner interface" pr="823" num="684" keywords="tofix" dir="new">
        <compile files="PrivateMethodOnInnerInterface.java"></compile>
        <run class="PrivateMethodOnInnerInterface"></run>
    </ajc-test>
<ajc-test title="self-reference from (aspect-declared) method-local class" pr="776" num="713" dir="new">
        <compile files="MethodSelfReference.java"></compile>
        <run class="MethodSelfReference"></run>
    </ajc-test>
<ajc-test title="subtype pattern in dominates should pick out aspect subtypes" num="716" dir="new">
        <compile files="DominatesTypePattern.java"></compile>
        <run class="DominatesTypePattern"></run>
    </ajc-test>
<ajc-test title="declared exceptions in inter-type decls" pr="29106" num="731" dir="bugs">
        <compile files="ExceptionsOnInters.java"></compile>
        <run class="ExceptionsOnInters"></run>
    </ajc-test>
<ajc-test title="inter-type fields with array types" pr="29113" num="733" dir="bugs">
        <compile files="InterFieldArrays.java"></compile>
        <run class="InterFieldArrays"></run>
    </ajc-test>
<ajc-test title="declaring method on superclass and subclass" pr="852" num="737" dir="new/PR852">
        <compile files="aspectPack/Aspect.java,target/SubClass.java,target/SuperClass.java">
          <dir-changes added="target.SubClass,target.SuperClass"></dir-changes>
        </compile>
        <run class="aspectPack.Aspect"></run>
    </ajc-test>
<ajc-test title="import any inner from interface implementor" pr="862" num="740" keywords="purejava" dir="new/PR862" abccomment="it is not legal to import inner classes">
        <compile files="pack/ImportInnerFromInterfaceImplementor.java">
          <dir-changes added="pack.ImportInnerFromInterfaceImplementor"></dir-changes>
        </compile>
        <run class="pack.ImportInnerFromInterfaceImplementor"></run>
    </ajc-test>
<ajc-test title="super call in intertype method declaration body causes VerifyError" pr="29959" num="749" dir="bugs">
        <compile files="SuperToIntro.java"></compile>
        <run class="SuperToIntro"></run>
    </ajc-test>
<ajc-test title="problems with finalize call" pr="30026" num="752" dir="bugs">
        <compile files="Finalizer.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal name binding in around cflow" pr="660" num="769" keywords="from-resolved_104,knownLimitation" dir="new" abccomment="ajc doesn't report errors either and then breaks at runtime,                   just like we do">
        <compile files="ArgsInCflowCf.java">
            <message line="19" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="35" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare soft and throw statements" pr="34925" num="77201" dir="abctests/bugs" abccomment="Cloned from 772, removing the offending parentheses.                   ODM 17/08/04">
        <compile files="ConvertToUnchecked.java"></compile>
        <run class="ConvertToUnchecked"></run>
    </ajc-test>
<ajc-test title="inter-type declaration bug with abstract classes" pr="36046" num="773" dir="bugs/interAbstract">
        <compile files="Driver.java"></compile>
        <run class="Driver"></run>
    </ajc-test>
<ajc-test title="Inter type declaration to base class not seen by derived class" pr="35725" num="774" dir="bugs/interInherit">
        <compile files="a_impl/AImpl.java,a_impl/Af.java,a_intf/A.java,b_impl/BImpl.java,b_intf/B.java"></compile>
        <run class="b_impl.BImpl"></run>
    </ajc-test>
<ajc-test title="options -injars checking declare parents interactions" pr="35865" num="777" dir="options/injars/simple">
        <compile options="!eclipse" files="DecParents.java,main.jar"></compile>
        <run class="DecParents"></run>
    </ajc-test>
<ajc-test title="IllegalAccessError while accessing introduced variable / 1.1rc1" pr="36110" num="778" dir="bugs/interSpecials">
        <compile files="p1/C.java,p2/A1.java"></compile>
        <run class="p2.A1"></run>
    </ajc-test>
<ajc-test title="testing that assert works like .class" pr="36110" num="779" dir="bugs/interSpecials">
        <compile options="-source,1.4" files="p1/C.java,p2/A2.java"></compile>
        <run vm="1.4" class="p2.A2"></run>
    </ajc-test>
<ajc-test title="privileged aspect main verify error" pr="36673" num="781" dir="new/verifyError">
        <compile files="Privilege.java"></compile>
        <run class="Privilege"></run>
    </ajc-test>
<ajc-test title="CLE: no dir specified for sourceroots" num="812" keywords="command-line-error" dir="harness" comment="XXX test skipped - harness ignores -sourceroot option">
        <compile options="-sourceroots" files="ErrorTest.java" badInput="true">
            <message text="no sources specified" kind="error"></message>
            <message text="bad sourceroot" kind="error"></message>
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="ajc stack trace on declaring hashcode() method in aspect" pr="39993" num="838" dir="bugs">
        <compile files="OverridingInterfaceObjectMethod.java"></compile>
        <run class="OverridingInterfaceObjectMethod"></run>
    </ajc-test>
<ajc-test title="Default method impl for interface causes internal exception." pr="40589" num="842" dir="bugs">
        <compile files="CloneMethod.java"></compile>
        <run class="CloneMethod"></run>
    </ajc-test>
<ajc-test title="aspect-declared interface members in libraries - baseline" num="849" dir="new/interfaceLibrary">
		<compile files="lib/LibraryInterface.java,       Client.java,       LibraryAspect.java"></compile>
		<run class="Client"></run>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared interface methods - positive" num="857" dir="bugs/interfaceLibrary" abccomment="problem with loosing exception clauses on newly created soot methods. emailed abc list 19/07/04. ODM">
		<compile files="Client.java,LibraryAspect.java,lib/LibraryInterface.java"></compile>
		<run class="Client"></run>
		</ajc-test>
<ajc-test title="exception clause for aspect-declared class methods - positive" num="859" dir="bugs/interfaceLibrary">
		<compile files="ClassClient.java,LibraryClassAspect.java,lib/LibraryClass.java"></compile>
		<run class="ClassClient"></run>
		</ajc-test>
<ajc-test title="Introduced abstract method on interface not implemented by subtype (weave altogether)" pr="49784" num="900" dir="bugs/abstractMethods">
        <compile files="interface/C.java,interface/A.java,interface/B.java"></compile>
        <run class="C"></run>
    </ajc-test>
<ajc-test title="Introduced abstract method on abstract class with introduced concrete method (single source file)" pr="49784" num="904" dir="bugs/abstractMethods">
        <compile files="singlesource/C1.java"></compile>
        <run class="C1"></run>
    </ajc-test>
<ajc-test title="Use class implementing interface via aspect (weave all together)" pr="43972" num="910" dir="bugs/interfaceDefinition">
        <compile files="pack/DefineInterface.java,              pack/InterfaceDefinition.java,              pack/MyInterface.java,              Main.java"></compile>
        <run class="pack.InterfaceDefinition"></run>
        <run class="Main"></run>
    </ajc-test>
<ajc-test title="-deprecation not working?" pr="54098" num="951" dir="bugs/deprecated" abccomment="we don't support deprecation">
    	 <compile options="-deprecation" files="Deprecation.java, Deprecated.java">
            <message line="5" kind="warning"></message>
            <message line="6" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="Matching int[].clone()" num="986" dir="abctests/bugs" abccomment="abc fails to parse 'call(* int[].clone())', ajc fails to advise it.         Both work fine with 'call(* Object.clone())'.">
	<compile files="IntArray.java"></compile>
	<run class="IntArray"></run>
    </ajc-test>
<ajc-test title="method intertype onto inner class" num="987" dir="abctests/bugs" abccomment="abc fails in generation of accessors; ajc fails                     at runtime">
	<compile files="QualThis.java"></compile>
	<run class="QualThis"></run>
    </ajc-test>
<ajc-test title="cast pointcut can interact badly with jimple type assignment" num="992" dir="abctests/bugs">
       <compile options="-ext,abc.eaj" files="cast.jar,CastAspect.java"></compile>
       <run class="Cast"></run>
    </ajc-test>
<ajc-test title="resolving anonymous classes inside classes with dollar signs" num="1001" dir="abctests/bugs">
         <compile files="ExtraAnon.java"></compile>
    </ajc-test>
<ajc-test title="correct topological sorting of precedence" num="1015" dir="abctests/bugs">
         <compile files="PrecedenceSort.java"></compile>
    </ajc-test>
 
</suite>
