/* abc - The AspectBench Compiler
 * Copyright (C) 2004 Julian Tibble
 *
 * This compiler is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this compiler, in the file LESSER-GPL;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

include "../../../src/abc/aspectj/parse/aspectj.ppg"

package abcexer1.parse;

import abcexer1.ast.*;

import polyglot.ext.jl.parse.Name;

parser Grm extends abc.aspectj.parse.Grm {:
    public final Abcexer1NodeFactory nf;

    public Grm(Lexer l, TypeSystem t, NodeFactory n, ErrorQueue q) {
        super(l, t, n, q);
        nf = (Abcexer1NodeFactory) n;
    }
:};


// ------- new tokens ------------------------------

terminal Token SURROUND;

// ------- new non-terminals -----------------------

// (none)


start with goal;

extend advice_declaration ::=
modifiers_opt:m SURROUND:x LPAREN formal_parameter_list_opt:a RPAREN:y throws_opt:b COLON pointcut_expr:c 
	method_body:d 
	method_body:e 
		{: Grm.parserTrace("surround(formals){beforeadvice}{afteradvice} (advice declaration without strictfp)");
          TypeNode voidn =  parser.nf.CanonicalTypeNode(parser.pos(d),
                                                        parser.ts.Void());
          Surround r = parser.nf.Surround(parser.pos(x,y),a,voidn);

          AdviceDecl ad = parser.nf.SurroundAdviceDecl(parser.pos(d,e),
					       m,
                                               r,
                                               b,
					       c,
	                                       d, e);
          RESULT = ad;  :}
       ;

       
       