<suite xmlns="http://www.comlab.ox.ac.uk/abc" xmlns:ns="http://www.comlab.ox.ac.uk/abc"> 
 <ajc-test title="handle multiple nested inner classes" num="53" keywords="from-java" dir="new" abccomment="can't find constructor for                     javax.swing.JComponent.AccessibleJComponent()                   - works with javac                   - works with soot from class file                   - does not work with j2j                   - does not work with jlc, reported to Nate June 30/04 LJH                   FIXED July 1/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="InnerHell.java"></compile>
        <run class="InnerHell"></run>
    </ajc-test>
<ajc-test title="Not binding constructor when using more than one compilation" pr="408" num="115" keywords="from-java,purejava" dir="new" abccomment="Need to compile second file, loading the CLASS file                    produced by the first compile.  Requires modifying                    behaviour of polyglot loader.  Aske looking into this                   as of July 1/04.  LJH                   Aske has made it so it can load a class file, but now                   abc cannot resolve InnerAspect when compiling the                    second file.  j2j seems to be able to do it, but                   not abc. July 6/04. LJH">
        <compile files="OuterAbstract_PR408.java"></compile>
        <compile includeClassesDir="true" files="ExtendsOuterAbstract_PR408.java"></compile>
        <compile includeClassesDir="true" files="ConstructorNotFound_PR408.java"></compile>
        <run class="ConstructorNotFound_PR408"></run>
    </ajc-test>
<ajc-test title="breaking out of a labeled block inside of an if" num="124" keywords="from-java" dir="pureJava">
        <compile files="Breaks.java"></compile>
        <run class="Breaks"></run>
    </ajc-test>
<ajc-test title="local types can be bound in the signatures of other local types" pr="547" num="154" keywords="from-resolved_10rc3,from-java" dir="pureJava">
        <compile files="LocalInners.java"></compile>
        <run class="LocalInners"></run>
    </ajc-test>
<ajc-test title="type and package name conflicts caught as errors (1)" num="165" keywords="from-java,purejava" dir="pureJava/nameConflicts" abccomment="this is missing in jlc, but it seems less important                   than other problems, so won't report it to Nate                     just yet.  July 2/04 LJH.                   Has been fixed in polyglot, but gives a different line                   number,  should be ok.  August 26/04 LJH">
        <compile files="p1/p2.java,p1/Main1.java,p1/Foo.java,p1/p2/Foo.java">
            <ajcmessage line="3" kind="error"></ajcmessage>
            <message line="8" kind="error"></message>
            <jamessage line="3" kind="error"></jamessage>
        </compile>
    </ajc-test>
<ajc-test title="nested finally blocks have interesting frame location problems" num="178" keywords="from-java" dir="pureJava" abccomment="jlc finds an error of return expected, but should                   compile without error.  Reported to Nate July 2/04 LJH">
      <abckeywords> <laurie></laurie> <nate></nate> </abckeywords>
        <compile files="NestedFinally.java"></compile>
        <run class="NestedFinally"></run>
    </ajc-test>
<ajc-test title="interfaces with non-explicitly static inner classes" pr="680" num="190" keywords="from-java" dir="pureJava" abccomment="Probably a j2j error, reported to Jennifer July 3/04 LJH">
        <compile files="InterfaceAndInnerHelper.java"></compile>
        <compile includeClassesDir="true" files="InterfaceAndInner.java"></compile>
        <run class="InterfaceAndInner"></run>
    </ajc-test>
<ajc-test title="advice and package visibility 1" pr="106" num="345" keywords="from-resolved_10x" dir="new">
        <compile options="-Xlint:ignore" files="packagevisibility/PackagesAndAdvice.java,packagevisibility/testPackage/Class1.java,packagevisibility/testPackage/Class2.java"></compile>
        <run class="packagevisibility.PackagesAndAdvice"></run>
    </ajc-test>
<ajc-test title="around advice on calls within inner classes (including protected method calls) 1" num="440" keywords="from-resolved_10x" dir="new">
        <compile options="-1.3" files="AroundInnerCalls13.java"></compile>
        <run class="AroundInnerCalls13"></run>
    </ajc-test>
<ajc-test title="ordering of advice kinds as well as cflow and dominates" num="469" keywords="from-resolved_10x" dir="new">
        <compile files="AdviceOrdering.java"></compile>
        <run class="AdviceOrdering"></run>
    </ajc-test>
<ajc-test title="elaborated into testing of around on all join points" pr="490" num="496" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundAll.java"></compile>
        <run class="AroundAll"></run>
    </ajc-test>
<ajc-test title="unreproduced bug with advice - probably UTR" pr="521" num="516" keywords="from-resolved_10x" dir="new">
        <compile files="PR520.java"></compile>
        <run class="PR520"></run>
    </ajc-test>
<ajc-test title="accessing protected superclass members in and outside CCC from body of method introduction" num="555" keywords="from-resolved_10x" dir="new">
        <compile files="SuperInIntroduction.java"></compile>
        <run class="SuperInIntroduction"></run>
    </ajc-test>
<ajc-test title="unreachable code generated by around advice on the execution of void methods" num="568" keywords="from-resolved_10x" dir="new" abccomment="around weaver internal error - Sascha emailed - AGS 1/7/04">
        <compile files="AroundVoid.java"></compile>
        <run class="AroundVoid"></run>
    </ajc-test>
<ajc-test title="final local variables may be accessed from inner class" pr="739" num="629" keywords="from-resolved_105,purejava" dir="pureJava">
        <compile files="LocalsFromInnerCP.java"></compile>
        <run class="LocalsFromInnerCP"></run>
    </ajc-test>
<ajc-test title="type pattern matching for inner classes (from Ken Horn)" num="64301" keywords="from-resolved_105" dir="abctests/new">
        <compile files="test/TypePat.java"></compile>
        <run class="test.TypePat"></run>
    </ajc-test>
<ajc-test title="Locals inside other locals, ordering of processing [eh]" num="651" keywords="from-resolved_105" dir="pureJava" abccomment="Verify error in abc and j2j (when --app used).                   Reported to Jennifer, July 1/04 LJH, Fixed July 2/04">
        <compile files="LocalInners2.java"></compile>
        <run class="LocalInners2"></run>
    </ajc-test>
<ajc-test title="import any inner from interface implementor" pr="862" num="740" keywords="purejava" dir="new/PR862" abccomment="it is not legal to import inner classes">
        <compile files="pack/ImportInnerFromInterfaceImplementor.java">
          <dir-changes added="pack.ImportInnerFromInterfaceImplementor"></dir-changes>
        </compile>
        <run class="pack.ImportInnerFromInterfaceImplementor"></run>
    </ajc-test>
<ajc-test title="problems with finalize call" pr="30026" num="752" dir="bugs">
        <compile files="Finalizer.java">
            <message line="22" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="illegal name binding in around cflow" pr="660" num="769" keywords="from-resolved_104,knownLimitation" dir="new" abccomment="ajc doesn't report errors either and then breaks at runtime,                   just like we do">
        <compile files="ArgsInCflowCf.java">
            <message line="19" kind="error"></message>
            <message line="29" kind="error"></message>
            <message line="35" kind="error"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare soft and throw statements" pr="34925" num="77201" dir="abctests/bugs" abccomment="Cloned from 772, removing the offending parentheses.                   ODM 17/08/04">
        <compile files="ConvertToUnchecked.java"></compile>
        <run class="ConvertToUnchecked"></run>
    </ajc-test>
<ajc-test title="Ajc 1.1 rc1 java.lang.VerifyError with messy arounds - fixed" pr="36056" num="78401" dir="abctests/bugs/messyAround" abccomment="we only report the warning in one location. Also,           the main class is not declared public, which makes    this fail from the test harness. Cloned. PA">
        <compile files="aspects/Trace.aj,cap/OptionList.java,DebugTrace.aj">
                <ajcmessage line="102" kind="warning"></ajcmessage>
        	<ajcmessage line="124" kind="warning"></ajcmessage>
        	<ajcmessage line="138" kind="warning"></ajcmessage>
		<message line="102" kind="warning"></message>
        	<message line="124" kind="warning"></message>
        </compile>
        <run class="cap.OptionList"></run>
    </ajc-test>
<ajc-test title="advise join points in subclass of empty interface" pr="36778" num="786" dir="new">
        <compile files="EmptyInterface.java"></compile>
        <run class="EmptyInterface"></run>
    </ajc-test>
<ajc-test title="can't put around advice on interface static initializer" pr="36778" num="787" dir="new" comment="this tests for a nice message given a compiler limitation" abccomment="we just produce a warning, and just in one place">
        <compile files="EmptyInterfaceCE.java">
        	<ajcmessage line="20" kind="error"></ajcmessage>
        	<ajcmessage line="23" kind="error"></ajcmessage>
        	<message line="20" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="arrays via Class.forName()" num="792" dir="new" comment="this is a pureJava test, but we always want to run it">
        <compile files="ClassForName.java"></compile>
        <run class="ClassForName"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 classes" pr="37020" num="794" dir="new/binaryWarnings/src">
        <compile files="aspects/MainWarnings.java,../injars/app-javac-1.4.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 classes" pr="37023" num="795" dir="new/binaryWarnings/src" abccomment="we fail because of an off-by one error on the handler line number info">
        <compile files="aspects/MainWarnings.java,../injars/app-ajc-1.1.jar">
        	<message text="staticinitialization(Main)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="6" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="8" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.staticString)" line="12" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.staticString)" line="14" kind="warning" file="app/Main.java"></message>
        	<message text="call(Main.new())" line="16" kind="warning" file="app/Main.java"></message>
        	<message text="call(void Main.go(String))" line="19" kind="warning" file="app/Main.java"></message>
        	<message text="initialization(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="23" kind="warning" file="app/Main.java"></message>
        	<message text="execution(void Main.go(String))" line="26" kind="warning" file="app/Main.java"></message>
        	<message text="get(String Main.s)" line="29" kind="warning" file="app/Main.java"></message>
        	<message text="set(String Main.s)" line="31" kind="warning" file="app/Main.java"></message>
        	<message text="D.go withincode(void Main.go(String))" line="32" kind="warning" file="app/Main.java"></message>
        	<message text="handler(RuntimeException)" line="33" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.go(String))" line="35" kind="warning" file="app/Main.java"></message>
        	<message text="withincode(void Main.stop())" line="42" kind="warning" file="app/Main.java"></message>
        	<message text="preinitialization(app.C.new())" line="50" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
	</ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary ajc 1.1 classes" pr="37020" num="796" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start" abccomment="ideally we'd get the message at line 6, but 12 is about the best we can do.                      6 isn't reported in the bytecode anywhere, so there's no hope of that.                      ajc does the same as us.">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-ajc-1.1.jar">
        	<ajcmessage text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></ajcmessage>
        	<ajcmessage text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></ajcmessage>        	  
        	<message text="execution(void MainExecStartLines.main(String[]))" line="12" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="declare error on handler/method execution with no code on binary javac 1.4 classes" pr="37020" num="797" keywords="knownLimitation" dir="new/binaryWarnings/src" comment="source loc of binary jp depends on first code, not block start; XXX need javac inlining example" abccomment="ideally we'd get the message at line 6 and 17, but 12 and 20 is the best we can do                     given what the bytecode has. ajc does the same as us.">
        <compile files="aspects/MainExecStartLinesErrors.java,../injars/appStartLines-javac-1.4.jar">
        	<ajcmessage text="execution(void MainExecStartLines.main(String[]))" line="6" kind="error" file="app/MainExecStartLines.java"></ajcmessage>
        	<ajcmessage text="handler(RuntimeException)" line="17" kind="error" file="app/MainExecStartLines.java"></ajcmessage>        	  
        	<message text="execution(void MainExecStartLines.main(String[]))" line="12" kind="error" file="app/MainExecStartLines.java"></message>
        	<message text="handler(RuntimeException)" line="20" kind="error" file="app/MainExecStartLines.java"></message>        	  
        </compile>
    </ajc-test>
<ajc-test title="perthis and inline arounds" pr="37152" num="805" dir="bugs/inlineAround">
        <compile files="aspect1/Base.java,aspect2/Concrete.java,p1/Main.java">
        </compile>
        <run class="p1.Main"></run>
    </ajc-test>
<ajc-test title="Weaver fails with NPE for very large source files " pr="37325" num="808" dir="bugs">
        <compile files="LongFile.java"></compile>
        <run class="LongFile"></run>
    </ajc-test>
<ajc-test title="CLE: no dir specified for sourceroots" num="812" keywords="command-line-error" dir="harness" comment="XXX test skipped - harness ignores -sourceroot option">
        <compile options="-sourceroots" files="ErrorTest.java" badInput="true">
            <message text="no sources specified" kind="error"></message>
            <message text="bad sourceroot" kind="error"></message>
            <message text="Usage" kind="abort"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare warnings on binary javac 1.4 main - constructor execution" pr="37020" num="823" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-javac-1.4.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="declare warnings on binary ajc 1.1 main - constructor execution" pr="37020" num="824" keywords="knownLimitation" dir="new/binaryWarnings/src">
        <compile files="aspects/ConstructorExecutionWarning.java,../injars/app-ajc-1.1.jar">
        	<message text="execution(Main.new())" line="23" kind="warning" file="app/Main.java"></message>
        </compile>
        <run class="app.Main"></run>
    </ajc-test>
<ajc-test title="SUID: Declare extends" pr="41181" num="938" dir="bugs/serialVersionUID" comment="OK">
		<compile files="Test.java, Util.java"></compile>
        <run class="Test"></run>
		<compile options="-Xlint:warning" files="Test.java, Util.java, DeclareExtends.aj"></compile>
        <run class="Util"></run>
	</ajc-test>
<ajc-test title="-deprecation not working?" pr="54098" num="951" dir="bugs/deprecated" abccomment="we don't support deprecation">
    	 <compile options="-deprecation" files="Deprecation.java, Deprecated.java">
            <message line="5" kind="warning"></message>
            <message line="6" kind="warning"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare error binary-weaving NPE 1" pr="57432" num="961" dir="bugs/systemouts" abccomment="we correctly report two errors at line 13">
        <compile files="injar-debug.jar,A.java">
			<ajcmessage line="12" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="13" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="20" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="22" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="23" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="27" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="28" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="29" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="30" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="31" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="32" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="33" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="34" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="35" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="36" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="37" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="38" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="39" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="40" kind="error" file="X.java"></ajcmessage>
			<ajcmessage line="41" kind="error" file="X.java"></ajcmessage>
			<message line="12" kind="error" file="X.java"></message>
			<message line="13" kind="error" file="X.java"></message>
			<message line="13" kind="error" file="X.java"></message>
			<message line="20" kind="error" file="X.java"></message>
			<message line="22" kind="error" file="X.java"></message>
			<message line="23" kind="error" file="X.java"></message>
			<message line="27" kind="error" file="X.java"></message>
			<message line="28" kind="error" file="X.java"></message>
			<message line="29" kind="error" file="X.java"></message>
			<message line="30" kind="error" file="X.java"></message>
			<message line="31" kind="error" file="X.java"></message>
			<message line="32" kind="error" file="X.java"></message>
			<message line="33" kind="error" file="X.java"></message>
			<message line="34" kind="error" file="X.java"></message>
			<message line="35" kind="error" file="X.java"></message>
			<message line="36" kind="error" file="X.java"></message>
			<message line="37" kind="error" file="X.java"></message>
			<message line="38" kind="error" file="X.java"></message>
			<message line="39" kind="error" file="X.java"></message>
			<message line="40" kind="error" file="X.java"></message>
			<message line="41" kind="error" file="X.java"></message>
        </compile>
    </ajc-test>
<ajc-test title="declare parents on binary classes needs to modify constructor calls 2" num="984" dir="abctests/bugs/declareparentsbinary">
       <compile files="BinaryClasses2.jar,Aspect.java">
           
           <message line="24" kind="error" file="BinaryClasses2.java"></message>
       </compile>
    </ajc-test>
<ajc-test title="declare parents referring to an otherwise unmentioned class" num="985" dir="abctests/bugs">
        <compile files="DeclareParentsRef.java"></compile>
    </ajc-test>
<ajc-test title="Matching int[].clone()" num="986" dir="abctests/bugs" abccomment="abc fails to parse 'call(* int[].clone())', ajc fails to advise it.         Both work fine with 'call(* Object.clone())'.">
	<compile files="IntArray.java"></compile>
	<run class="IntArray"></run>
    </ajc-test>
<ajc-test title="cast pointcut can interact badly with jimple type assignment" num="992" dir="abctests/bugs">
       <compile options="-ext,abc.eaj" files="cast.jar,CastAspect.java"></compile>
       <run class="Cast"></run>
    </ajc-test>
<ajc-test title="resolving anonymous classes inside classes with dollar signs" num="1001" dir="abctests/bugs">
         <compile files="ExtraAnon.java"></compile>
    </ajc-test>
<ajc-test title="Tracematches: Testing self-applying around TM-advice" num="1032" dir="abctests/tracematches">
        <compile options="-ext,abc.tm" files="AdviseSelf.java"></compile>
        <run class="AdviseSelf"></run>
    </ajc-test>
<ajc-test title="Class being woven twice when using -inpath" num="1208" dir="abctests/bugs/inpath">
        <compile sourceroots="aspects/" inpath="java/"></compile>
        <run class="Test"></run>
    </ajc-test>
<ajc-test title="lock/unlock pointcuts" num="1219" dir="abctests/eaj/lock_unlock">
        <compile options="-ext,abc.eaj,-debug,enableLockPointcuts" files="LockUnlock.java"></compile>
        <run class="LockUnlock"></run>
    </ajc-test>
<ajc-test title="JPI syntax - Inheritance2" num="1606" dir="abctests/jpi/simplesyntax">
        <compile options="-ext,abc.ja.jpi" files="InheritanceSyntax2.java">
        	<message line="8" kind="error"></message>
        	<message line="8" kind="error"></message>
        	<message line="8" kind="error"></message>
		</compile>
    </ajc-test>
 
</suite>
